(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common/http'),require('primeng/tooltip'),require('primeng/button'),require('@nuvem/angular-base'),require('primeng/blockui'),require('primeng/progressspinner'),require('@angular/common'),require('primeng/table'),require('primeng/api'),require('@angular/forms'),require('primeng/inputtext'),require('primeng/splitbutton'),require('primeng/multiselect'),require('primeng/checkbox'),require('primeng/dropdown'),require('primeng/paginator'),require('primeng/toast'),require('@angular/router'),require('primeng/confirmdialog'),require('primeng/calendar'),require('primeng/inputtextarea'),require('primeng/inputmask'),require('primeng/radiobutton'),require('@angular/cdk/scrolling'),require('primeng/autocomplete'),require('primeng/breadcrumb'),exports, require('@angular/common/http'), require('@angular/core'), require('@angular/common'), require('primeng/button'), require('primeng/tooltip'), require('primeng/blockui'), require('primeng/progressspinner'), require('primeng/splitbutton'), require('primeng/inputtext'), require('primeng/paginator'), require('primeng/table'), require('@nuvem/angular-base'), require('primeng/api'), require('primeng/dropdown'), require('@angular/forms'), require('primeng/checkbox'), require('primeng/multiselect'), require('rxjs'), require('rxjs/operators'), require('primeng/toast'), require('@angular/router'), require('primeng/calendar'), require('primeng/inputtextarea'), require('primeng/inputmask'), require('primeng/radiobutton'), require('primeng/confirmdialog'), require('primeng/autocomplete'), require('@angular/cdk/scrolling'), require('primeng/breadcrumb'), require('@angular/animations')) :
    typeof define === 'function' && define.amd ? define('@nuvem/primeng-components', ['@angular/core','@angular/common/http','primeng/tooltip','primeng/button','@nuvem/angular-base','primeng/blockui','primeng/progressspinner','@angular/common','primeng/table','primeng/api','@angular/forms','primeng/inputtext','primeng/splitbutton','primeng/multiselect','primeng/checkbox','primeng/dropdown','primeng/paginator','primeng/toast','@angular/router','primeng/confirmdialog','primeng/calendar','primeng/inputtextarea','primeng/inputmask','primeng/radiobutton','@angular/cdk/scrolling','primeng/autocomplete','primeng/breadcrumb','exports', '@angular/common/http', '@angular/core', '@angular/common', 'primeng/button', 'primeng/tooltip', 'primeng/blockui', 'primeng/progressspinner', 'primeng/splitbutton', 'primeng/inputtext', 'primeng/paginator', 'primeng/table', '@nuvem/angular-base', 'primeng/api', 'primeng/dropdown', '@angular/forms', 'primeng/checkbox', 'primeng/multiselect', 'rxjs', 'rxjs/operators', 'primeng/toast', '@angular/router', 'primeng/calendar', 'primeng/inputtextarea', 'primeng/inputmask', 'primeng/radiobutton', 'primeng/confirmdialog', 'primeng/autocomplete', '@angular/cdk/scrolling', 'primeng/breadcrumb', '@angular/animations'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ng.common.http,global.primeng.tooltip,global.primeng.button,global.nuvem.angularBase,global.primeng.blockui,global.primeng.progressspinner,global.ng.common,global.primeng.table,global.primeng.api,global.ng.forms,global.primeng.inputtext,global.primeng.splitbutton,global.primeng.multiselect,global.primeng.checkbox,global.primeng.dropdown,global.primeng.paginator,global.primeng.toast,global.ng.router,global.primeng.confirmdialog,global.primeng.calendar,global.primeng.inputtextarea,global.primeng.inputmask,global.primeng.radiobutton,global.ng.cdk.scrolling,global.primeng.autocomplete,global.primeng.breadcrumb,(global.nuvem = global.nuvem || {}, global.nuvem['primeng-components'] = {}), global.ng.common.http, global.ng.core, global.ng.common, global['primeng/button'], global.tooltip, global.blockui, global.progressspinner, global.splitbutton, global['primeng/inputtext'], global.paginator, global['primeng/table'], global['@nuvem/angular-base'], global['primeng/api'], global['primeng/dropdown'], global.ng.forms, global.checkbox, global.multiselect, global.rxjs, global.rxjs.operators, global['primeng/toast'], global.ng.router, global['primeng/calendar'], global['primeng/inputtextarea'], global.inputmask, global.radiobutton, global['primeng/confirmdialog'], global['primeng/autocomplete'], global.ng.cdk.scrolling, global.breadcrumb, global.ng.animations));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,ɵngcc7,ɵngcc8,ɵngcc9,ɵngcc10,ɵngcc11,ɵngcc12,ɵngcc13,ɵngcc14,ɵngcc15,ɵngcc16,ɵngcc17,ɵngcc18,ɵngcc19,ɵngcc20,ɵngcc21,ɵngcc22,ɵngcc23,ɵngcc24,ɵngcc25,ɵngcc26,exports, i1, i0, common, button, tooltip, blockui, progressspinner, splitbutton, inputtext, paginator, table, angularBase, i1$1, dropdown, forms, checkbox, multiselect, rxjs, operators, toast, router, calendar, inputtextarea, inputmask, radiobutton, confirmdialog, autocomplete, scrolling, breadcrumb, animations) { 
function DatatableComponent_basis_show_column_9_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "basis-show-column", 18);
    ɵngcc0.ɵɵlistener("updateVisibleColumns", function DatatableComponent_basis_show_column_9_Template_basis_show_column_updateVisibleColumns_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.updateVisibleColumns($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("columns", ctx_r0.columns);
} }
function DatatableComponent_ng_template_16_div_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 25);
    ɵngcc0.ɵɵelementStart(1, "span", 26);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r15 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r15.horizontalButtonsHeader);
} }
function DatatableComponent_ng_template_16_div_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c0 = function (a2, a3) { return { "horizontal-buttons": true, "p-sm-12": true, "p-g-8": a2, "p-g-12": a3 }; };
function DatatableComponent_ng_template_16_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 22);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_16_div_0_div_1_Template, 3, 1, "div", 23);
    ɵngcc0.ɵɵelementStart(2, "div", 2);
    ɵngcc0.ɵɵtemplate(3, DatatableComponent_ng_template_16_div_0_ng_container_3_Template, 1, 0, "ng-container", 24);
    ɵngcc0.ɵɵprojection(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12.showHorizontalButtonsHeader);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c0, ctx_r12.showHorizontalButtonsHeader, !ctx_r12.showHorizontalButtonsHeader));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r12.defaultButtons);
} }
function DatatableComponent_ng_template_16_th_2_p_sortIcon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "p-sortIcon", 29);
} if (rf & 2) {
    var col_r17 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("field", col_r17.field);
} }
var _c1 = function (a0) { return { "display": a0 }; };
function DatatableComponent_ng_template_16_th_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 27);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_16_th_2_p_sortIcon_2_Template, 1, 1, "p-sortIcon", 28);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var col_r17 = ctx.$implicit;
    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("pSortableColumn", col_r17.sortable ? col_r17.field : null)("ngStyle", ɵngcc0.ɵɵpureFunction1(4, _c1, ctx_r13.visibleColumns[col_r17.field]));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", col_r17.header, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r17.sortable);
} }
function DatatableComponent_ng_template_16_tr_3_th_1_basis_filter_column_1_Template(rf, ctx) { if (rf & 1) {
    var _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "basis-filter-column", 34);
    ɵngcc0.ɵɵlistener("outputEvent", function DatatableComponent_ng_template_16_tr_3_th_1_basis_filter_column_1_Template_basis_filter_column_outputEvent_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); var col_r21 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r23 = ɵngcc0.ɵɵnextContext(3); return ctx_r23.filterColumn(col_r21.field, $event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var col_r21 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r22 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("listaOriginal", ctx_r22.filterSelectOptions)("lista", ctx_r22.filterSelectOptions)("field", col_r21.field)("updateFiltro", ctx_r22.updateFilterColumn)("filterType", col_r21.filterType)("tableType", ctx_r22.type)("customFilterOptions", ctx_r22.customFilterOptions);
} }
function DatatableComponent_ng_template_16_tr_3_th_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 32);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_16_tr_3_th_1_basis_filter_column_1_Template, 1, 7, "basis-filter-column", 33);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var col_r21 = ctx.$implicit;
    var ctx_r20 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r20.visibleColumns[col_r21.field]));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r21.field != "actions");
} }
function DatatableComponent_ng_template_16_tr_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 30);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_16_tr_3_th_1_Template, 2, 4, "th", 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var columns_r11 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", columns_r11);
} }
function DatatableComponent_ng_template_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableComponent_ng_template_16_div_0_Template, 5, 6, "div", 19);
    ɵngcc0.ɵɵelementStart(1, "tr");
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_16_th_2_Template, 3, 6, "th", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, DatatableComponent_ng_template_16_tr_3_Template, 2, 1, "tr", 21);
} if (rf & 2) {
    var columns_r11 = ctx.$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.defaultButtons && !ctx_r2.verticalButtons);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", columns_r11);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.filterOnColumn);
} }
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 41);
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(3).$implicit;
    var rowData_r28 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("innerHTML", rowData_r28[col_r33.field], ɵngcc0.ɵɵsanitizeHtml);
} }
var _c2 = function (a0, a1) { return { rowData: a0, col: a1 }; };
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 42);
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(3).$implicit;
    var rowData_r28 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r33.bodyTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c2, rowData_r28, col_r33));
} }
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_1_span_1_Template, 1, 1, "span", 39);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_1_ng_container_2_Template, 1, 5, "ng-container", 40);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !col_r33.bodyTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r33.bodyTemplate);
} }
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_2_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 41);
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(4).$implicit;
    var rowData_r28 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("innerHTML", rowData_r28[col_r33.field], ɵngcc0.ɵɵsanitizeHtml);
} }
var _c3 = function () { return { "width": "100%" }; };
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_2_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r55 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 46);
    ɵngcc0.ɵɵelementStart(1, "div", 47);
    ɵngcc0.ɵɵelementStart(2, "div", 46);
    ɵngcc0.ɵɵelementStart(3, "span", 48);
    ɵngcc0.ɵɵelementStart(4, "input", 49);
    ɵngcc0.ɵɵlistener("ngModelChange", function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_2_div_1_Template_input_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r55); var col_r33 = ɵngcc0.ɵɵnextContext(4).$implicit; var rowData_r28 = ɵngcc0.ɵɵnextContext().$implicit; return (rowData_r28[col_r33.field] = $event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "label");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(4).$implicit;
    var rowData_r28 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(4, _c3));
    ɵngcc0.ɵɵproperty("ngModel", rowData_r28[col_r33.field]);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(col_r33.header);
} }
var _c4 = function (a0, a1) { return { "rowData": a0, "col": a1 }; };
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 42);
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(4).$implicit;
    var rowData_r28 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r33.inputTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c4, rowData_r28, col_r33));
} }
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_2_span_0_Template, 1, 1, "span", 39);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_2_div_1_Template, 7, 5, "div", 45);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_2_ng_container_2_Template, 1, 5, "ng-container", 40);
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngIf", !col_r33.outputTemplate && col_r33.editable == false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !col_r33.inputTemplate && col_r33.editable != false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r33.inputTemplate);
} }
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_3_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 41);
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(4).$implicit;
    var rowData_r28 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("innerHTML", rowData_r28[col_r33.field], ɵngcc0.ɵɵsanitizeHtml);
} }
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 42);
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(4).$implicit;
    var rowData_r28 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r33.outputTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c2, rowData_r28, col_r33));
} }
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_3_span_0_Template, 1, 1, "span", 39);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_3_ng_container_1_Template, 1, 5, "ng-container", 40);
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngIf", !col_r33.outputTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r33.outputTemplate);
} }
function DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "p-cellEditor");
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_2_Template, 3, 3, "ng-template", 43);
    ɵngcc0.ɵɵtemplate(3, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_ng_template_3_Template, 2, 2, "ng-template", 44);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} }
function DatatableComponent_ng_template_17_ng_container_1_td_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 32);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_1_Template, 3, 2, "ng-container", 15);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_17_ng_container_1_td_1_ng_container_2_Template, 4, 0, "ng-container", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r35 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(3, _c1, ctx_r35.visibleColumns[col_r33.field]));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r35.editMode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r35.editMode);
} }
var _c5 = function (a0) { return { rowData: a0 }; };
function DatatableComponent_ng_template_17_ng_container_1_td_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 42);
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var rowData_r28 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r33.outputTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c5, rowData_r28));
} }
function DatatableComponent_ng_template_17_ng_container_1_td_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 50);
    ɵngcc0.ɵɵelementStart(1, "basis-action-button");
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_17_ng_container_1_td_2_ng_container_2_Template, 1, 4, "ng-container", 40);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var col_r33 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", col_r33.outputTemplate);
} }
function DatatableComponent_ng_template_17_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_17_ng_container_1_td_1_Template, 3, 5, "td", 37);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_17_ng_container_1_td_2_Template, 3, 1, "td", 38);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var col_r33 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r33.field != "actions");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r33.field == "actions");
} }
var _c6 = function (a0) { return { "editing": a0 }; };
function DatatableComponent_ng_template_17_Template(rf, ctx) { if (rf & 1) {
    var _r75 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 35);
    ɵngcc0.ɵɵlistener("mouseover", function DatatableComponent_ng_template_17_Template_tr_mouseover_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r75); var ctx_r74 = ɵngcc0.ɵɵnextContext(); return ctx_r74.editarLinhaOver($event); })("mouseleave", function DatatableComponent_ng_template_17_Template_tr_mouseleave_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r75); var ctx_r76 = ɵngcc0.ɵɵnextContext(); return ctx_r76.editarLinhaOut($event); });
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_17_ng_container_1_Template, 3, 2, "ng-container", 36);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var rowData_r28 = ctx.$implicit;
    var columns_r29 = ctx.columns;
    var editing_r30 = ctx.editing;
    ɵngcc0.ɵɵproperty("pSelectableRow", rowData_r28)("pContextMenuRow", rowData_r28)("pEditableRow", rowData_r28)("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c6, editing_r30));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", columns_r29);
} }
function DatatableComponent_18_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    var ctx_r77 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r77.emptyMessage, " ");
} }
function DatatableComponent_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableComponent_18_ng_template_0_Template, 1, 1, "ng-template");
} }
function DatatableComponent_p_footer_19_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p-footer");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.paginationFooterText(ctx_r5.footerMsg), " ");
} }
function DatatableComponent_div_20_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DatatableComponent_div_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 51);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_div_20_ng_container_1_Template, 1, 0, "ng-container", 24);
    ɵngcc0.ɵɵprojection(2, 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext();
    var _r7 = ɵngcc0.ɵɵreference(22);
    ɵngcc0.ɵɵstyleProp("position", ctx_r6.enableButtonsScroll ? "sticky" : "")("top", ctx_r6.enableButtonsScroll ? "15%" : "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r7);
} }
function DatatableComponent_ng_template_21_basis_datatable_button_0_Template(rf, ctx) { if (rf & 1) {
    var _r84 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "basis-datatable-button", 56);
    ɵngcc0.ɵɵlistener("click", function DatatableComponent_ng_template_21_basis_datatable_button_0_Template_basis_datatable_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r84); var ctx_r83 = ɵngcc0.ɵɵnextContext(2); return ctx_r83.onClick("edit", $event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r79 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("horizontal-button", !ctx_r79.verticalButtons);
    ɵngcc0.ɵɵproperty("bTooltip", ctx_r79.selectedRow != null ? "Editar" : "Escolha um registro para editar.")("disabled", ctx_r79.selectedRow == null);
} }
function DatatableComponent_ng_template_21_basis_datatable_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r86 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "basis-datatable-button", 57);
    ɵngcc0.ɵɵlistener("click", function DatatableComponent_ng_template_21_basis_datatable_button_1_Template_basis_datatable_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r86); var ctx_r85 = ɵngcc0.ɵɵnextContext(2); return ctx_r85.onClick("view", $event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r80 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("horizontal-button", !ctx_r80.verticalButtons);
    ɵngcc0.ɵɵproperty("bTooltip", ctx_r80.selectedRow != null ? "Visualizar" : "Escolha um registro para visualizar.")("disabled", ctx_r80.selectedRow == null);
} }
function DatatableComponent_ng_template_21_basis_datatable_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r88 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "basis-datatable-button", 58);
    ɵngcc0.ɵɵlistener("click", function DatatableComponent_ng_template_21_basis_datatable_button_2_Template_basis_datatable_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r88); var ctx_r87 = ɵngcc0.ɵɵnextContext(2); return ctx_r87.onClick("delete", $event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r81 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("horizontal-button", !ctx_r81.verticalButtons);
    ɵngcc0.ɵɵproperty("bTooltip", ctx_r81.selectedRow != null ? "Excluir" : "Escolha um registro para excluir.")("disabled", ctx_r81.selectedRow == null);
} }
function DatatableComponent_ng_template_21_datatable_splitbutton_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "datatable-splitbutton", 59);
} if (rf & 2) {
    var ctx_r82 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r82.splitButton.class);
    ɵngcc0.ɵɵproperty("icon", ctx_r82.splitButton.icon)("items", ctx_r82.splitButton.itens)("label", ctx_r82.splitButton.label)("method", ctx_r82.splitButton.method);
} }
function DatatableComponent_ng_template_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableComponent_ng_template_21_basis_datatable_button_0_Template, 1, 4, "basis-datatable-button", 52);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_21_basis_datatable_button_1_Template, 1, 4, "basis-datatable-button", 53);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_21_basis_datatable_button_2_Template, 1, 4, "basis-datatable-button", 54);
    ɵngcc0.ɵɵtemplate(3, DatatableComponent_ng_template_21_datatable_splitbutton_3_Template, 1, 6, "datatable-splitbutton", 55);
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r8.disableEdit && ctx_r8.checkRolesToButton("rulesToShowView") && ctx_r8.checkRolesToButton("rulesToHideView"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r8.disableView && ctx_r8.checkRolesToButton("rulesToShowEdit") && ctx_r8.checkRolesToButton("rulesToHideEdit"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r8.disableDelete && ctx_r8.checkRolesToButton("rulesToShowDelete") && ctx_r8.checkRolesToButton("rulesToHideDelete"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.splitButton);
} }
var _c7 = [[["horizontalButtons"]], [["basis-datatable-button"]]];
var _c8 = function (a0) { return { "active": a0 }; };
var _c9 = function (a0, a1, a2, a3) { return { "p-col-11": a0, "p-col-12": a1, "edicao-tabela": a2, "editing-row": a3 }; };
var _c10 = ["horizontalButtons", "basis-datatable-button"];
var _c11 = function () { return { width: "100%" }; };
function FilterColumn_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "span", 4);
    ɵngcc0.ɵɵelementStart(4, "input", 5);
    ɵngcc0.ɵɵlistener("input", function FilterColumn_div_1_Template_input_input_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.filtrar($event); })("ngModelChange", function FilterColumn_div_1_Template_input_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.filtro = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "label");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(4, _c11));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r0.filtro);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.header ? ctx_r0.header : "Filtro");
} }
var _c12 = function () { return { "width": "100%", "vertical-align": "top" }; };
var _c13 = function () { return { standalone: true }; };
function FilterColumn_div_2_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "p-multiSelect", 6);
    ɵngcc0.ɵɵlistener("onChange", function FilterColumn_div_2_Template_p_multiSelect_onChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.filtrar($event); })("ngModelChange", function FilterColumn_div_2_Template_p_multiSelect_ngModelChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.filtro = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(7, _c12));
    ɵngcc0.ɵɵproperty("options", ctx_r1.getCustomFilterOptions())("defaultLabel", ctx_r1.header ? ctx_r1.header : "\u00A0")("optionLabel", "label")("ngModelOptions", ɵngcc0.ɵɵpureFunction0(8, _c13))("ngModel", ctx_r1.filtro);
} }
var _c14 = function (a0) { return { "rotate-90": a0 }; };
function ActionButtonComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    var _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementStart(2, "a", 5);
    ɵngcc0.ɵɵlistener("click", function ActionButtonComponent_div_3_Template_a_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r2); var ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.action = !ctx_r1.action; });
    ɵngcc0.ɵɵelement(3, "i", 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c14, ctx_r0.action));
} }
var _c15 = ["*"];
var _c16 = ["form-notification", ""];
function ErrorStackComponent_ng_template_0_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "th", 9);
    ɵngcc0.ɵɵtext(2, "Data");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "th", 9);
    ɵngcc0.ɵɵtext(4, "C\u00F3digo de identifica\u00E7\u00E3o");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "th");
    ɵngcc0.ɵɵtext(6, "Mensagem");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "th", 10);
    ɵngcc0.ɵɵtext(8, "A\u00E7\u00E3o");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function ErrorStackComponent_ng_template_0_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td", 9);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "date");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "td", 9);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "td");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "td", 10);
    ɵngcc0.ɵɵelement(9, "button", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var error_r6 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(3, 4, error_r6.createdAt, "dd/MM/y H:mm:ss"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(error_r6.correlationId || "Indispon\u00EDvel");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(error_r6.message);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("clipboard", error_r6.fullMessage);
} }
function ErrorStackComponent_ng_template_0_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td", 12);
    ɵngcc0.ɵɵtext(2, " Nenhum erro foi registrado at\u00E9 o momento. ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function ErrorStackComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "div", 3);
    ɵngcc0.ɵɵelementStart(2, "div", 4);
    ɵngcc0.ɵɵelementStart(3, "h1");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "p-table", 5);
    ɵngcc0.ɵɵtemplate(6, ErrorStackComponent_ng_template_0_ng_template_6_Template, 9, 0, "ng-template", 6);
    ɵngcc0.ɵɵtemplate(7, ErrorStackComponent_ng_template_0_ng_template_7_Template, 10, 7, "ng-template", 7);
    ɵngcc0.ɵɵtemplate(8, ErrorStackComponent_ng_template_0_ng_template_8_Template, 3, 0, "ng-template", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("value", ctx_r1.errors)("rowHover", true)("paginator", false)("rows", 5);
} }
function ErrorStackComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c17 = function (a0) { return [a0]; };
var _c18 = ["datatable"];
var _c19 = function () { return ["../save"]; };
function CrudListComponent_button_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "button", 5);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction0(1, _c19));
} }
var _c20 = [[["", "nForm", ""]], [["p-column"]]];
var _c21 = ["[nForm]", "p-column"];
var _c22 = ["input"];
var _c23 = ["nInputText", ""];
function InputTextComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r2.formControl);
} }
var _c24 = function (a0) { return { "ng-invalid ng-dirty": a0 }; };
var _c25 = ["nCalendar", ""];
function CalendarComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r2.formControl);
} }
var _c26 = ["nTextArea", ""];
function TextAreaComponent_nValidationMessage_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r2.formControl);
} }
var _c27 = ["nDropdown", ""];
function DropdownComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r2.formControl);
} }
var _c28 = ["nInputMask", ""];
function InputMaskComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r2.formControl);
} }
var _c29 = ["nCheck", ""];
function FormComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelement(1, "button", 4);
    ɵngcc0.ɵɵprojection(2, 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("label", ctx_r0.saveLabel)("disabled", ctx_r0.form.disabled || ctx_r0.form.invalid);
} }
var _c30 = ["*", [["", "nButton", ""]]];
var _c31 = ["*", "[nButton]"];
function ValidationMessageComponent_ng_container_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1, " campo obrigat\u00F3rio ");
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ValidationMessageComponent_ng_container_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" tamanho m\u00EDnimo ", ctx_r2.control.errors.minlength.requiredLength, " ");
} }
function ValidationMessageComponent_ng_container_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" tamanho m\u00E1ximo ", ctx_r3.control.errors.maxlength.requiredLength, " ");
} }
function ValidationMessageComponent_ng_container_0_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" valor m\u00EDnimo ", ctx_r4.control.errors.min.min, " ");
} }
function ValidationMessageComponent_ng_container_0_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" valor m\u00E1ximo ", ctx_r5.control.errors.max.max, " ");
} }
function ValidationMessageComponent_ng_container_0_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1, " campo inv\u00E1lido ");
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ValidationMessageComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵtemplate(2, ValidationMessageComponent_ng_container_0_ng_container_2_Template, 2, 0, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(3, ValidationMessageComponent_ng_container_0_ng_container_3_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(4, ValidationMessageComponent_ng_container_0_ng_container_4_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(5, ValidationMessageComponent_ng_container_0_ng_container_5_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(6, ValidationMessageComponent_ng_container_0_ng_container_6_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(7, ValidationMessageComponent_ng_container_0_ng_container_7_Template, 2, 0, "ng-container", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.control.errors.required);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.control.errors.minlength);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.control.errors.maxlength);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.control.errors.min);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.control.errors.max);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.control.errors.email || ctx_r0.control.errors.pattern);
} }
var _c32 = ["nAutoComplete", ""];
function AutoCompleteComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r2.formControl);
} }
function AutoCompleteCustomComponent_input_1_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 6, 7);
    ɵngcc0.ɵɵlistener("click", function AutoCompleteCustomComponent_input_1_Template_input_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onInputClick($event); })("input", function AutoCompleteCustomComponent_input_1_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onInput($event); })("keydown", function AutoCompleteCustomComponent_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.onKeydown($event); })("keyup", function AutoCompleteCustomComponent_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onKeyup($event); })("focus", function AutoCompleteCustomComponent_input_1_Template_input_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onInputFocus($event); })("blur", function AutoCompleteCustomComponent_input_1_Template_input_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onInputBlur($event); })("change", function AutoCompleteCustomComponent_input_1_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onInputChange($event); })("paste", function AutoCompleteCustomComponent_input_1_Template_input_paste_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.onInputPaste($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.inputStyleClass);
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r0.inputStyle)("autocomplete", ctx_r0.autocomplete)("ngClass", "p-inputtext p-component p-state-default p-corner-all p-autocomplete-input")("value", ctx_r0.inputFieldValue)("readonly", ctx_r0.readonly)("disabled", ctx_r0.disabled);
    ɵngcc0.ɵɵattribute("type", ctx_r0.type)("id", ctx_r0.inputId)("required", ctx_r0.required)("name", ctx_r0.name)("aria-expanded", ctx_r0.overlayVisible)("aria-activedescendant", "p-highlighted-option")("autofocus", ctx_r0.autofocus)("placeholder", ctx_r0.placeholder)("size", ctx_r0.size)("maxlength", ctx_r0.maxlength)("tabindex", ctx_r0.tabindex)("aria-label", ctx_r0.ariaLabel)("aria-labelledby", ctx_r0.ariaLabelledBy)("aria-required", ctx_r0.required);
} }
function AutoCompleteCustomComponent_ul_2_li_2_span_2_Template(rf, ctx) { if (rf & 1) {
    var _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 19);
    ɵngcc0.ɵɵlistener("click", function AutoCompleteCustomComponent_ul_2_li_2_span_2_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); ɵngcc0.ɵɵnextContext(); var _r19 = ɵngcc0.ɵɵreference(1); var ctx_r23 = ɵngcc0.ɵɵnextContext(2); return ctx_r23.removeItem(_r19); });
    ɵngcc0.ɵɵelementEnd();
} }
function AutoCompleteCustomComponent_ul_2_li_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 20);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var val_r18 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r21 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r21.resolveFieldData(val_r18));
} }
function AutoCompleteCustomComponent_ul_2_li_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c33 = function (a0) { return { $implicit: a0 }; };
function AutoCompleteCustomComponent_ul_2_li_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 14, 15);
    ɵngcc0.ɵɵtemplate(2, AutoCompleteCustomComponent_ul_2_li_2_span_2_Template, 1, 0, "span", 16);
    ɵngcc0.ɵɵtemplate(3, AutoCompleteCustomComponent_ul_2_li_2_span_3_Template, 2, 1, "span", 17);
    ɵngcc0.ɵɵtemplate(4, AutoCompleteCustomComponent_ul_2_li_2_ng_container_4_Template, 1, 0, "ng-container", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var val_r18 = ctx.$implicit;
    var ctx_r16 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r16.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r16.selectedItemTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r16.selectedItemTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(4, _c33, val_r18));
} }
var _c34 = function (a0, a1) { return { "p-disabled": a0, "p-focus": a1 }; };
function AutoCompleteCustomComponent_ul_2_Template(rf, ctx) { if (rf & 1) {
    var _r27 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ul", 8, 9);
    ɵngcc0.ɵɵlistener("click", function AutoCompleteCustomComponent_ul_2_Template_ul_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r27); var _r17 = ɵngcc0.ɵɵreference(5); return _r17.focus(); });
    ɵngcc0.ɵɵtemplate(2, AutoCompleteCustomComponent_ul_2_li_2_Template, 5, 6, "li", 10);
    ɵngcc0.ɵɵelementStart(3, "li", 11);
    ɵngcc0.ɵɵelementStart(4, "input", 12, 13);
    ɵngcc0.ɵɵlistener("input", function AutoCompleteCustomComponent_ul_2_Template_input_input_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28.onInput($event); })("click", function AutoCompleteCustomComponent_ul_2_Template_input_click_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.onInputClick($event); })("keydown", function AutoCompleteCustomComponent_ul_2_Template_input_keydown_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r30 = ɵngcc0.ɵɵnextContext(); return ctx_r30.onKeydown($event); })("keyup", function AutoCompleteCustomComponent_ul_2_Template_input_keyup_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r31 = ɵngcc0.ɵɵnextContext(); return ctx_r31.onKeyup($event); })("focus", function AutoCompleteCustomComponent_ul_2_Template_input_focus_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r32 = ɵngcc0.ɵɵnextContext(); return ctx_r32.onInputFocus($event); })("blur", function AutoCompleteCustomComponent_ul_2_Template_input_blur_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.onInputBlur($event); })("change", function AutoCompleteCustomComponent_ul_2_Template_input_change_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.onInputChange($event); })("paste", function AutoCompleteCustomComponent_ul_2_Template_input_paste_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); var ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35.onInputPaste($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(19, _c34, ctx_r1.disabled, ctx_r1.focus));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.value);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.inputStyleClass);
    ɵngcc0.ɵɵproperty("disabled", ctx_r1.disabled)("readonly", ctx_r1.readonly)("autocomplete", ctx_r1.autocomplete)("ngStyle", ctx_r1.inputStyle)("ngClass", "p-inputtext p-component p-state-default p-corner-all p-autocomplete-input");
    ɵngcc0.ɵɵattribute("type", ctx_r1.type)("id", ctx_r1.inputId)("placeholder", ctx_r1.value && ctx_r1.value.length ? null : ctx_r1.placeholder)("tabindex", ctx_r1.tabindex)("autofocus", ctx_r1.autofocus)("aria-label", ctx_r1.ariaLabel)("aria-labelledby", ctx_r1.ariaLabelledBy)("aria-required", ctx_r1.required)("aria-expanded", ctx_r1.overlayVisible)("aria-activedescendant", "p-highlighted-option");
} }
function AutoCompleteCustomComponent_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 21);
} }
function AutoCompleteCustomComponent_button_4_Template(rf, ctx) { if (rf & 1) {
    var _r38 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 22, 23);
    ɵngcc0.ɵɵlistener("click", function AutoCompleteCustomComponent_button_4_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r38); var ctx_r37 = ɵngcc0.ɵɵnextContext(); return ctx_r37.handleDropdownClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("icon", ctx_r3.dropdownIcon)("disabled", ctx_r3.disabled);
    ɵngcc0.ɵɵattribute("tabindex", ctx_r3.tabindex);
} }
function AutoCompleteCustomComponent_div_5_ng_container_3_p_autoCompleteItem_1_Template(rf, ctx) { if (rf & 1) {
    var _r48 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "p-autoCompleteItem", 30);
    ɵngcc0.ɵɵlistener("highlightOptionChange", function AutoCompleteCustomComponent_div_5_ng_container_3_p_autoCompleteItem_1_Template_p_autoCompleteItem_highlightOptionChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r48); var ctx_r47 = ɵngcc0.ɵɵnextContext(3); return ctx_r47.highlightOption = $event; })("onClick", function AutoCompleteCustomComponent_div_5_ng_container_3_p_autoCompleteItem_1_Template_p_autoCompleteItem_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r48); var ctx_r49 = ɵngcc0.ɵɵnextContext(3); return ctx_r49.selectItem($event.option); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var option_r45 = ctx.$implicit;
    var idx_r46 = ctx.index;
    var ctx_r44 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("option", option_r45)("highlightOption", ctx_r44.highlightOption)("index", idx_r46)("itemSize", ctx_r44.itemSize)("template", ctx_r44.itemTemplate)("resolvedFieldData", ctx_r44.resolveFieldData(option_r45));
} }
function AutoCompleteCustomComponent_div_5_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AutoCompleteCustomComponent_div_5_ng_container_3_p_autoCompleteItem_1_Template, 1, 6, "p-autoCompleteItem", 29);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r40 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r40.suggestions);
} }
function AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r55 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "p-autoCompleteItem", 30);
    ɵngcc0.ɵɵlistener("highlightOptionChange", function AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_ng_container_1_Template_p_autoCompleteItem_highlightOptionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r55); var ctx_r54 = ɵngcc0.ɵɵnextContext(4); return ctx_r54.highlightOption = $event; })("onClick", function AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_ng_container_1_Template_p_autoCompleteItem_onClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r55); var ctx_r56 = ɵngcc0.ɵɵnextContext(4); return ctx_r56.selectItem($event.option); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var option_r52 = ctx.$implicit;
    var idx_r53 = ctx.index;
    var ctx_r51 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("option", option_r52)("highlightOption", ctx_r51.highlightOption)("index", idx_r53)("itemSize", ctx_r51.itemSize)("template", ctx_r51.itemTemplate)("resolvedFieldData", ctx_r51.resolveFieldData(option_r52));
} }
var _c35 = function (a0) { return { height: a0 }; };
function AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "cdk-virtual-scroll-viewport", 32);
    ɵngcc0.ɵɵtemplate(1, AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_ng_container_1_Template, 2, 6, "ng-container", 33);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r50 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(3, _c35, ctx_r50.scrollHeight))("itemSize", ctx_r50.itemSize);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkVirtualForOf", ctx_r50.suggestions);
} }
function AutoCompleteCustomComponent_div_5_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_Template, 2, 5, "cdk-virtual-scroll-viewport", 31);
} if (rf & 2) {
    var ctx_r42 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r42.virtualScroll && ctx_r42.suggestions && ctx_r42.suggestions.length);
} }
function AutoCompleteCustomComponent_div_5_li_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 34);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r43 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r43.emptyMessage);
} }
var _c36 = "p-autocomplete-panel p-component p-component-content p-corner-all p-shadow";
var _c37 = function () { return [_c36]; };
var _c38 = function (a0, a1) { return { showTransitionParams: a0, hideTransitionParams: a1 }; };
var _c39 = function (a1) { return { value: "visible", params: a1 }; };
function AutoCompleteCustomComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    var _r58 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 0, 24);
    ɵngcc0.ɵɵlistener("@overlayAnimation.start", function AutoCompleteCustomComponent_div_5_Template_div_animation_overlayAnimation_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r58); var ctx_r57 = ɵngcc0.ɵɵnextContext(); return ctx_r57.onOverlayAnimationStart($event); });
    ɵngcc0.ɵɵelementStart(2, "ul", 25);
    ɵngcc0.ɵɵtemplate(3, AutoCompleteCustomComponent_div_5_ng_container_3_Template, 2, 1, "ng-container", 26);
    ɵngcc0.ɵɵtemplate(4, AutoCompleteCustomComponent_div_5_ng_template_4_Template, 1, 1, "ng-template", null, 27, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(6, AutoCompleteCustomComponent_div_5_li_6_Template, 2, 1, "li", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r41 = ɵngcc0.ɵɵreference(5);
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r4.panelStyleClass);
    ɵngcc0.ɵɵstyleProp("max-height", ctx_r4.virtualScroll ? "auto" : ctx_r4.scrollHeight || "auto");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction0(10, _c37))("ngStyle", ctx_r4.panelStyle)("@overlayAnimation", ɵngcc0.ɵɵpureFunction1(14, _c39, ɵngcc0.ɵɵpureFunction2(11, _c38, ctx_r4.showTransitionOptions, ctx_r4.hideTransitionOptions)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r4.virtualScroll)("ngIfElse", _r41);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.noResults && ctx_r4.emptyMessage);
} }
var _c40 = function (a1, a2) { return { "p-autocomplete p-component": true, "p-autocomplete-dd": a1, "p-autocomplete-multiple": a2 }; };
function AutoCompleteItem_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.resolvedFieldData);
} }
function AutoCompleteItem_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c41 = function (a1) { return { "p-autocomplete-list-item p-corner-all": true, "p-highlight": a1 }; };
var _c42 = function (a0) { return { "height": a0, "display": "table", "width": "100%" }; };
var _c43 = function (a0, a1) { return { $implicit: a0, index: a1 }; };
var _c44 = ["nAutoCompleteMultiple", ""];
function AutoCompleteMultipleComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r2.formControl);
} }
function MenuComponent_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "li", 2);
} if (rf & 2) {
    var item_r1 = ctx.$implicit;
    var i_r2 = ctx.index;
    ɵngcc0.ɵɵproperty("item", item_r1)("index", i_r2);
} }
var _c45 = ["submenu", ""];
function SubMenuComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "span", 3);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.item.label);
} }
function SubMenuComponent_a_1_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r4.item.badgeClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.item.badge);
} }
function SubMenuComponent_a_1_i_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 9);
} }
function SubMenuComponent_a_1_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 4);
    ɵngcc0.ɵɵlistener("click", function SubMenuComponent_a_1_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.itemClick($event); })("keydown.enter", function SubMenuComponent_a_1_Template_a_keydown_enter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.itemClick($event); })("mouseenter", function SubMenuComponent_a_1_Template_a_mouseenter_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.onMouseEnter(); });
    ɵngcc0.ɵɵelement(1, "i", 5);
    ɵngcc0.ɵɵelementStart(2, "span", 3);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SubMenuComponent_a_1_span_4_Template, 2, 2, "span", 6);
    ɵngcc0.ɵɵtemplate(5, SubMenuComponent_a_1_i_5_Template, 1, 0, "i", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.item.class)("pTooltip", ctx_r1.item.label)("tooltipDisabled", ctx_r1.active || !(ctx_r1.root && ctx_r1.menuService.isSlim() && !ctx_r1.menuService.isMobile));
    ɵngcc0.ɵɵattribute("href", ctx_r1.item.url, ɵngcc0.ɵɵsanitizeUrl)("target", ctx_r1.item.target)("tabindex", 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.item.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.item.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.item.badge && !ctx_r1.root);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.item.items);
} }
function SubMenuComponent_a_2_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r10.item.badgeClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r10.item.badge);
} }
function SubMenuComponent_a_2_i_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 9);
} }
var _c46 = function () { return { exact: true }; };
function SubMenuComponent_a_2_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 10);
    ɵngcc0.ɵɵlistener("click", function SubMenuComponent_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.itemClick($event); })("mouseenter", function SubMenuComponent_a_2_Template_a_mouseenter_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.onMouseEnter(); });
    ɵngcc0.ɵɵelement(1, "i", 5);
    ɵngcc0.ɵɵelementStart(2, "span", 3);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SubMenuComponent_a_2_span_4_Template, 2, 2, "span", 6);
    ɵngcc0.ɵɵtemplate(5, SubMenuComponent_a_2_i_5_Template, 1, 0, "i", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("routerLink", ctx_r2.item.routerLink)("routerLinkActiveOptions", ɵngcc0.ɵɵpureFunction0(11, _c46))("ngClass", ctx_r2.item.class)("pTooltip", ctx_r2.item.label)("tooltipDisabled", ctx_r2.active || !(ctx_r2.root && ctx_r2.menuService.isSlim() && !ctx_r2.menuService.isMobile));
    ɵngcc0.ɵɵattribute("target", ctx_r2.item.target)("tabindex", 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r2.item.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.item.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.item.badge && !ctx_r2.root);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.item.items);
} }
function SubMenuComponent_ul_3_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "li", 12);
} if (rf & 2) {
    var child_r16 = ctx.$implicit;
    var i_r17 = ctx.index;
    var ctx_r15 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(child_r16.badgeClass);
    ɵngcc0.ɵɵproperty("item", child_r16)("index", i_r17)("parentKey", ctx_r15.key);
} }
function SubMenuComponent_ul_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul");
    ɵngcc0.ɵɵtemplate(1, SubMenuComponent_ul_3_ng_template_1_Template, 1, 5, "ng-template", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("@children", ctx_r3.root ? "visible" : ctx_r3.active ? "visibleAnimated" : "hiddenAnimated");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.item.items);
} }
'use strict';

    /**
     * Class DatatableService
     * @class
     */
    var DatatableService = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {HttpClient} http
         */
        function DatatableService(http) {
            this.http = http;
        }
        /**
         * search method
         * @param {LazyLoadEvent} event
         * @param {String} url
         * @param {number} rows
         * @param {boolean} orderInSort
         * @param {any} query
         * @return Observable
         */
        DatatableService.prototype.search = function (event, url, rows, orderInSort, query) {
            var page = 0;
            if (event !== undefined && event.first > 0) {
                page = Math.floor(event.first / rows);
            }
            var order = event.sortOrder === 1 ? 'asc' : 'desc';
            var params = new i1.HttpParams()
                .set('page', page.toString())
                .set('size', rows.toString());
            if (orderInSort) {
                if (event.sortField !== undefined) {
                    params = params.set('sort', event.sortField + ',' + order);
                }
            }
            else {
                if (event.sortField !== undefined) {
                    params = params
                        .set('sort', event.sortField)
                        .set('order', order);
                }
            }
            if ('string' === typeof query) {
                params = params.set('query', query);
            }
            if ('object' === typeof query) {
                Object.keys(query).forEach(function (key) { return params = params.set(key, query[key]); });
            }
            return this.http.get(url + "?" + params.toString(), { observe: 'response' });
        };
DatatableService.ɵfac = function DatatableService_Factory(t) { return new (t || DatatableService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatableService, [{
        type: i0.Injectable,
        args: [{
                providedIn: "root"
            }]
    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, null); })();
        return DatatableService;
    }());
    DatatableService.ɵprov = i0.ɵɵdefineInjectable({ factory: function DatatableService_Factory() { return new DatatableService(i0.ɵɵinject(i1.HttpClient)); }, token: DatatableService, providedIn: "root" });
    DatatableService.ctorParameters = function () { return [
        { type: i1.HttpClient }
    ]; };

    /**
     * Class ServerDataProvider
     * @class
     */
    var ServerDataProvider = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {DatatableService} datatableService
         * @param {DatatableComponent} component
         */
        function ServerDataProvider(datatableService, component) {
            var _this = this;
            this.datatableService = datatableService;
            this.component = component;
            this.component.pDatatableComponent.onLazyLoad.subscribe(function (event) { return _this.onLazyLoad(event); });
            this.component.pDatatableComponent.lazy = true;
        }
        /**
         * onLazyLoad method
         * @param {LazyLoadEvent} onLazyLoad
         * @returns void
         */
        ServerDataProvider.prototype.onLazyLoad = function (event) {
            this.currentLazyLoadEvent = event;
            this.load();
        };
        /**
         * load method
         * @param {any} query
         * @returns void
         */
        ServerDataProvider.prototype.load = function (query) {
            var _this = this;
            query = this.retrieveAndSaveQuery(query);
            this.component.startedLoading.emit();
            this.datatableService.search(this.currentLazyLoadEvent, this.component.url, this.component.pDatatableComponent.rows, this.component.orderInSort, query)
                .toPromise()
                .then(function (response) {
                _this.treatLoadResponse(response);
                _this.component.finishedLoading.emit();
            }, function (error) {
                _this.component.finishedLoading.emit(error);
            });
        };
        /**
         * treatLoadResponse method
         * @param {any} response
         * @return void
         */
        ServerDataProvider.prototype.treatLoadResponse = function (response) {
            var data = response.body;
            if (this.component.paginationParameters) {
                this.treatLoadResponseWithPaginationParameters(data);
            }
            else {
                this.treatLoadResponseWithoutPaginationParameters(response, data);
            }
        };
        /**
         * treatLoadResponseWithPaginationParameters method
         * @param {any} data
         * @returns void
         */
        ServerDataProvider.prototype.treatLoadResponseWithPaginationParameters = function (data) {
            var contentIndex = this.component.paginationParameters.contentIndex;
            var totalIndex = this.component.paginationParameters.totalElementsIndex;
            this.component.value = (data[contentIndex]) ? data[contentIndex] : data;
            this.component.pDatatableComponent.totalRecords = (data[totalIndex]) ? data[totalIndex] : this.component.value.length;
        };
        /**
         * treatLoadResponseWithoutPaginationParameters method
         * @param {any} response
         * @param {any} data
         * @returns void
         */
        ServerDataProvider.prototype.treatLoadResponseWithoutPaginationParameters = function (response, data) {
            if (response.headers.has('x-total-count')) {
                this.component.pDatatableComponent.totalRecords = parseInt(response.headers.get('x-total-count'), 10);
                this.component.value = data;
            }
            else {
                this.component.pDatatableComponent.totalRecords = data.totalElements;
                this.component.value = data.content;
            }
        };
        /**
         * retrieveAndSaveQuery method
         * @param {any} query
         * @returns any
         */
        ServerDataProvider.prototype.retrieveAndSaveQuery = function (query) {
            var oldQuery = this._query;
            var currentQuery = this.doRetrieveAndSaveQuery(query);
            this.resetToFirstPageIfQueryChanged(oldQuery, currentQuery);
            return currentQuery;
        };
        /**
         * doRetrieveAndSaveQuery method
         * @param {any} query
         * @returns any
         */
        ServerDataProvider.prototype.doRetrieveAndSaveQuery = function (query) {
            if ('object' === typeof query && query.value) {
                this._query = query.value;
            }
            else if (query) {
                this._query = query;
            }
            return this._query;
        };
        /**
         * resetToFirstPageIfQueryChanged method
         * @param {any} oldQuery
         * @param {any} currentQuery
         * @returns void
         */
        ServerDataProvider.prototype.resetToFirstPageIfQueryChanged = function (oldQuery, currentQuery) {
            if (oldQuery !== currentQuery) {
                this.currentLazyLoadEvent.first = 0;
                this.component.pDatatableComponent.first = 0;
            }
        };
        /**
         * reset method
         * @returns void
         */
        ServerDataProvider.prototype.reset = function () {
            this._query = undefined;
        };
        return ServerDataProvider;
    }());

    /**
     * Class MemoryDataProvider
     * @class
     */
    var MemoryDataProvider = /** @class */ (function () {
        /**
         * constructor method
         * @param {DatatableComponent} component
         * @constructor
         */
        function MemoryDataProvider(component) {
            this.component = component;
        }
        /**
         * load method
         * @param {any} query
         * @returns void
         */
        MemoryDataProvider.prototype.load = function (query) {
            this.component.pDatatableComponent.reset();
            for (var prop in query) {
                var matchMode = 'contains';
                if (query[prop] instanceof Array) {
                    matchMode = 'in';
                }
                this.component.pDatatableComponent.filter(query[prop], prop, matchMode);
            }
            this.component.pDatatableComponent.globalFilterFields = query;
            this.component.pDatatableComponent._filter();
        };
        /**
         * reset method
         * @returns void
         */
        MemoryDataProvider.prototype.reset = function () {
            this.component.pDatatableComponent.globalFilterFields = undefined;
        };
        return MemoryDataProvider;
    }());

    (function (DataProviderType) {
        DataProviderType["Memory"] = "memory";
        DataProviderType["Server"] = "server";
    })(exports.DataProviderType || (exports.DataProviderType = {}));
    /**
     * Class DataProviderFactory
     * @class
     */
    var DataProviderFactory = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {DatatableService} datatableService
         */
        function DataProviderFactory(datatableService) {
            this.datatableService = datatableService;
        }
        /**
         * create method
         * @param {DataProviderType} type
         * @param {DatatableComponent} component
         * @public
         * @returns DataProvider
         */
        DataProviderFactory.prototype.create = function (type, component) {
            if (exports.DataProviderType.Server === type) {
                return new ServerDataProvider(this.datatableService, component);
            }
            if (exports.DataProviderType.Memory === type) {
                return new MemoryDataProvider(component);
            }
        };
DataProviderFactory.ɵfac = function DataProviderFactory_Factory(t) { return new (t || DataProviderFactory)(ɵngcc0.ɵɵinject(DatatableService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataProviderFactory, [{
        type: i0.Injectable,
        args: [{
                providedIn: "root"
            }]
    }], function () { return [{ type: DatatableService }]; }, null); })();
        return DataProviderFactory;
    }());
    DataProviderFactory.ɵprov = i0.ɵɵdefineInjectable({ factory: function DataProviderFactory_Factory() { return new DataProviderFactory(i0.ɵɵinject(DatatableService)); }, token: DataProviderFactory, providedIn: "root" });
    DataProviderFactory.ctorParameters = function () { return [
        { type: DatatableService }
    ]; };

    /**
     * Class DatatableButtonComponent
     * @class
     */
    var DatatableButtonComponent = /** @class */ (function () {
        function DatatableButtonComponent() {
            /**
             * allowMultipleSelection property
             * @type {boolean}
             */
            this.allowMultipleSelection = true;
            /**
             * disabled property
             * @type boolean
             */
            this.disabled = false;
            /**
             * click property
             * @type {EventEmitter<any>}
             */
            this.click = new i0.EventEmitter();
        }
        /**
         * onClick method
         * @param {any} event
         * @return void
         */
        DatatableButtonComponent.prototype.onClick = function (event) {
            this.click.emit(event);
            event.stopPropagation();
        };
DatatableButtonComponent.ɵfac = function DatatableButtonComponent_Factory(t) { return new (t || DatatableButtonComponent)(); };
DatatableButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatableButtonComponent, selectors: [["basis-datatable-button"]], inputs: { allowMultipleSelection: "allowMultipleSelection", disabled: "disabled", icon: "icon", class: "class", bTooltip: "bTooltip", name: "name" }, outputs: { click: "click" }, decls: 2, vars: 6, consts: [[3, "pTooltip"], ["pRipple", "", "pButton", "", "type", "button", 3, "disabled", "icon", "click"]], template: function DatatableButtonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵlistener("click", function DatatableButtonComponent_Template_button_click_1_listener($event) { return ctx.onClick($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate("pTooltip", ctx.bTooltip);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("p-button-rounded p-mr-2 p-mb-2 ", ctx.class, "");
        ɵngcc0.ɵɵpropertyInterpolate("icon", ctx.icon);
        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
    } }, directives: [ɵngcc2.Tooltip, ɵngcc3.ButtonDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatableButtonComponent, [{
        type: i0.Component,
        args: [{
                selector: 'basis-datatable-button',
                template: "<p pTooltip=\"{{ bTooltip }}\">\n    <button pRipple\n        (click)=\"onClick($event)\" \n        [disabled]=\"disabled\" \n        pButton \n        type=\"button\" \n        icon=\"{{ icon }}\" \n        class=\"p-button-rounded p-mr-2 p-mb-2 {{ class }}\">\n    </button>\n</p>\n"
            }]
    }], function () { return []; }, { allowMultipleSelection: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], click: [{
            type: i0.Output
        }], icon: [{
            type: i0.Input
        }], class: [{
            type: i0.Input
        }], bTooltip: [{
            type: i0.Input
        }], name: [{
            type: i0.Input
        }] }); })();
        return DatatableButtonComponent;
    }());
    DatatableButtonComponent.propDecorators = {
        icon: [{ type: i0.Input }],
        class: [{ type: i0.Input }],
        bTooltip: [{ type: i0.Input }],
        name: [{ type: i0.Input }],
        allowMultipleSelection: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        click: [{ type: i0.Output }]
    };

    /**
     * Class DatatableClickEvent
     * @class
     */
    var DatatableClickEvent = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {string} button
         * @param {any} selection
         */
        function DatatableClickEvent(button, selection) {
            this.button = button;
            this.selection = selection;
        }
        return DatatableClickEvent;
    }());

    var Column = /** @class */ (function () {
        function Column() {
            this.filterType = 'text';
            this.exportable = true;
            this.resizable = true;
            this.sortFunction = new i0.EventEmitter();
        }
        Column.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.templates.forEach(function (item) {
                switch (item.getType()) {
                    case 'header':
                        _this.headerTemplate = item.template;
                        break;
                    case 'body':
                        _this.bodyTemplate = item.template;
                        break;
                    case 'footer':
                        _this.footerTemplate = item.template;
                        break;
                    case 'filter':
                        _this.filterTemplate = item.template;
                        break;
                    case 'editor':
                        _this.editorTemplate = item.template;
                        break;
                    case 'input':
                        _this.inputTemplate = item.template;
                        break;
                    case 'output':
                        _this.outputTemplate = item.template;
                        break;
                    default:
                        _this.bodyTemplate = item.template;
                        break;
                }
            });
        };
Column.ɵfac = function Column_Factory(t) { return new (t || Column)(); };
Column.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Column, selectors: [["p-column"]], contentQueries: function Column_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, i0.TemplateRef, 1);
        ɵngcc0.ɵɵcontentQuery(dirIndex, i1$1.PrimeTemplate, 0);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);
    } }, inputs: { filterType: "filterType", exportable: "exportable", resizable: "resizable", field: "field", colId: "colId", sortField: "sortField", filterField: "filterField", header: "header", footer: "footer", sortable: "sortable", editable: "editable", filter: "filter", filterMatchMode: "filterMatchMode", excludeGlobalFilter: "excludeGlobalFilter", rowspan: "rowspan", colspan: "colspan", scope: "scope", style: "style", styleClass: "styleClass", headerStyle: "headerStyle", headerStyleClass: "headerStyleClass", bodyStyle: "bodyStyle", bodyStyleClass: "bodyStyleClass", footerStyle: "footerStyle", footerStyleClass: "footerStyleClass", hidden: "hidden", expander: "expander", selectionMode: "selectionMode", filterPlaceholder: "filterPlaceholder", filterMaxlength: "filterMaxlength", frozen: "frozen" }, outputs: { sortFunction: "sortFunction" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Column, [{
        type: i0.Directive,
        args: [{
                selector: 'p-column'
            }]
    }], function () { return []; }, { filterType: [{
            type: i0.Input
        }], exportable: [{
            type: i0.Input
        }], resizable: [{
            type: i0.Input
        }], sortFunction: [{
            type: i0.Output
        }], field: [{
            type: i0.Input
        }], colId: [{
            type: i0.Input
        }], sortField: [{
            type: i0.Input
        }], filterField: [{
            type: i0.Input
        }], header: [{
            type: i0.Input
        }], footer: [{
            type: i0.Input
        }], sortable: [{
            type: i0.Input
        }], editable: [{
            type: i0.Input
        }], filter: [{
            type: i0.Input
        }], filterMatchMode: [{
            type: i0.Input
        }], excludeGlobalFilter: [{
            type: i0.Input
        }], rowspan: [{
            type: i0.Input
        }], colspan: [{
            type: i0.Input
        }], scope: [{
            type: i0.Input
        }], style: [{
            type: i0.Input
        }], styleClass: [{
            type: i0.Input
        }], headerStyle: [{
            type: i0.Input
        }], headerStyleClass: [{
            type: i0.Input
        }], bodyStyle: [{
            type: i0.Input
        }], bodyStyleClass: [{
            type: i0.Input
        }], footerStyle: [{
            type: i0.Input
        }], footerStyleClass: [{
            type: i0.Input
        }], hidden: [{
            type: i0.Input
        }], expander: [{
            type: i0.Input
        }], selectionMode: [{
            type: i0.Input
        }], filterPlaceholder: [{
            type: i0.Input
        }], filterMaxlength: [{
            type: i0.Input
        }], frozen: [{
            type: i0.Input
        }], templates: [{
            type: i0.ContentChildren,
            args: [i1$1.PrimeTemplate]
        }], template: [{
            type: i0.ContentChild,
            args: [i0.TemplateRef]
        }] }); })();
        return Column;
    }());
    Column.propDecorators = {
        field: [{ type: i0.Input }],
        colId: [{ type: i0.Input }],
        sortField: [{ type: i0.Input }],
        filterField: [{ type: i0.Input }],
        header: [{ type: i0.Input }],
        footer: [{ type: i0.Input }],
        sortable: [{ type: i0.Input }],
        editable: [{ type: i0.Input }],
        filter: [{ type: i0.Input }],
        filterMatchMode: [{ type: i0.Input }],
        filterType: [{ type: i0.Input }],
        excludeGlobalFilter: [{ type: i0.Input }],
        rowspan: [{ type: i0.Input }],
        colspan: [{ type: i0.Input }],
        scope: [{ type: i0.Input }],
        style: [{ type: i0.Input }],
        styleClass: [{ type: i0.Input }],
        exportable: [{ type: i0.Input }],
        headerStyle: [{ type: i0.Input }],
        headerStyleClass: [{ type: i0.Input }],
        bodyStyle: [{ type: i0.Input }],
        bodyStyleClass: [{ type: i0.Input }],
        footerStyle: [{ type: i0.Input }],
        footerStyleClass: [{ type: i0.Input }],
        hidden: [{ type: i0.Input }],
        expander: [{ type: i0.Input }],
        selectionMode: [{ type: i0.Input }],
        filterPlaceholder: [{ type: i0.Input }],
        filterMaxlength: [{ type: i0.Input }],
        frozen: [{ type: i0.Input }],
        resizable: [{ type: i0.Input }],
        sortFunction: [{ type: i0.Output }],
        templates: [{ type: i0.ContentChildren, args: [i1$1.PrimeTemplate,] }],
        template: [{ type: i0.ContentChild, args: [i0.TemplateRef,] }]
    };

    /**
     * Class DatatableComponent
     * @class
     */
    var DatatableComponent = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {ChangeDetectorRef} changeDetectorRef
         * @param {DataProviderFactory} dataProviderFactory
         * @param {Authorization} authorizationService
         */
        function DatatableComponent(changeDetectorRef, dataProviderFactory, authorizationService) {
            this.changeDetectorRef = changeDetectorRef;
            this.dataProviderFactory = dataProviderFactory;
            this.authorizationService = authorizationService;
            this.isShowGlobalFilter = false;
            this.isShowFilterRow = false;
            /**
             * filterParams property
             * @type {any}
             */
            this.filterParams = {};
            /**
             * footerMsg property
             * @type {string}
             */
            this.footerMsg = '';
            /**
             * orderInSort property
             * @type {boolean}
             */
            this.orderInSort = false;
            /**
             * value property
             * @type {any}
             */
            this.value = [];
            /**
             * type property
             * @type DataProviderType
             */
            this.type = exports.DataProviderType.Server;
            /**
             * rows property
             * @type {number}
             */
            this.rows = 5;
            /**
             * showPaginationFooter property
             * @type {boolean}
             */
            this.showPaginationFooter = false;
            /**
             * disableEdit property
             * @type {boolean}
             */
            this.disableEdit = false;
            /**
             * disableView property
             * @type {boolean}
             */
            this.disableView = false;
            /**
             * disableDelete property
             * @type {boolean}
             */
            this.disableDelete = false;
            /**
             * selectionMode property
             * @type {string}
             */
            this.selectionMode = 'single';
            /**
             * enableButtonsScroll property
             * @type {boolean}
             */
            this.enableButtonsScroll = false;
            /**
             * emptyMessage property
             * @type {string}
             */
            this.emptyMessage = 'Nenhum registro encontrado.';
            /**
             * verticalButtons property
             * @type {boolean}
             */
            this.verticalButtons = true;
            /**
             * defaultButtons property
             * @type {boolean}
             */
            this.defaultButtons = true;
            /**
             * enableScroll property
             * @type {boolean}
             */
            this.enableScroll = false;
            /**
             * disableLoadingBlockUI property
             * @type {boolean}
             */
            this.disableLoadingBlockUI = false;
            /**
             * filterOnColumn property
             */
            this.filterOnColumn = false;
            /**
             * filterSelectOptions property
             */
            this.filterSelectOptions = [];
            /**
             * updateFiltroHistorico property
             */
            this.updateFilterColumn = false;
            /**
             * customFilterOptions property
             */
            this.customFilterOptions = {};
            /**
             * buttonClick property
             * @type {EventEmitter<any>}
             */
            this.buttonClick = new i0.EventEmitter();
            /**
             * startedLoading property
             * @type {EventEmitter<void>}
             */
            this.startedLoading = new i0.EventEmitter();
            /**
             * finishedLoading property
             * @type {EventEmitter<HttpErrorResponse>}
             */
            this.finishedLoading = new i0.EventEmitter();
            /**
             * onRowSelected property
             * @type {EventEmitter<any>}
             */
            this.onRowSelected = new i0.EventEmitter();
            /**
             * showHorizontalButtonsHeader property
             * @type {boolean}
             */
            this.showHorizontalButtonsHeader = false;
            /**
             * blockContent
             * @type {boolean}
             */
            this.blockContent = false;
            /**
             * visibleColumns property
             * @type {Object}
             */
            this.visibleColumns = {};
            /**
             * showVisibleColumnsControl property
             * @type {boolean}
             */
            this.showVisibleColumnsControl = false;
            /**
             * dataKey property
             * Identificador único para cada registro da tabela
             * @type {string}
             */
            this.dataKey = 'id';
            /**
             * onRowEditEvent property
             * Evento disparado quando o usuário realiza ações de edição em uma linha da tabela
             * @type {EventEmitter<void>}
             */
            this.onRowEditEvent = new i0.EventEmitter();
            this.clonedRowData = {};
            /**
             * errorMessage property
             * @type {string}
             */
            this.errorMessage = 'Ocorreu um erro ao carregar os dados da tabela. Tente novamente.';
            this.editingRow = false;
        }
        Object.defineProperty(DatatableComponent.prototype, "showGlobalFilter", {
            get: function () {
                return this.isShowGlobalFilter;
            },
            set: function (showGlobalFilter) {
                this.isShowGlobalFilter = showGlobalFilter;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatatableComponent.prototype, "showFilterRow", {
            get: function () {
                return this.isShowFilterRow;
            },
            set: function (ShowFilterRow) {
                this.isShowFilterRow = ShowFilterRow;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * ngOnInit method
         * @returns void
         */
        DatatableComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.dataProvider = this.dataProviderFactory.create(this.type, this);
            this.pDatatableComponent.rows = this.rows;
            this.subscribeToLoadingEvents();
            this.initRowsPerPageOptionsIfPresent();
            this.defineIfShouldShowHorizontalButtonsHeader();
            this.updateOnValueChange();
            this.finishedLoading.subscribe(function () {
                _this.updateOnValueChange();
            });
        };
        /**
         * subscribeFromValueChange method
         * @returns void
         */
        DatatableComponent.prototype.updateOnValueChange = function () {
            var _this = this;
            this.filterSelectOptions = [];
            if (this.value) {
                this.value.map(function (item) {
                    _this.filterSelectOptions.push(item);
                });
            }
        };
        /**
         * subscribeToLoadingEvents method
         * @returns void
         */
        DatatableComponent.prototype.subscribeToLoadingEvents = function () {
            var _this = this;
            if (!this.disableLoadingBlockUI) {
                this.originalEmptyMessage = this.emptyMessage;
                this.startedLoading.subscribe(function () { return _this.onStartedLoading(); });
                this.finishedLoading.subscribe(function (error) { return _this.onFinishedLoading(error); });
            }
        };
        /**
         * onStartedLoading method
         * @returns void
         */
        DatatableComponent.prototype.onStartedLoading = function () {
            this.blockContent = true;
            this.emptyMessage = this.originalEmptyMessage;
        };
        /**
         * onFinishedLoading method
         * @param {HttpErrorResponse} error
         * @returns void
         */
        DatatableComponent.prototype.onFinishedLoading = function (error) {
            this.blockContent = false;
            if (error) {
                this.emptyMessage = this.errorMessage;
            }
        };
        /**
         * initRowsPerPageOptionsIfPresent method
         * @returns void
         */
        DatatableComponent.prototype.initRowsPerPageOptionsIfPresent = function () {
            if (this.rowsPerPageOptions) {
                this.pDatatableComponent.rowsPerPageOptions = this.rowsPerPageOptions;
            }
        };
        /**
         * defineIfShouldShowHorizontalButtonsHeader method
         * @returns void
         */
        DatatableComponent.prototype.defineIfShouldShowHorizontalButtonsHeader = function () {
            if (this.horizontalButtonsHeader) {
                this.showHorizontalButtonsHeader = true;
            }
        };
        /**
         * ngAfterViewInit method
         * @returns void
         */
        DatatableComponent.prototype.ngAfterViewInit = function () {
            this.setExtraParams();
            this.pDatatableComponent.columns = this.columns;
            this.pDatatableComponent.ngAfterContentInit();
            this.setAllColumnsVisible();
            this.changeDetectorRef.detectChanges();
        };
        /**
         * setExtraParams method
         * @returns void
         */
        DatatableComponent.prototype.setExtraParams = function () {
            for (var i in this.extraParams) {
                this.pDatatableComponent[i] = this.extraParams[i];
            }
        };
        /**
         * ngAfterContentInit method
         * @returns void
         */
        DatatableComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.extraButtons.forEach(function (button) {
                button.click.subscribe(function (event) {
                    _this.onClick(button.name, event);
                });
            });
        };
        /**
         * onClick method
         * @param {string} button
         * @param {any} event
         * @return void
         */
        DatatableComponent.prototype.onClick = function (button, event) {
            this.buttonClick.emit(new DatatableClickEvent(button, this.selectedRow));
            event.stopPropagation();
            this.resetSelectedRow(button);
        };
        /**
         * onSelectChange method
         * @param {any} event
         * @returns void
         */
        DatatableComponent.prototype.onSelectChange = function (event) {
            this.onRowSelected.emit(this.selectedRow);
            if (Array.isArray(this.selectedRow) && this.selectedRow.length > 1) {
                this.updateMultipleButtonsStatus(true);
            }
            else {
                this.updateMultipleButtonsStatus(false);
            }
        };
        /**
         * updateMultipleButtonsStatus method
         * @param {boolean} hasMultipleSelection
         * @return void
         */
        DatatableComponent.prototype.updateMultipleButtonsStatus = function (hasMultipleSelection) {
            this.extraButtons.forEach(function (button) {
                if (hasMultipleSelection && !button.allowMultipleSelection) {
                    button.disabled = true;
                }
                else {
                    button.disabled = false;
                }
            });
        };
        /**
         * refresh method
         * @param query
         * @returns void
         */
        DatatableComponent.prototype.refresh = function (query) {
            this.dataProvider.load(query);
        };
        /**
         * resetSelectedRow method
         * @param button
         * @returns void
         */
        DatatableComponent.prototype.resetSelectedRow = function (button) {
            if (button === 'delete') {
                this.selectedRow = null;
            }
        };
        /**
         * reset method
         * @returns void
         */
        DatatableComponent.prototype.reset = function () {
            this.pDatatableComponent.first = 0;
            this.dataProvider.reset();
            this.refresh();
        };
        /**
         * paginationFooterText method
         * @param {string} msg
         * @returns string
         */
        DatatableComponent.prototype.paginationFooterText = function (msg) {
            var registros = this.totalRecords() === 1 ? 'registro' : 'registros';
            if (msg === '') {
                return "Exibindo: " + this.currentFirstIndex() + " a " + this.currentLastIndex() + " de " + this.totalRecords() + " " + registros;
            }
            msg = msg.replace('{totalRecords}', this.totalRecords().toString());
            msg = msg.replace('{currentFirstIndex}', this.currentFirstIndex().toString());
            msg = msg.replace('{currentLastIndex}', this.currentLastIndex().toString());
            return msg;
        };
        /**
         * currentFirstIndex method
         * @returns number
         */
        DatatableComponent.prototype.currentFirstIndex = function () {
            return this.pDatatableComponent.first + 1;
        };
        /**
         * currentLastIndex method
         * @returns number
         */
        DatatableComponent.prototype.currentLastIndex = function () {
            var currentLastIndex = this.pDatatableComponent.first + this.pDatatableComponent.rows;
            if (currentLastIndex > this.totalRecords()) {
                return this.totalRecords();
            }
            return currentLastIndex;
        };
        /**
         * totalRecords method
         * @returns number
         */
        DatatableComponent.prototype.totalRecords = function () {
            return this.pDatatableComponent.totalRecords;
        };
        /**
         * checkRolesToButton method
         * @param {string} button
         * @return boolean
         */
        DatatableComponent.prototype.checkRolesToButton = function (button) {
            if (this[button]) {
                if (button === 'rulesToHide' ||
                    button === 'rulesToShowEdit' ||
                    button === 'rulesToShowDelete') {
                    this.checkUseButtons(button);
                    return this.authorizationService.hasRole(this[button]);
                }
                return !this.authorizationService.hasRole(this[button]);
            }
            return true;
        };
        /**
         * checkUseButtons method
         * @param {string} button
         * @returns void
         */
        DatatableComponent.prototype.checkUseButtons = function (button) {
            if (this[button] && this[button.replace('Show', 'Hide')]) {
                throw new Error('Não é possível definir dois valores de roles para os botões padrões.');
            }
        };
        /**
         * filter method
         * @returns void
         */
        DatatableComponent.prototype.filter = function () {
            for (var prop in this.filterParams) {
                if (this.filterParams[prop] === '' ||
                    this.filterParams[prop].length === 0) {
                    delete this.filterParams[prop];
                }
            }
            if (Object.getOwnPropertyNames(this.filterParams).length === 0) {
                this.reset();
            }
            else {
                this.refresh(this.filterParams);
            }
        };
        /**
         * Método para filtrar por colunas
         * @param column chave da coluna na tabela
         * @param filters valor do filtro
         */
        DatatableComponent.prototype.filterColumn = function (column, filters) {
            var values = [];
            if (filters instanceof Array) {
                values[column] = [];
                for (var item in filters) {
                    var val = filters[item] instanceof Object
                        ? filters[item].value
                        : filters[item];
                    values[column].push(val);
                }
            }
            else {
                values[column] = filters;
            }
            this.filterParams = Object.assign(Object.assign({}, this.filterParams), values);
            return this.filter();
        };
        /**
         * Inicia todas as colunas da tabela como visíveis
         */
        DatatableComponent.prototype.setAllColumnsVisible = function () {
            var _this = this;
            this.columns.forEach(function (col) {
                _this.visibleColumns[col.field] = 'table-cell';
            });
        };
        /**
         * Verifica se uma coluna deve estar visível
         * @param column string
         * @param visibleColumns Array
         */
        DatatableComponent.prototype.visibleColumnCheck = function (column, visibleColumns) {
            return visibleColumns.some(function (item) {
                return item.field ? item.field == column : true;
            });
        };
        /**
         * Atualzia os valores da variável 'visibleColuns' para mostrar ou não as colunas
         * @param columns array
         */
        DatatableComponent.prototype.updateVisibleColumns = function (columns) {
            for (var col in this.visibleColumns) {
                if (this.visibleColumnCheck(col, columns)) {
                    this.visibleColumns[col] = 'table-cell';
                }
                else {
                    this.visibleColumns[col] = 'none';
                }
            }
        };
        DatatableComponent.prototype.onRowEditInitEvent = function (event, rowData) {
            // const tr = event.srcElement.closest('tr');
            // setTimeout(() => {
            //     this.editingRow = true;
            //     const top = tr.offsetTop;
            //     const height = tr.offsetHeight;
            //     const editButtons = tr.querySelector('.editar-campos');
            //     editButtons.style.top = (top + height) + 'px';
            //     editButtons.style.height ='75px';
            //     editButtons.style.backgroundColor = '#d0d0d0';
            //     editButtons.style.opacity = 1;
            //     this.clonedRowData[rowData.id] = {...rowData};
            //     this.onRowEditEvent.emit({event: "init", data: rowData});
            // }, null , tr);
        };
        DatatableComponent.prototype.onRowEditSaveEvent = function (event, rowData) {
            this.onRowEditEvent.emit({ event: "save", data: rowData });
            this.resetEditingMode(event);
        };
        DatatableComponent.prototype.onRowEditCancelEvent = function (event, rowData, index) {
            this.value[index] = this.clonedRowData[rowData.id];
            delete this.clonedRowData[rowData[this.dataKey]];
            this.onRowEditEvent.emit({ event: "cancel", data: rowData });
            this.resetEditingMode(event);
        };
        DatatableComponent.prototype.resetEditingMode = function (event) {
            var editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');
            editButtons.style.opacity = 0;
            editButtons.style.backgroundColor = '#0000006b';
            editButtons.style.display = 'none';
            this.editingRow = false;
        };
        DatatableComponent.prototype.editarLinhaOver = function (event) {
            // if (!this.editingRow && this.editMode == 'row') {
            //     const top = event.srcElement.closest('tr').offsetTop;
            //     const height = event.srcElement.closest('tr').offsetHeight;
            //     const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');
            //     editButtons.style.display = 'flex';
            //     editButtons.style.top = top + 'px';
            //     editButtons.style.height = height + 'px';
            //     editButtons.style.backgroundColor = '#0000006b';
            //     editButtons.style.opacity = 1;
            // }
        };
        DatatableComponent.prototype.editarLinhaOut = function (event) {
            // if (!this.editingRow) {
            //     const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');
            //     editButtons.style.display = 'none';
            //     editButtons.style.opacity = 0;
            // }
        };
DatatableComponent.ɵfac = function DatatableComponent_Factory(t) { return new (t || DatatableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DataProviderFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Authorization)); };
DatatableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatableComponent, selectors: [["basis-datatable"]], contentQueries: function DatatableComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DatatableButtonComponent, 0);
        ɵngcc0.ɵɵcontentQuery(dirIndex, Column, 0);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.extraButtons = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);
    } }, viewQuery: function DatatableComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(table.Table, 3);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pDatatableComponent = _t.first);
    } }, inputs: { value: "value", type: "type", rows: "rows", showPaginationFooter: "showPaginationFooter", disableEdit: "disableEdit", disableView: "disableView", disableDelete: "disableDelete", selectionMode: "selectionMode", enableButtonsScroll: "enableButtonsScroll", emptyMessage: "emptyMessage", verticalButtons: "verticalButtons", defaultButtons: "defaultButtons", enableScroll: "enableScroll", disableLoadingBlockUI: "disableLoadingBlockUI", filterOnColumn: "filterOnColumn", customFilterOptions: "customFilterOptions", showVisibleColumnsControl: "showVisibleColumnsControl", dataKey: "dataKey", title: "title", splitButton: "splitButton", rowsPerPageOptions: "rowsPerPageOptions", url: "url", extraParams: "extraParams", paginationParameters: "paginationParameters", scrollHeight: "scrollHeight", scrollWidth: "scrollWidth", rulesToHide: "rulesToHide", rulesToShowEdit: "rulesToShowEdit", rulesToShowDelete: "rulesToShowDelete", rulesToHideView: "rulesToHideView", rulesToHideEdit: "rulesToHideEdit", rulesToHideDelete: "rulesToHideDelete", rowStyleClass: "rowStyleClass", editMode: "editMode" }, outputs: { buttonClick: "buttonClick", startedLoading: "startedLoading", finishedLoading: "finishedLoading", onRowSelected: "onRowSelected", onRowEditEvent: "onRowEditEvent" }, ngContentSelectors: _c10, decls: 23, vars: 29, consts: [[3, "blocked"], [1, "center-spinner"], [3, "ngClass"], [1, "table-tools"], [1, "p-col-8", "nopad"], [1, ""], [1, "p-col-4", "nopad", "tools"], [3, "columns", "updateVisibleColumns", 4, "ngIf"], ["pButton", "", "pRipple", "", "type", "button", "icon", "fas fa-sliders-h", 1, "p-button-rounded", "p-button-outlined", "p-mr-2", "p-mb-2", 3, "ngClass", "click"], ["pButton", "", "pRipple", "", "type", "button", "icon", "fas fa-columns", 1, "p-button-rounded", "p-button-outlined", "p-mr-2", "p-mb-2", 3, "ngClass", "click"], [1, "p-grid"], ["styleClass", "p-datatable-customers", 3, "value", "rows", "paginator", "selectionMode", "responsive", "scrollable", "selection", "editMode", "rowHover", "dataKey", "selectionChange", "onRowSelect", "onRowUnselect"], ["datatable", ""], ["pTemplate", "header"], ["pTemplate", "body"], [4, "ngIf"], ["class", "p-col-1", 3, "position", "top", 4, "ngIf"], ["defaultButtonsTemplate", ""], [3, "columns", "updateVisibleColumns"], ["class", "p-g", 4, "ngIf"], [3, "pSortableColumn", "ngStyle", 4, "ngFor", "ngForOf"], ["class", "header-filter-column", 4, "ngIf"], [1, "p-g"], ["class", "p-g-4 p-sm-12", 4, "ngIf"], [4, "ngTemplateOutlet"], [1, "p-g-4", "p-sm-12"], [1, "horizontal-buttons-header"], [3, "pSortableColumn", "ngStyle"], [3, "field", 4, "ngIf"], [3, "field"], [1, "header-filter-column"], [3, "ngStyle", 4, "ngFor", "ngForOf"], [3, "ngStyle"], [3, "listaOriginal", "lista", "field", "updateFiltro", "filterType", "tableType", "customFilterOptions", "outputEvent", 4, "ngIf"], [3, "listaOriginal", "lista", "field", "updateFiltro", "filterType", "tableType", "customFilterOptions", "outputEvent"], [3, "pSelectableRow", "pContextMenuRow", "pEditableRow", "ngClass", "mouseover", "mouseleave"], [4, "ngFor", "ngForOf"], [3, "ngStyle", 4, "ngIf"], ["width", "8%", "class", "action-column", 4, "ngIf"], [3, "innerHTML", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], [3, "innerHTML"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["pTemplate", "input"], ["pTemplate", "output"], ["class", "p-md-12", 4, "ngIf"], [1, "p-md-12"], [1, "p-g", "form-group"], [1, "md-inputfield"], ["pInputText", "", "type", "text", 3, "ngModel", "ngModelChange"], ["width", "8%", 1, "action-column"], [1, "p-col-1"], ["class", "p-button-success", "icon", "pi pi-pencil", 3, "bTooltip", "horizontal-button", "disabled", "click", 4, "ngIf"], ["icon", "pi pi-search-plus", 3, "bTooltip", "horizontal-button", "disabled", "click", 4, "ngIf"], ["class", "p-button-danger", "icon", "pi pi-trash", 3, "bTooltip", "horizontal-button", "disabled", "click", 4, "ngIf"], [3, "icon", "class", "items", "label", "method", 4, "ngIf"], ["icon", "pi pi-pencil", 1, "p-button-success", 3, "bTooltip", "disabled", "click"], ["icon", "pi pi-search-plus", 3, "bTooltip", "disabled", "click"], ["icon", "pi pi-trash", 1, "p-button-danger", 3, "bTooltip", "disabled", "click"], [3, "icon", "items", "label", "method"]], template: function DatatableComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c7);
        ɵngcc0.ɵɵelementStart(0, "p-blockUI", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "p-progressSpinner");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "div", 4);
        ɵngcc0.ɵɵelementStart(6, "h3", 5);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 6);
        ɵngcc0.ɵɵtemplate(9, DatatableComponent_basis_show_column_9_Template, 1, 1, "basis-show-column", 7);
        ɵngcc0.ɵɵelementStart(10, "button", 8);
        ɵngcc0.ɵɵlistener("click", function DatatableComponent_Template_button_click_10_listener() { return ctx.filterOnColumn = !ctx.filterOnColumn; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "button", 9);
        ɵngcc0.ɵɵlistener("click", function DatatableComponent_Template_button_click_11_listener() { return ctx.showVisibleColumnsControl = !ctx.showVisibleColumnsControl; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "div", 10);
        ɵngcc0.ɵɵelementStart(13, "div", 2);
        ɵngcc0.ɵɵelementStart(14, "p-table", 11, 12);
        ɵngcc0.ɵɵlistener("selectionChange", function DatatableComponent_Template_p_table_selectionChange_14_listener($event) { return ctx.selectedRow = $event; })("onRowSelect", function DatatableComponent_Template_p_table_onRowSelect_14_listener($event) { return ctx.onSelectChange($event); })("onRowUnselect", function DatatableComponent_Template_p_table_onRowUnselect_14_listener($event) { return ctx.onSelectChange($event); });
        ɵngcc0.ɵɵtemplate(16, DatatableComponent_ng_template_16_Template, 4, 3, "ng-template", 13);
        ɵngcc0.ɵɵtemplate(17, DatatableComponent_ng_template_17_Template, 2, 7, "ng-template", 14);
        ɵngcc0.ɵɵtemplate(18, DatatableComponent_18_Template, 1, 0, undefined, 15);
        ɵngcc0.ɵɵtemplate(19, DatatableComponent_p_footer_19_Template, 2, 1, "p-footer", 15);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(20, DatatableComponent_div_20_Template, 3, 5, "div", 16);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(21, DatatableComponent_ng_template_21_Template, 4, 4, "ng-template", null, 17, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("blocked", ctx.blockContent);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngClass", ctx.defaultButtons && ctx.verticalButtons ? "p-grid p-col-11" : "p-grid p-col-12");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showVisibleColumnsControl);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(20, _c8, ctx.filterOnColumn));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(22, _c8, ctx.showVisibleColumnsControl));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction4(24, _c9, ctx.defaultButtons && ctx.verticalButtons, !ctx.defaultButtons || !ctx.verticalButtons, ctx.editMode == "row", ctx.editingRow));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", ctx.value)("rows", ctx.rows)("paginator", true)("selectionMode", ctx.selectionMode)("responsive", true)("scrollable", ctx.enableScroll)("selection", ctx.selectedRow)("editMode", ctx.editMode)("rowHover", true)("dataKey", ctx.dataKey);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.emptyMessage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showPaginationFooter && ctx.totalRecords() > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.defaultButtons && ctx.verticalButtons);
    } }, directives: function () { return [ɵngcc5.BlockUI, ɵngcc6.ProgressSpinner, ɵngcc7.NgClass, ɵngcc7.NgIf, ɵngcc3.ButtonDirective, ɵngcc8.Table, ɵngcc9.PrimeTemplate, ShowColumn, ɵngcc7.NgForOf, ɵngcc7.NgTemplateOutlet, ɵngcc8.SortableColumn, ɵngcc7.NgStyle, ɵngcc8.SortIcon, FilterColumn, ɵngcc8.SelectableRow, ɵngcc8.ContextMenuRow, ɵngcc8.EditableRow, ɵngcc8.CellEditor, ɵngcc10.DefaultValueAccessor, ɵngcc11.InputText, ɵngcc10.NgControlStatus, ɵngcc10.NgModel, ActionButtonComponent, ɵngcc9.Footer, DatatableButtonComponent, DatatableSplitbuttonComponent]; }, styles: ["body .p-datatable .p-datatable-data tr td{word-wrap:break-word}.horizontal-buttons{display:flex;flex-flow:row wrap;justify-content:flex-end}.horizontal-button{padding:0 3px}.horizontal-buttons-header{font-size:1.3em;word-wrap:break-word}.center-spinner{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;min-height:100vh}.text-right{text-align:right}basis-show-column .p-multiselect-panel.p-widget{width:100%;max-width:100%}basis-show-column{padding-right:15px;border-right:1px solid #747474;margin-right:10px}.table-tools{width:100%;text-align:right;margin-bottom:-10px;display:flex;align-items:center}.table-tools h3{text-align:left;float:left;margin:0}.table-tools a{color:#16695c;border-radius:100px;width:20px;height:20px;padding:6px;display:inline-table;margin-left:3px;font-size:15px;text-align:center;line-height:20px}.table-tools a:hover{color:#1aa590;cursor:pointer}.table-tools a.active{color:#16695c;background-color:#e8e8e8;box-shadow:inset 0 2px 3px rgba(0,0,0,.4392156862745098)}.table-tools .tools{display:inline-flex;align-items:center;justify-content:flex-end}.edicao-tabela,.edita-linha{position:relative}tr.editing td{padding-bottom:75px!important}.editar-campos{opacity:0;position:absolute;width:100%;background-color:rgba(0,0,0,.4196078431372549);left:0;margin-top:0;display:flex;align-items:center;justify-content:center;min-height:35px;transition:all .3s ease-in-out;z-index:1}.editar-campos button{color:#fff;font-size:14px;padding:6px 30px 10px;border-radius:5px;height:28px;width:120px!important}.bt-cancelar,.bt-salvar{margin:0 10px}"], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatableComponent, [{
        type: i0.Component,
        args: [{
                selector: 'basis-datatable',
                template: "<p-blockUI [blocked]=\"blockContent\">\n    <div class=\"center-spinner\">\n        <p-progressSpinner></p-progressSpinner>\n    </div>\n</p-blockUI>\n<div [ngClass]=\"(defaultButtons && verticalButtons) ? 'p-grid p-col-11' : 'p-grid p-col-12'\">\n    <div class=\"table-tools\">\n        <div class=\"p-col-8 nopad\">\n            <h3 class=\"\">{{ title }}</h3>\n        </div>\n        <div class=\"p-col-4 nopad tools\">\n            <basis-show-column *ngIf=\"showVisibleColumnsControl\" [columns]=\"columns\" (updateVisibleColumns)=\"updateVisibleColumns($event)\"></basis-show-column>\n            <button pButton \n                pRipple \n                type=\"button\" \n                icon=\"fas fa-sliders-h\"\n                class=\"p-button-rounded p-button-outlined p-mr-2 p-mb-2\" \n                [ngClass]=\"{'active':filterOnColumn}\"\n                (click)=\"filterOnColumn = !this.filterOnColumn\">\n            </button>\n            <button pButton \n                pRipple \n                type=\"button\" \n                icon=\"fas fa-columns\" \n                [ngClass]=\"{'active':showVisibleColumnsControl}\"\n                class=\"p-button-rounded p-button-outlined p-mr-2 p-mb-2\"\n                (click)=\"showVisibleColumnsControl = !this.showVisibleColumnsControl\">\n            </button>\n        </div>\n    </div>\n</div>\n<div class=\"p-grid\">\n    <div [ngClass]=\"{\n            'p-col-11' : (defaultButtons && verticalButtons),\n            'p-col-12' : (!defaultButtons || !verticalButtons),\n            'edicao-tabela' : editMode == 'row',\n            'editing-row': editingRow\n        }\">\n        <p-table\n            [value]=\"value\"\n            [rows]=\"rows\"\n            [paginator]=\"true\"\n            [selectionMode]=\"selectionMode\"\n            [responsive]=\"true\"\n            [scrollable]=\"enableScroll\"\n            [(selection)]=\"selectedRow\"\n            [editMode]=\"editMode\"\n            (onRowSelect)=\"onSelectChange($event)\"\n            (onRowUnselect)=\"onSelectChange($event)\"\n            styleClass=\"p-datatable-customers\" \n            [rowHover]=\"true\"\n            #datatable\n            [dataKey]=\"dataKey\">\n            <ng-template pTemplate=\"header\" let-columns>\n                <div class=\"p-g\" *ngIf=\"defaultButtons && !verticalButtons\">\n                    <div *ngIf=\"showHorizontalButtonsHeader\" class=\"p-g-4 p-sm-12\">\n                        <span class=\"horizontal-buttons-header\">{{ horizontalButtonsHeader }}</span>\n                    </div>\n                    <div [ngClass]=\"{\n                        'horizontal-buttons': true,\n                        'p-sm-12': true,\n                        'p-g-8': showHorizontalButtonsHeader,\n                        'p-g-12': !showHorizontalButtonsHeader}\">\n                        <ng-container *ngTemplateOutlet=\"defaultButtons\"></ng-container>\n                        <ng-content select=\"horizontalButtons\"></ng-content>\n                    </div>\n                </div>\n                <tr>\n                    <th *ngFor=\"let col of columns\"\n                        [pSortableColumn]=\"col.sortable ? col.field : null\"\n                        [ngStyle]=\"{'display': visibleColumns[col.field]}\">\n                        {{col.header}}\n                        <p-sortIcon *ngIf=\"col.sortable\" [field]=\"col.field\"></p-sortIcon>\n                    </th>\n                </tr>\n                <tr class=\"header-filter-column\" *ngIf=\"filterOnColumn\">\n                    <th *ngFor=\"let col of columns\" [ngStyle]=\"{'display': visibleColumns[col.field]}\">\n                        <basis-filter-column\n                            *ngIf=\"col.field != 'actions'\"\n                            [listaOriginal]=\"filterSelectOptions\"\n                            [lista]=\"filterSelectOptions\"\n                            [field]=\"col.field\"\n                            [updateFiltro]=\"updateFilterColumn\"\n                            (outputEvent)=\"filterColumn(col.field, $event)\"\n                            [filterType]=\"col.filterType\"\n                            [tableType]=\"type\"\n                            [customFilterOptions]=\"customFilterOptions\">\n                        </basis-filter-column>\n                    </th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-editing=\"editing\" let-ri=\"rowIndex\">\n                <tr [pSelectableRow]=\"rowData\"\n                    [pContextMenuRow]=\"rowData\"\n                    [pEditableRow]=\"rowData\"\n                    [ngClass]=\"{'editing': editing}\"\n                    (mouseover)=\"editarLinhaOver($event)\"\n                    (mouseleave)=\"editarLinhaOut($event)\">\n                    <ng-container *ngFor=\"let col of columns; last as isLast\">\n                        <td *ngIf=\"col.field != 'actions'\" [ngStyle]=\"{'display': visibleColumns[col.field]}\">\n                            <ng-container *ngIf=\"!editMode\">\n                                <span *ngIf=\"!col.bodyTemplate\" [innerHTML]=\"rowData[col.field]\"></span>\n                                <ng-container\n                                    *ngIf=\"col.bodyTemplate\"\n                                    [ngTemplateOutlet]=\"col.bodyTemplate\"\n                                    [ngTemplateOutletContext]=\"{ rowData: rowData, col: col }\">\n                                </ng-container>\n                            </ng-container>\n        \n                            <ng-container *ngIf=\"editMode\">\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <span *ngIf=\"!col.outputTemplate && col.editable == false\" [innerHTML]=\"rowData[col.field]\"></span>\n                                        <div class=\"p-md-12\" *ngIf=\"!col.inputTemplate && col.editable != false\">\n                                            <div class=\"p-g form-group\">\n                                                <div class=\"p-md-12\">\n                                                    <span class=\"md-inputfield\">\n                                                        <input pInputText type=\"text\" [(ngModel)]=\"rowData[col.field]\" [style]=\"{'width':'100%'}\">\n                                                        <label>{{ col.header }}</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <ng-container\n                                            *ngIf=\"col.inputTemplate\"\n                                            [ngTemplateOutlet]=\"col.inputTemplate\"\n                                            [ngTemplateOutletContext]=\"{ 'rowData': rowData, 'col': col }\">\n                                        </ng-container>\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        <span *ngIf=\"!col.outputTemplate\" [innerHTML]=\"rowData[col.field]\"></span>\n                                        <ng-container\n                                            *ngIf=\"col.outputTemplate\"\n                                            [ngTemplateOutlet]=\"col.outputTemplate\"\n                                            [ngTemplateOutletContext]=\"{ rowData: rowData, col: col }\">\n                                        </ng-container>\n                                    </ng-template>\n                                </p-cellEditor>\n                            </ng-container>\n                        </td>\n                        <td width=\"8%\" class=\"action-column\" *ngIf=\"col.field == 'actions'\">\n                            <basis-action-button>\n                                <ng-container\n                                    *ngIf=\"col.outputTemplate\"\n                                    [ngTemplateOutlet]=\"col.outputTemplate\"\n                                    [ngTemplateOutletContext]=\"{ rowData: rowData }\">\n                                </ng-container>\n                            </basis-action-button>\n                        </td>\n                        <!-- TODO: verificar implementa\u00E7\u00E3o -->\n                        <!-- <div *ngIf=\"isLast\" class=\"editar-campos\">\n                            <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow (click)=\"onRowEditInitEvent($event, rowData)\">Editar</button>\n                            <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow class=\"p-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSaveEvent($event, rowData)\">Salvar</button>\n                            <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow class=\"p-button-danger\" (click)=\"onRowEditCancelEvent($event, rowData, ri)\">Cancelar</button>\n                        </div> -->\n                    </ng-container>\n                </tr>\n            </ng-template>\n            <ng-template *ngIf=\"emptyMessage\">\n                {{ emptyMessage }}\n            </ng-template>\n            <p-footer *ngIf=\"showPaginationFooter && totalRecords() > 0\">\n                {{ paginationFooterText(footerMsg) }}\n            </p-footer>\n        </p-table>\n    </div>\n    <div *ngIf=\"defaultButtons && verticalButtons\"\n        class=\"p-col-1\"\n        [style.position]=\"enableButtonsScroll ? 'sticky' : ''\"\n        [style.top]=\"enableButtonsScroll ? '15%' : ''\">\n            <ng-container *ngTemplateOutlet=\"defaultButtonsTemplate\"></ng-container>\n            <ng-content select=\"basis-datatable-button\"></ng-content>\n    </div>\n</div>\n<ng-template #defaultButtonsTemplate>\n    <basis-datatable-button [bTooltip]=\"selectedRow != null ? 'Editar' : 'Escolha um registro para editar.' \"\n        [class.horizontal-button]=\"!verticalButtons\" class=\"p-button-success\" icon=\"pi pi-pencil\" (click)=\"onClick('edit', $event)\"\n        *ngIf=\"!disableEdit && checkRolesToButton('rulesToShowView') && checkRolesToButton('rulesToHideView')\" [disabled]=\"selectedRow == null\">\n    </basis-datatable-button>\n\n    <basis-datatable-button [bTooltip]=\"selectedRow != null ? 'Visualizar' : 'Escolha um registro para visualizar.'\"\n        [class.horizontal-button]=\"!verticalButtons\" icon=\"pi pi-search-plus\" (click)=\"onClick('view', $event)\"\n        *ngIf=\"!disableView && checkRolesToButton('rulesToShowEdit') && checkRolesToButton('rulesToHideEdit')\" [disabled]=\"selectedRow == null\">\n    </basis-datatable-button>\n\n    <basis-datatable-button [bTooltip]=\"selectedRow != null ? 'Excluir' : 'Escolha um registro para excluir.'\"\n        [class.horizontal-button]=\"!verticalButtons\" class=\"p-button-danger\" icon=\"pi pi-trash\" (click)=\"onClick('delete', $event)\"\n        *ngIf=\"!disableDelete && checkRolesToButton('rulesToShowDelete') && checkRolesToButton('rulesToHideDelete')\" [disabled]=\"selectedRow == null\">\n    </basis-datatable-button>\n\n    <datatable-splitbutton\n        [icon]=\"splitButton.icon\"\n        [class]=\"splitButton.class\"\n        [items]=\"splitButton.itens\"\n        [label]=\"splitButton.label\"\n        [method]=\"splitButton.method\"\n        *ngIf=\"splitButton\">\n    </datatable-splitbutton>\n</ng-template>\n",
                encapsulation: i0.ViewEncapsulation.None,
                styles: ["body .p-datatable .p-datatable-data tr td{word-wrap:break-word}.horizontal-buttons{display:flex;flex-flow:row wrap;justify-content:flex-end}.horizontal-button{padding:0 3px}.horizontal-buttons-header{font-size:1.3em;word-wrap:break-word}.center-spinner{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;min-height:100vh}.text-right{text-align:right}basis-show-column .p-multiselect-panel.p-widget{width:100%;max-width:100%}basis-show-column{padding-right:15px;border-right:1px solid #747474;margin-right:10px}.table-tools{width:100%;text-align:right;margin-bottom:-10px;display:flex;align-items:center}.table-tools h3{text-align:left;float:left;margin:0}.table-tools a{color:#16695c;border-radius:100px;width:20px;height:20px;padding:6px;display:inline-table;margin-left:3px;font-size:15px;text-align:center;line-height:20px}.table-tools a:hover{color:#1aa590;cursor:pointer}.table-tools a.active{color:#16695c;background-color:#e8e8e8;box-shadow:inset 0 2px 3px rgba(0,0,0,.4392156862745098)}.table-tools .tools{display:inline-flex;align-items:center;justify-content:flex-end}.edicao-tabela,.edita-linha{position:relative}tr.editing td{padding-bottom:75px!important}.editar-campos{opacity:0;position:absolute;width:100%;background-color:rgba(0,0,0,.4196078431372549);left:0;margin-top:0;display:flex;align-items:center;justify-content:center;min-height:35px;transition:all .3s ease-in-out;z-index:1}.editar-campos button{color:#fff;font-size:14px;padding:6px 30px 10px;border-radius:5px;height:28px;width:120px!important}.bt-cancelar,.bt-salvar{margin:0 10px}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: DataProviderFactory }, { type: ɵngcc4.Authorization }]; }, { value: [{
            type: i0.Input
        }], type: [{
            type: i0.Input
        }], rows: [{
            type: i0.Input
        }], showPaginationFooter: [{
            type: i0.Input
        }], disableEdit: [{
            type: i0.Input
        }], disableView: [{
            type: i0.Input
        }], disableDelete: [{
            type: i0.Input
        }], selectionMode: [{
            type: i0.Input
        }], enableButtonsScroll: [{
            type: i0.Input
        }], emptyMessage: [{
            type: i0.Input
        }], verticalButtons: [{
            type: i0.Input
        }], defaultButtons: [{
            type: i0.Input
        }], enableScroll: [{
            type: i0.Input
        }], disableLoadingBlockUI: [{
            type: i0.Input
        }], filterOnColumn: [{
            type: i0.Input
        }], customFilterOptions: [{
            type: i0.Input
        }], buttonClick: [{
            type: i0.Output
        }], startedLoading: [{
            type: i0.Output
        }], finishedLoading: [{
            type: i0.Output
        }], onRowSelected: [{
            type: i0.Output
        }], showVisibleColumnsControl: [{
            type: i0.Input
        }], dataKey: [{
            type: i0.Input
        }], onRowEditEvent: [{
            type: i0.Output
        }], title: [{
            type: i0.Input
        }], splitButton: [{
            type: i0.Input
        }], rowsPerPageOptions: [{
            type: i0.Input
        }], url: [{
            type: i0.Input
        }], extraParams: [{
            type: i0.Input
        }], paginationParameters: [{
            type: i0.Input
        }], scrollHeight: [{
            type: i0.Input
        }], scrollWidth: [{
            type: i0.Input
        }], rulesToHide: [{
            type: i0.Input
        }], rulesToShowEdit: [{
            type: i0.Input
        }], rulesToShowDelete: [{
            type: i0.Input
        }], rulesToHideView: [{
            type: i0.Input
        }], rulesToHideEdit: [{
            type: i0.Input
        }], rulesToHideDelete: [{
            type: i0.Input
        }], rowStyleClass: [{
            type: i0.Input
        }], pDatatableComponent: [{
            type: i0.ViewChild,
            args: [table.Table, { static: true }]
        }], extraButtons: [{
            type: i0.ContentChildren,
            args: [DatatableButtonComponent]
        }], columns: [{
            type: i0.ContentChildren,
            args: [Column]
        }], editMode: [{
            type: i0.Input
        }] }); })();
        return DatatableComponent;
    }());
    DatatableComponent.ctorParameters = function () { return [
        { type: i0.ChangeDetectorRef },
        { type: DataProviderFactory },
        { type: angularBase.Authorization }
    ]; };
    DatatableComponent.propDecorators = {
        title: [{ type: i0.Input }],
        splitButton: [{ type: i0.Input }],
        value: [{ type: i0.Input }],
        type: [{ type: i0.Input }],
        rows: [{ type: i0.Input }],
        rowsPerPageOptions: [{ type: i0.Input }],
        url: [{ type: i0.Input }],
        extraParams: [{ type: i0.Input }],
        paginationParameters: [{ type: i0.Input }],
        showPaginationFooter: [{ type: i0.Input }],
        disableEdit: [{ type: i0.Input }],
        disableView: [{ type: i0.Input }],
        disableDelete: [{ type: i0.Input }],
        selectionMode: [{ type: i0.Input }],
        enableButtonsScroll: [{ type: i0.Input }],
        emptyMessage: [{ type: i0.Input }],
        verticalButtons: [{ type: i0.Input }],
        defaultButtons: [{ type: i0.Input }],
        enableScroll: [{ type: i0.Input }],
        scrollHeight: [{ type: i0.Input }],
        scrollWidth: [{ type: i0.Input }],
        rulesToHide: [{ type: i0.Input }],
        rulesToShowEdit: [{ type: i0.Input }],
        rulesToShowDelete: [{ type: i0.Input }],
        rulesToHideView: [{ type: i0.Input }],
        rulesToHideEdit: [{ type: i0.Input }],
        rulesToHideDelete: [{ type: i0.Input }],
        disableLoadingBlockUI: [{ type: i0.Input }],
        rowStyleClass: [{ type: i0.Input }],
        filterOnColumn: [{ type: i0.Input }],
        customFilterOptions: [{ type: i0.Input }],
        buttonClick: [{ type: i0.Output }],
        pDatatableComponent: [{ type: i0.ViewChild, args: [table.Table, { static: true },] }],
        extraButtons: [{ type: i0.ContentChildren, args: [DatatableButtonComponent,] }],
        columns: [{ type: i0.ContentChildren, args: [Column,] }],
        startedLoading: [{ type: i0.Output }],
        finishedLoading: [{ type: i0.Output }],
        onRowSelected: [{ type: i0.Output }],
        showVisibleColumnsControl: [{ type: i0.Input }],
        editMode: [{ type: i0.Input }],
        dataKey: [{ type: i0.Input }],
        onRowEditEvent: [{ type: i0.Output }]
    };

    /**
     * Class DatatableSplitbuttonComponent
     * @class
     */
    var DatatableSplitbuttonComponent = /** @class */ (function () {
        function DatatableSplitbuttonComponent() {
        }
        /**
         * ngOnInit method
         * @returns void
         */
        DatatableSplitbuttonComponent.prototype.ngOnInit = function () {
        };
DatatableSplitbuttonComponent.ɵfac = function DatatableSplitbuttonComponent_Factory(t) { return new (t || DatatableSplitbuttonComponent)(); };
DatatableSplitbuttonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatableSplitbuttonComponent, selectors: [["datatable-splitbutton"]], inputs: { items: "items", label: "label", class: "class", icon: "icon", method: "method" }, decls: 1, vars: 4, consts: [[3, "label", "icon", "model", "styleClass", "onClick"]], template: function DatatableSplitbuttonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p-splitButton", 0);
        ɵngcc0.ɵɵlistener("onClick", function DatatableSplitbuttonComponent_Template_p_splitButton_onClick_0_listener() { return ctx.method; });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate("label", ctx.label);
        ɵngcc0.ɵɵpropertyInterpolate("icon", ctx.icon);
        ɵngcc0.ɵɵpropertyInterpolate("styleClass", ctx.class);
        ɵngcc0.ɵɵproperty("model", ctx.items);
    } }, directives: [ɵngcc12.SplitButton], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatableSplitbuttonComponent, [{
        type: i0.Component,
        args: [{
                selector: 'datatable-splitbutton',
                template: "<p-splitButton label=\"{{label}}\" icon=\"{{icon}}\" (onClick)=\"method\" [model]=\"items\" styleClass=\"{{class}}\">\n</p-splitButton>"
            }]
    }], function () { return []; }, { items: [{
            type: i0.Input
        }], label: [{
            type: i0.Input
        }], class: [{
            type: i0.Input
        }], icon: [{
            type: i0.Input
        }], method: [{
            type: i0.Input
        }] }); })();
        return DatatableSplitbuttonComponent;
    }());
    DatatableSplitbuttonComponent.propDecorators = {
        items: [{ type: i0.Input }],
        label: [{ type: i0.Input }],
        class: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        method: [{ type: i0.Input }]
    };

    /**
     * Class DatatableSplitbuttonModule
     * @class
     */
    var DatatableSplitbuttonModule = /** @class */ (function () {
        function DatatableSplitbuttonModule() {
        }
DatatableSplitbuttonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DatatableSplitbuttonModule });
DatatableSplitbuttonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DatatableSplitbuttonModule_Factory(t) { return new (t || DatatableSplitbuttonModule)(); }, providers: [], imports: [[
            splitbutton.SplitButtonModule
        ], ɵngcc12.SplitButtonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DatatableSplitbuttonModule, { declarations: [DatatableSplitbuttonComponent], imports: [ɵngcc12.SplitButtonModule], exports: [DatatableSplitbuttonComponent, ɵngcc12.SplitButtonModule] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatableSplitbuttonModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    splitbutton.SplitButtonModule
                ],
                declarations: [
                    DatatableSplitbuttonComponent
                ],
                providers: [],
                exports: [
                    DatatableSplitbuttonComponent,
                    splitbutton.SplitButtonModule
                ],
                schemas: [i0.CUSTOM_ELEMENTS_SCHEMA]
            }]
    }], function () { return []; }, null); })();
        return DatatableSplitbuttonModule;
    }());

    var FilterColumn = /** @class */ (function () {
        function FilterColumn() {
            this.listaOriginal = [];
            this.lista = [];
            this.labelDefaultImplementation = false;
            this.updateFiltro = false;
            this.customFilterOptions = {};
            this.template = 'filter_text';
            this.outputEvent = new i0.EventEmitter();
            this.debouncer = new rxjs.Subject();
            this.resultado = [];
            this.listaFields = [];
        }
        FilterColumn.prototype.ngOnInit = function () {
            var _this = this;
            this.debouncer
                .pipe(operators.debounceTime((this.tableType === 'memory') ? 300 : 1000))
                .subscribe(function (value) { return _this.outputEvent.emit(value); });
            this.template = "filter_" + this.filterType;
        };
        FilterColumn.prototype.ngOnChanges = function (changes) {
            if (this.checkChanges(changes, 'listaOriginal')) {
                this.preencherFields();
            }
        };
        FilterColumn.prototype.checkChanges = function (changes, property) {
            return changes[property] && changes[property].previousValue != changes[property].currentValue;
        };
        /**
         * Método para propagar o evento de filtragem
         * @param event filtro
         */
        FilterColumn.prototype.filtrar = function (event) {
            this.debouncer.next(this.filtro);
        };
        /**
         * Preenche os itens que serão exibidos no multiselect, removendo duplicidades
         */
        FilterColumn.prototype.preencherFields = function () {
            var _this = this;
            this.listaFields = [];
            this.listaOriginal.filter(function (pi) { return pi[_this.field] !== null; }).forEach(function (row) {
                var item = { label: row[_this.field], value: row[_this.field] };
                if (!_this.verificarSeExisteField(item)) {
                    _this.listaFields.push(item);
                }
            });
        };
        /**
         *
         * @param field Verifica duplicidade de fields nas opções de seleção
         */
        FilterColumn.prototype.verificarSeExisteField = function (field) {
            return this.listaFields.some(function (item) {
                return item.value == field.value;
            });
        };
        /**
         * Caso o usuaŕio não forneça uma lista para o options, será criada uma lista com
         * os valores presentes na tabela
         */
        FilterColumn.prototype.getCustomFilterOptions = function () {
            if (this.customFilterOptions.hasOwnProperty(this.field)) {
                return this.customFilterOptions[this.field];
            }
            return this.listaFields;
        };
FilterColumn.ɵfac = function FilterColumn_Factory(t) { return new (t || FilterColumn)(); };
FilterColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FilterColumn, selectors: [["basis-filter-column"]], inputs: { listaOriginal: "listaOriginal", lista: "lista", labelDefaultImplementation: "labelDefaultImplementation", updateFiltro: "updateFiltro", customFilterOptions: "customFilterOptions", template: "template", field: "field", header: "header", labelDefaultName: "labelDefaultName", filterType: "filterType", tableType: "tableType" }, outputs: { outputEvent: "outputEvent" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 3, consts: [[3, "ngSwitch"], [4, "ngSwitchCase"], [1, "p-g", "form-group"], [1, "p-md-12"], [1, "p-float-label"], ["type", "text", "pInputText", "", 3, "ngModel", "input", "ngModelChange"], ["appendTo", "body", 3, "options", "defaultLabel", "optionLabel", "ngModelOptions", "ngModel", "onChange", "ngModelChange"]], template: function FilterColumn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, FilterColumn_div_1_Template, 7, 5, "div", 1);
        ɵngcc0.ɵɵtemplate(2, FilterColumn_div_2_Template, 4, 9, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.filterType);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "text");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "select");
    } }, directives: [ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc10.DefaultValueAccessor, ɵngcc11.InputText, ɵngcc10.NgControlStatus, ɵngcc10.NgModel, ɵngcc13.MultiSelect], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilterColumn, [{
        type: i0.Component,
        args: [{
                selector: 'basis-filter-column',
                template: "<div [ngSwitch]=\"filterType\" >\n    <div *ngSwitchCase=\"'text'\">\n        <div class=\"p-g form-group\">\n            <div class=\"p-md-12\">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText (input)=\"filtrar($event)\" [(ngModel)]=\"filtro\" [style]=\"{width: '100%'}\">\n                    <label>{{ (header) ? header : 'Filtro' }}</label>\n                </span>\n            </div>\n        </div>\n    </div>\n    <div *ngSwitchCase=\"'select'\">\n        <div class=\"p-g form-group\">\n            <div class=\"p-md-12\">\n                <p-multiSelect\n                    [options]=\"getCustomFilterOptions()\"\n                    [defaultLabel]=\"(header)? header: '&nbsp;'\"\n                    [optionLabel]=\"'label'\"\n                    appendTo=\"body\"\n                    [ngModelOptions]=\"{standalone: true}\"\n                    (onChange)=\"filtrar($event)\"\n                    [(ngModel)]=\"filtro\"\n                    [style]=\"{'width':'100%', 'vertical-align':'top'}\">\n                </p-multiSelect>\n            </div>\n        </div>\n    </div>\n</div>\n"
            }]
    }], function () { return []; }, { listaOriginal: [{
            type: i0.Input
        }], lista: [{
            type: i0.Input
        }], labelDefaultImplementation: [{
            type: i0.Input
        }], updateFiltro: [{
            type: i0.Input
        }], customFilterOptions: [{
            type: i0.Input
        }], template: [{
            type: i0.Input
        }], outputEvent: [{
            type: i0.Output
        }], field: [{
            type: i0.Input
        }], header: [{
            type: i0.Input
        }], labelDefaultName: [{
            type: i0.Input
        }], filterType: [{
            type: i0.Input
        }], tableType: [{
            type: i0.Input
        }] }); })();
        return FilterColumn;
    }());
    FilterColumn.ctorParameters = function () { return []; };
    FilterColumn.propDecorators = {
        listaOriginal: [{ type: i0.Input }],
        lista: [{ type: i0.Input }],
        field: [{ type: i0.Input }],
        header: [{ type: i0.Input }],
        labelDefaultImplementation: [{ type: i0.Input }],
        labelDefaultName: [{ type: i0.Input }],
        updateFiltro: [{ type: i0.Input }],
        filterType: [{ type: i0.Input }],
        tableType: [{ type: i0.Input }],
        customFilterOptions: [{ type: i0.Input }],
        template: [{ type: i0.Input }],
        outputEvent: [{ type: i0.Output }]
    };

    var FilterColumnModule = /** @class */ (function () {
        function FilterColumnModule() {
        }
FilterColumnModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FilterColumnModule });
FilterColumnModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FilterColumnModule_Factory(t) { return new (t || FilterColumnModule)(); }, imports: [[
            common.CommonModule,
            multiselect.MultiSelectModule,
            button.ButtonModule,
            checkbox.CheckboxModule,
            dropdown.DropdownModule,
            forms.FormsModule,
            forms.ReactiveFormsModule,
            inputtext.InputTextModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FilterColumnModule, { declarations: [FilterColumn], imports: [ɵngcc7.CommonModule, ɵngcc13.MultiSelectModule, ɵngcc3.ButtonModule, ɵngcc14.CheckboxModule, ɵngcc15.DropdownModule, ɵngcc10.FormsModule, ɵngcc10.ReactiveFormsModule, ɵngcc11.InputTextModule], exports: [FilterColumn] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilterColumnModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    multiselect.MultiSelectModule,
                    button.ButtonModule,
                    checkbox.CheckboxModule,
                    dropdown.DropdownModule,
                    forms.FormsModule,
                    forms.ReactiveFormsModule,
                    inputtext.InputTextModule
                ],
                declarations: [
                    FilterColumn
                ],
                exports: [
                    FilterColumn
                ],
                schemas: [i0.CUSTOM_ELEMENTS_SCHEMA]
            }]
    }], function () { return []; }, null); })();
        return FilterColumnModule;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from) {
        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
            to[j] = from[i];
        return to;
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    /**
     * Class PageNotificationService
     * @class
     */
    var PageNotificationService = /** @class */ (function (_super) {
        __extends(PageNotificationService, _super);
        /**
         * constructor method
         * @constructor
         * @param {MessageService} messageService
         */
        function PageNotificationService(messageService) {
            var _this = _super.call(this) || this;
            _this.messageService = messageService;
            /**
             * successSeverity property
             * @type {string}
             */
            _this.successSeverity = 'success';
            /**
             * infoSeverity property
             * @type {string}
             */
            _this.infoSeverity = 'info';
            /**
             * warnSeverity property
             * @type {string}
             */
            _this.warnSeverity = 'warn';
            /**
             * errorSeverity property
             * @type {string}
             */
            _this.errorSeverity = 'error';
            /**
             * createMsg property
             * @type {string}
             */
            _this.createMsg = 'Registro incluído com sucesso!';
            /**
             * updateMsg property
             * @type {string}
             */
            _this.updateMsg = 'Registro alterado com sucesso!';
            /**
             * deleteMsg property
             * @type {string}
             */
            _this.deleteMsg = 'Registro excluído com sucesso!';
            return _this;
        }
        /**
         * addCreateMsg method
         * @param {string} title
         */
        PageNotificationService.prototype.addCreateMsg = function (title) {
            this.addSuccessMessage(this.createMsg, title);
        };
        /**
         * addSuccessMessage method
         * @param {string} message
         * @param {string} title
         */
        PageNotificationService.prototype.addSuccessMessage = function (message, title) {
            this.addMsg(this.successSeverity, message, title);
        };
        /**
         * addMsg method
         * @param {string} severity
         * @param {string} msg
         * @param {string} title
         */
        PageNotificationService.prototype.addMsg = function (severity, msg, title) {
            this.messageService.add({
                severity: severity,
                summary: title,
                detail: msg
            });
        };
        /**
         * addUpdateMsg method
         * @param {string} title
         */
        PageNotificationService.prototype.addUpdateMsg = function (title) {
            this.addSuccessMessage(this.updateMsg, title);
        };
        /**
         * addDeleteMsg method
         * @param {string} title
         */
        PageNotificationService.prototype.addDeleteMsg = function (title) {
            this.addSuccessMessage(this.deleteMsg, title);
        };
        /**
         * addInfoMessage method
         * @param {string} message
         * @param {string} title
         */
        PageNotificationService.prototype.addInfoMessage = function (message, title) {
            this.addMsg(this.infoSeverity, message, title);
        };
        /**
         * addWarnMessage method
         * @param {string} message
         * @param {string} title
         */
        PageNotificationService.prototype.addWarnMessage = function (message, title) {
            this.addMsg(this.warnSeverity, message, title);
        };
        /**
         * addErrorMessage method
         * @param {string} message
         * @param {string} title
         */
        PageNotificationService.prototype.addErrorMessage = function (message, title) {
            this.addMsg(this.errorSeverity, message, title);
        };
        /**
         * addErrorProblem method
         * @param {ApplicationProblemType} problem
         */
        PageNotificationService.prototype.addErrorProblem = function (problem) {
            this.addMsg(this.errorSeverity, problem.detail, problem.title);
        };
PageNotificationService.ɵfac = function PageNotificationService_Factory(t) { return new (t || PageNotificationService)(ɵngcc0.ɵɵinject(ɵngcc9.MessageService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PageNotificationService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc9.MessageService }]; }, null); })();
        return PageNotificationService;
    }(angularBase.NotificationProvider));
    PageNotificationService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PageNotificationService_Factory() { return new PageNotificationService(i0.ɵɵinject(i1$1.MessageService)); }, token: PageNotificationService, providedIn: "root" });
    PageNotificationService.ctorParameters = function () { return [
        { type: i1$1.MessageService }
    ]; };

    var ShowColumn = /** @class */ (function () {
        function ShowColumn(pageNotificationService) {
            this.pageNotificationService = pageNotificationService;
            /**
             * lista de colunas disponívels na tabela
             * @type {Array}
             */
            this.options = [];
            /**
             * Valores do select de colunas
             * @type {Array}
             */
            this.values = [];
            /**
             * Último valor válido para o select.
             * @type {Array}
             */
            this.lastValue = [];
            /**
             * Evento para atualizar a visibilidade das colunas da tabela
             * @type {EventEmitter}
             */
            this.updateVisibleColumns = new i0.EventEmitter();
        }
        ShowColumn.prototype.ngOnInit = function () {
            var _this = this;
            this.columns.forEach(function (column) {
                var col = { field: column.field, filterType: column.filterType, header: column.header };
                _this.options.push(col);
                _this.values.push(col);
                _this.lastValue.push(col);
            });
        };
        ShowColumn.prototype.mostrarColunas = function (event) {
            var _this = this;
            if (this.values.length) {
                this.lastValue = event.value;
                this.updateVisibleColumns.emit(this.values);
            }
            else {
                this.lastValue.map(function (item) { return _this.values.push(item); });
                this.pageNotificationService.addErrorMessage('Não é possível exibir menos de uma coluna');
            }
        };
ShowColumn.ɵfac = function ShowColumn_Factory(t) { return new (t || ShowColumn)(ɵngcc0.ɵɵdirectiveInject(PageNotificationService)); };
ShowColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ShowColumn, selectors: [["basis-show-column"]], inputs: { columns: "columns" }, outputs: { updateVisibleColumns: "updateVisibleColumns" }, decls: 1, vars: 9, consts: [["defaultLabel", "Selecionar colunas", 1, "column", 3, "optionLabel", "displaySelectedLabel", "ngModelOptions", "options", "ngModel", "onChange", "ngModelChange"]], template: function ShowColumn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p-multiSelect", 0);
        ɵngcc0.ɵɵlistener("onChange", function ShowColumn_Template_p_multiSelect_onChange_0_listener($event) { return ctx.mostrarColunas($event); })("ngModelChange", function ShowColumn_Template_p_multiSelect_ngModelChange_0_listener($event) { return ctx.values = $event; });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(7, _c11));
        ɵngcc0.ɵɵproperty("optionLabel", "header")("displaySelectedLabel", false)("ngModelOptions", ɵngcc0.ɵɵpureFunction0(8, _c13))("options", ctx.options)("ngModel", ctx.values);
    } }, directives: [ɵngcc13.MultiSelect, ɵngcc10.NgControlStatus, ɵngcc10.NgModel], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowColumn, [{
        type: i0.Component,
        args: [{
                selector: 'basis-show-column',
                template: "<p-multiSelect\n    class=\"column\"\n    defaultLabel=\"Selecionar colunas\"\n    [optionLabel]=\"'header'\"\n    [displaySelectedLabel]=\"false\"\n    [ngModelOptions]=\"{ standalone: true }\"\n    (onChange)=\"mostrarColunas($event)\"\n    [options]=\"options\"\n    [(ngModel)]=\"values\"\n    [style]=\"{ width: '100%' }\">\n</p-multiSelect>\n"
            }]
    }], function () { return [{ type: PageNotificationService }]; }, { updateVisibleColumns: [{
            type: i0.Output
        }], columns: [{
            type: i0.Input
        }] }); })();
        return ShowColumn;
    }());
    ShowColumn.ctorParameters = function () { return [
        { type: PageNotificationService }
    ]; };
    ShowColumn.propDecorators = {
        columns: [{ type: i0.Input }],
        updateVisibleColumns: [{ type: i0.Output }]
    };

    var ShowColumnModule = /** @class */ (function () {
        function ShowColumnModule() {
        }
ShowColumnModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ShowColumnModule });
ShowColumnModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ShowColumnModule_Factory(t) { return new (t || ShowColumnModule)(); }, imports: [[
            common.CommonModule,
            multiselect.MultiSelectModule,
            button.ButtonModule,
            checkbox.CheckboxModule,
            dropdown.DropdownModule,
            forms.FormsModule,
            forms.ReactiveFormsModule,
            inputtext.InputTextModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ShowColumnModule, { declarations: [ShowColumn], imports: [ɵngcc7.CommonModule, ɵngcc13.MultiSelectModule, ɵngcc3.ButtonModule, ɵngcc14.CheckboxModule, ɵngcc15.DropdownModule, ɵngcc10.FormsModule, ɵngcc10.ReactiveFormsModule, ɵngcc11.InputTextModule], exports: [ShowColumn] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowColumnModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    multiselect.MultiSelectModule,
                    button.ButtonModule,
                    checkbox.CheckboxModule,
                    dropdown.DropdownModule,
                    forms.FormsModule,
                    forms.ReactiveFormsModule,
                    inputtext.InputTextModule
                ],
                declarations: [
                    ShowColumn
                ],
                exports: [
                    ShowColumn
                ],
                schemas: [i0.CUSTOM_ELEMENTS_SCHEMA]
            }]
    }], function () { return []; }, null); })();
        return ShowColumnModule;
    }());

    var ActionButtonComponent = /** @class */ (function () {
        function ActionButtonComponent() {
            this.action = false;
        }
        ActionButtonComponent.prototype.ngOnInit = function () { };
ActionButtonComponent.ɵfac = function ActionButtonComponent_Factory(t) { return new (t || ActionButtonComponent)(); };
ActionButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ActionButtonComponent, selectors: [["basis-action-button"]], ngContentSelectors: _c15, decls: 4, vars: 1, consts: [[1, "action-button"], [3, "click"], [1, "fas", "fa-ellipsis-v"], ["class", "action-button-over", 4, "ngIf"], [1, "action-button-over"], ["pTooltip", "Fechar", "tooltipPosition", "top", 1, "action-button-close", 3, "ngClass", "click"]], template: function ActionButtonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "a", 1);
        ɵngcc0.ɵɵlistener("click", function ActionButtonComponent_Template_a_click_1_listener() { return ctx.action = !ctx.action; });
        ɵngcc0.ɵɵelement(2, "i", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, ActionButtonComponent_div_3_Template, 4, 3, "div", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.action);
    } }, directives: [ɵngcc7.NgIf, ɵngcc2.Tooltip, ɵngcc7.NgClass], styles: [".action-button[_ngcontent-%COMP%]{position:relative;display:inline-flex;width:20px;height:10px}.action-button[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{background-color:#557089;width:20px;height:20px;border-radius:60px;color:#fff;display:flex;align-items:center;justify-content:center;cursor:pointer;transform:rotate(0deg);transition:all .3s ease-in-out}.action-button[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover{background-color:#33a987}.action-button-over[_ngcontent-%COMP%]{background-color:#465b71;display:inline-flex;border-radius:60px;padding:0 35px 0 15px;position:absolute;right:-7px;top:-5px}.action-button-over[_ngcontent-%COMP%]   a.action-button-close[_ngcontent-%COMP%]:hover{color:#fff}.action-button-over[_ngcontent-%COMP%]   .action-button-close[_ngcontent-%COMP%]{background-color:#33a987;width:20px;height:20px;border-radius:60px;color:#fff;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;transform:rotate(0deg);position:absolute;right:7px;top:5px;transition:all .3s ease-in-out}.action-button-over[_ngcontent-%COMP%]   .action-button-close.rotate-90[_ngcontent-%COMP%]{transform:rotate(90deg)!important}[_nghost-%COMP%]     .action-button-over a{color:#fff;padding:6px;cursor:pointer}[_nghost-%COMP%]     .action-button-over a:hover{color:#bfd974}[_nghost-%COMP%]     .action-button-over a img{position:absolute;right:10px}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionButtonComponent, [{
        type: i0.Component,
        args: [{
                selector: 'basis-action-button',
                template: "<div class=\"action-button\">\n    <a (click)=\"action = !this.action\"><i class=\"fas fa-ellipsis-v\"></i></a>\n    <div class=\"action-button-over\" *ngIf=\"action\">\n        <ng-content></ng-content>\n        <a class=\"action-button-close\" [ngClass]=\"{'rotate-90':action}\" (click)=\"action = !this.action\" pTooltip=\"Fechar\" tooltipPosition=\"top\"><i class=\"fas fa-ellipsis-v\"></i></a>\n    </div>\n</div>\n",
                styles: [".action-button{position:relative;display:inline-flex;width:20px;height:10px}.action-button>a{background-color:#557089;width:20px;height:20px;border-radius:60px;color:#fff;display:flex;align-items:center;justify-content:center;cursor:pointer;transform:rotate(0deg);transition:all .3s ease-in-out}.action-button>a:hover{background-color:#33a987}.action-button-over{background-color:#465b71;display:inline-flex;border-radius:60px;padding:0 35px 0 15px;position:absolute;right:-7px;top:-5px}.action-button-over a.action-button-close:hover{color:#fff}.action-button-over .action-button-close{background-color:#33a987;width:20px;height:20px;border-radius:60px;color:#fff;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;transform:rotate(0deg);position:absolute;right:7px;top:5px;transition:all .3s ease-in-out}.action-button-over .action-button-close.rotate-90{transform:rotate(90deg)!important}:host ::ng-deep .action-button-over a{color:#fff;padding:6px;cursor:pointer}:host ::ng-deep .action-button-over a:hover{color:#bfd974}:host ::ng-deep .action-button-over a img{position:absolute;right:10px}"]
            }]
    }], function () { return []; }, null); })();
        return ActionButtonComponent;
    }());
    ActionButtonComponent.ctorParameters = function () { return []; };

    /**
     * Class DatatableModule
     * @class
     */
    var DatatableModule = /** @class */ (function () {
        function DatatableModule() {
        }
DatatableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DatatableModule });
DatatableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DatatableModule_Factory(t) { return new (t || DatatableModule)(); }, providers: [
        { provide: DatatableService, useClass: DatatableService, deps: [i1.HttpClient] },
        DataProviderFactory
    ], imports: [[
            common.CommonModule,
            button.ButtonModule,
            splitbutton.SplitButtonModule,
            tooltip.TooltipModule,
            table.TableModule,
            blockui.BlockUIModule,
            progressspinner.ProgressSpinnerModule,
            DatatableSplitbuttonModule,
            i1.HttpClientModule,
            paginator.PaginatorModule,
            FilterColumnModule,
            ShowColumnModule,
            inputtext.InputTextModule
        ], FilterColumnModule, ShowColumnModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DatatableModule, { declarations: [DatatableComponent, DatatableButtonComponent, Column, ActionButtonComponent], imports: [ɵngcc7.CommonModule, ɵngcc3.ButtonModule, ɵngcc12.SplitButtonModule, ɵngcc2.TooltipModule, ɵngcc8.TableModule, ɵngcc5.BlockUIModule, ɵngcc6.ProgressSpinnerModule, DatatableSplitbuttonModule, ɵngcc1.HttpClientModule, ɵngcc16.PaginatorModule, FilterColumnModule, ShowColumnModule, ɵngcc11.InputTextModule], exports: [DatatableComponent, DatatableButtonComponent, FilterColumnModule, ShowColumnModule, Column] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatableModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    button.ButtonModule,
                    splitbutton.SplitButtonModule,
                    tooltip.TooltipModule,
                    table.TableModule,
                    blockui.BlockUIModule,
                    progressspinner.ProgressSpinnerModule,
                    DatatableSplitbuttonModule,
                    i1.HttpClientModule,
                    paginator.PaginatorModule,
                    FilterColumnModule,
                    ShowColumnModule,
                    inputtext.InputTextModule
                ],
                declarations: [
                    DatatableComponent,
                    DatatableButtonComponent,
                    Column,
                    ActionButtonComponent
                ],
                providers: [
                    { provide: DatatableService, useClass: DatatableService, deps: [i1.HttpClient] },
                    DataProviderFactory
                ],
                exports: [
                    DatatableComponent,
                    DatatableButtonComponent,
                    FilterColumnModule,
                    ShowColumnModule,
                    Column
                ]
            }]
    }], function () { return []; }, null); })();
        return DatatableModule;
    }());

    /**
     * Class BlockUiComponent
     * @class
     */
    var BlockUiComponent = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {BlockUiService} service
         */
        function BlockUiComponent(service) {
            this.service = service;
            /**
             * status property
             * @type {boolean}
             * @public
             */
            this.status = false;
        }
        /**
         * ngOnInit method
         * @returns void
         */
        BlockUiComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.subscription = this.service.loaderStatus.subscribe(function (blockui) {
                _this.status = blockui.status;
            });
        };
        /**
         * ngOnDestroy methods
         * @returns void
         */
        BlockUiComponent.prototype.ngOnDestroy = function () {
            this.subscription.unsubscribe();
        };
        /**
         * isBlocked method
         * @returns boolean
         */
        BlockUiComponent.prototype.isBlocked = function () {
            return this.status;
        };
        /**
         * show method
         * @returns false
         */
        BlockUiComponent.prototype.show = function () {
            this.status = true;
        };
        /**
         * hide methods
         * @returns void
         */
        BlockUiComponent.prototype.hide = function () {
            this.status = false;
        };
BlockUiComponent.ɵfac = function BlockUiComponent_Factory(t) { return new (t || BlockUiComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.BlockUiService)); };
BlockUiComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BlockUiComponent, selectors: [["basis-block-ui"]], decls: 3, vars: 1, consts: [[3, "blocked"], [1, "center-screen"]], template: function BlockUiComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p-blockUI", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "p-progressSpinner");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("blocked", ctx.isBlocked());
    } }, directives: [ɵngcc5.BlockUI, ɵngcc6.ProgressSpinner], styles: [".center-screen[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;min-height:100vh}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BlockUiComponent, [{
        type: i0.Component,
        args: [{
                selector: 'basis-block-ui',
                template: "<p-blockUI [blocked]=\"isBlocked()\">\n    <div class=\"center-screen\">\n        <p-progressSpinner></p-progressSpinner>\n    </div>\n</p-blockUI>\n",
                styles: [".center-screen{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;min-height:100vh}"]
            }]
    }], function () { return [{ type: ɵngcc4.BlockUiService }]; }, null); })();
        return BlockUiComponent;
    }());
    BlockUiComponent.ctorParameters = function () { return [
        { type: angularBase.BlockUiService }
    ]; };

    /**
     * Class BlockUiModule
     * @class
     */
    var BlockUiModule = /** @class */ (function () {
        function BlockUiModule() {
        }
BlockUiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BlockUiModule });
BlockUiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BlockUiModule_Factory(t) { return new (t || BlockUiModule)(); }, providers: [
        {
            provide: i1.HTTP_INTERCEPTORS,
            useClass: angularBase.BlockUiInterceptor,
            multi: true
        },
        angularBase.BlockUiService
    ], imports: [[
            common.CommonModule,
            blockui.BlockUIModule,
            progressspinner.ProgressSpinnerModule,
        ], ɵngcc5.BlockUIModule, ɵngcc6.ProgressSpinnerModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BlockUiModule, { declarations: [BlockUiComponent], imports: [ɵngcc7.CommonModule, ɵngcc5.BlockUIModule, ɵngcc6.ProgressSpinnerModule], exports: [ɵngcc5.BlockUIModule, BlockUiComponent, ɵngcc6.ProgressSpinnerModule] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BlockUiModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    blockui.BlockUIModule,
                    progressspinner.ProgressSpinnerModule,
                ],
                declarations: [
                    BlockUiComponent
                ],
                providers: [
                    {
                        provide: i1.HTTP_INTERCEPTORS,
                        useClass: angularBase.BlockUiInterceptor,
                        multi: true
                    },
                    angularBase.BlockUiService
                ],
                exports: [
                    blockui.BlockUIModule,
                    BlockUiComponent,
                    progressspinner.ProgressSpinnerModule
                ]
            }]
    }], function () { return []; }, null); })();
        return BlockUiModule;
    }());

    /**
     * Class PageNotificationComponent
     * @class
     */
    var PageNotificationComponent = /** @class */ (function () {
        function PageNotificationComponent() {
            /**
             * duration property
             * @type {number}
             */
            this.duration = 3000;
        }
PageNotificationComponent.ɵfac = function PageNotificationComponent_Factory(t) { return new (t || PageNotificationComponent)(); };
PageNotificationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PageNotificationComponent, selectors: [["basis-page-notification"]], inputs: { duration: "duration" }, decls: 1, vars: 0, template: function PageNotificationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "p-toast");
    } }, directives: [ɵngcc17.Toast], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PageNotificationComponent, [{
        type: i0.Component,
        args: [{
                selector: 'basis-page-notification',
                template: "<p-toast></p-toast>\n"
            }]
    }], function () { return []; }, { duration: [{
            type: i0.Input
        }] }); })();
        return PageNotificationComponent;
    }());
    PageNotificationComponent.propDecorators = {
        duration: [{ type: i0.Input }]
    };

    /**
     * Class PageNotificationModule
     * @class
     */
    var PageNotificationModule = /** @class */ (function () {
        function PageNotificationModule() {
        }
PageNotificationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PageNotificationModule });
PageNotificationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PageNotificationModule_Factory(t) { return new (t || PageNotificationModule)(); }, providers: [
        i1$1.MessageService,
        PageNotificationService,
        {
            provide: angularBase.NotificationProvider,
            useExisting: PageNotificationService
        }
    ], imports: [[
            common.CommonModule,
            toast.ToastModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PageNotificationModule, { declarations: [PageNotificationComponent], imports: [ɵngcc7.CommonModule, ɵngcc17.ToastModule], exports: [PageNotificationComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PageNotificationModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    toast.ToastModule
                ],
                declarations: [
                    PageNotificationComponent
                ],
                exports: [
                    PageNotificationComponent
                ],
                providers: [
                    i1$1.MessageService,
                    PageNotificationService,
                    {
                        provide: angularBase.NotificationProvider,
                        useExisting: PageNotificationService
                    }
                ]
            }]
    }], function () { return []; }, null); })();
        return PageNotificationModule;
    }());

    var FormNotificationComponent = /** @class */ (function (_super) {
        __extends(FormNotificationComponent, _super);
        function FormNotificationComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
FormNotificationComponent.ɵfac = function FormNotificationComponent_Factory(t) { return ɵFormNotificationComponent_BaseFactory(t || FormNotificationComponent); };
FormNotificationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormNotificationComponent, selectors: [["", "form-notification", ""]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c16, ngContentSelectors: _c15, decls: 3, vars: 1, consts: [[1, "p-invalid"]], template: function FormNotificationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵelementStart(1, "small", 0);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.message);
    } }, encapsulation: 2 });
var ɵFormNotificationComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FormNotificationComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormNotificationComponent, [{
        type: i0.Component,
        args: [{
                selector: '[form-notification]',
                template: "<ng-content></ng-content>\n<small class=\"p-invalid\">{{message}}</small>"
            }]
    }], null, null); })();
        return FormNotificationComponent;
    }(angularBase.FormNotificationComponentSuperclass));

    /**
     * Módulo para adicionar funcionalidade de notificação de erros de formulários.
     * @module
     */
    var FormNotificationModule = /** @class */ (function () {
        function FormNotificationModule() {
        }
FormNotificationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormNotificationModule });
FormNotificationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormNotificationModule_Factory(t) { return new (t || FormNotificationModule)(); }, imports: [[
            common.CommonModule,
            angularBase.FormNotificationBaseModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormNotificationModule, { declarations: [FormNotificationComponent], imports: [ɵngcc7.CommonModule, ɵngcc4.FormNotificationBaseModule], exports: [FormNotificationComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormNotificationModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    angularBase.FormNotificationBaseModule
                ],
                declarations: [
                    FormNotificationComponent
                ],
                exports: [
                    FormNotificationComponent
                ]
            }]
    }], function () { return []; }, null); })();
        return FormNotificationModule;
    }());

    /**
     * Class ErrorStackComponent
     * @class
     */
    var ErrorStackComponent = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {ErrorStackService} errorStack
         */
        function ErrorStackComponent(errorStack) {
            this.errorStack = errorStack;
            /**
             * title property
             * @type {string}
             */
            this.title = 'Error Stack';
            /**
             * errors property
             * @type {NamedErrorType}
             */
            this.errors = [];
        }
        /**
         * ngOnInit method
         * @returns void
         */
        ErrorStackComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.errorSubscription = this.errorStack.errors.subscribe(function (error) {
                _this.errors = __spread([error], _this.errors);
            });
        };
        /**
         * ngOnDestroy method
         * @returns void
         */
        ErrorStackComponent.prototype.ngOnDestroy = function () {
            this.errorSubscription.unsubscribe();
        };
ErrorStackComponent.ɵfac = function ErrorStackComponent_Factory(t) { return new (t || ErrorStackComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStackService)); };
ErrorStackComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ErrorStackComponent, selectors: [["basis-error-stack"]], inputs: { title: "title", template: "template" }, decls: 3, vars: 1, consts: [["defaultTemplate", ""], [4, "ngTemplateOutlet"], [1, "p-grid"], [1, "p-g-12"], [1, "card", "no-margin"], ["styleClass", "p-datatable-customers", "first", "0", 3, "value", "rowHover", "paginator", "rows"], ["pTemplate", "header"], ["pTemplate", "body"], ["pTemplate", "emptymessage"], [2, "width", "20%", "text-align", "center"], [2, "width", "10%", "text-align", "center"], ["pButton", "", "type", "button", "pTooltip", "Copiar erro para \u00E1rea de transfer\u00EAncia", "tooltipPosition", "left", "icon", "fa fa-copy", 1, "p-button-primary", 3, "clipboard"], ["colspan", "4"]], template: function ErrorStackComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ErrorStackComponent_ng_template_0_Template, 9, 5, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(2, ErrorStackComponent_ng_container_2_Template, 1, 0, "ng-container", 1);
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template ? ctx.template : _r0);
    } }, directives: [ɵngcc7.NgTemplateOutlet, ɵngcc8.Table, ɵngcc9.PrimeTemplate, ɵngcc3.ButtonDirective, ɵngcc2.Tooltip, ɵngcc4.ClipboardDirective], pipes: [ɵngcc7.DatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStackComponent, [{
        type: i0.Component,
        args: [{
                selector: 'basis-error-stack',
                template: "<ng-template #defaultTemplate>\n    <div class=\"p-grid\">\n        <div class=\"p-g-12\">\n            <div class=\"card no-margin\">\n                <h1>{{ title }}</h1>\n                <p-table \n                    [value]=\"errors\" \n                    styleClass=\"p-datatable-customers\"\n                    [rowHover]=\"true\"\n                    [paginator]=\"false\" \n                    [rows]=\"5\" first=\"0\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th style=\"width: 20%; text-align: center\">Data</th>\n                            <th style=\"width: 20%; text-align: center\">C\u00F3digo de identifica\u00E7\u00E3o</th>\n                            <th>Mensagem</th>\n                            <th style=\"width: 10%; text-align: center\">A\u00E7\u00E3o</th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-error>\n                        <tr>\n                            <td style=\"width: 20%; text-align: center\">{{error.createdAt|date: 'dd/MM/y H:mm:ss'}}</td>\n                            <td style=\"width: 20%; text-align: center\">{{error.correlationId || 'Indispon\u00EDvel'}}</td>\n                            <td>{{error.message}}</td>\n                            <td style=\"width: 10%; text-align: center\">\n                                <button pButton type=\"button\" pTooltip=\"Copiar erro para \u00E1rea de transfer\u00EAncia\" tooltipPosition=\"left\" class=\"p-button-primary\" icon=\"fa fa-copy\" [clipboard]=\"error.fullMessage\"></button>\n                            </td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\" let-columns>\n                        <tr>\n                            <td colspan=\"4\">\n                                Nenhum erro foi registrado at\u00E9 o momento.\n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-container *ngTemplateOutlet=\"template? template: defaultTemplate\"></ng-container>\n"
            }]
    }], function () { return [{ type: ɵngcc4.ErrorStackService }]; }, { title: [{
            type: i0.Input
        }], template: [{
            type: i0.Input
        }] }); })();
        return ErrorStackComponent;
    }());
    ErrorStackComponent.ctorParameters = function () { return [
        { type: angularBase.ErrorStackService }
    ]; };
    ErrorStackComponent.propDecorators = {
        title: [{ type: i0.Input }],
        template: [{ type: i0.Input }]
    };

    /**
     * Class ErrorStackModule
     * @class
     */
    var ErrorStackModule = /** @class */ (function () {
        function ErrorStackModule() {
        }
ErrorStackModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ErrorStackModule });
ErrorStackModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ErrorStackModule_Factory(t) { return new (t || ErrorStackModule)(); }, providers: [
        angularBase.ErrorStackService,
        {
            provide: angularBase.ErrorProvider,
            useClass: angularBase.ErrorStackProviderService,
            multi: true
        }
    ], imports: [[
            common.CommonModule,
            table.TableModule,
            button.ButtonModule,
            tooltip.TooltipModule,
            angularBase.ClipboardModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ErrorStackModule, { declarations: [ErrorStackComponent], imports: [ɵngcc7.CommonModule, ɵngcc8.TableModule, ɵngcc3.ButtonModule, ɵngcc2.TooltipModule, ɵngcc4.ClipboardModule], exports: [ErrorStackComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStackModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    table.TableModule,
                    button.ButtonModule,
                    tooltip.TooltipModule,
                    angularBase.ClipboardModule
                ],
                declarations: [
                    ErrorStackComponent
                ],
                providers: [
                    angularBase.ErrorStackService,
                    {
                        provide: angularBase.ErrorProvider,
                        useClass: angularBase.ErrorStackProviderService,
                        multi: true
                    }
                ],
                exports: [
                    ErrorStackComponent
                ]
            }]
    }], function () { return []; }, null); })();
        return ErrorStackModule;
    }());

    var CrudFormComponent = /** @class */ (function () {
        function CrudFormComponent(route) {
            this.route = route;
            this.disableSave = false;
            this.listRoute = "../../list";
        }
        CrudFormComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.route.paramMap.subscribe(function (params) {
                _this.action = params.get('action');
                if (params.get('id')) {
                    _this.route.data.subscribe(function (data) {
                        if (data.value) {
                            _this.form.patchValue(data.value);
                        }
                    });
                }
                else {
                    _this.listRoute = "../list";
                }
                if (_this.action === "view") {
                    _this.form.disable();
                }
                else if (_this.form.disabled) {
                    _this.form.enable();
                }
            });
        };
CrudFormComponent.ɵfac = function CrudFormComponent_Factory(t) { return new (t || CrudFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc18.ActivatedRoute)); };
CrudFormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CrudFormComponent, selectors: [["nCrudForm"]], inputs: { disableSave: "disableSave", form: "form", service: "service" }, ngContentSelectors: _c15, decls: 3, vars: 9, consts: [[3, "form", "action", "route", "disableSave"], ["nButton", "", "pButton", "", "type", "button", "label", "Voltar", 1, "p-mr-2", "p-mb-2", 3, "routerLink"]], template: function CrudFormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "nForm", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelement(2, "button", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("form", ctx.form)("action", ctx.action)("route", ɵngcc0.ɵɵpureFunction1(5, _c17, ctx.listRoute))("disableSave", ctx.disableSave);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction1(7, _c17, ctx.listRoute));
    } }, directives: function () { return [FormComponent, ɵngcc3.ButtonDirective, ɵngcc18.RouterLink]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CrudFormComponent, [{
        type: i0.Component,
        args: [{
                selector: 'nCrudForm',
                template: "<nForm [form]=\"form\" [action]=\"action\" [route]=\"[listRoute]\" [disableSave]=\"disableSave\">\n    <ng-content></ng-content>\n    <button nButton pButton type=\"button\" [routerLink]=\"[listRoute]\" label=\"Voltar\" class=\"p-mr-2 p-mb-2\"></button>\n</nForm>\n"
            }]
    }], function () { return [{ type: ɵngcc18.ActivatedRoute }]; }, { disableSave: [{
            type: i0.Input
        }], form: [{
            type: i0.Input
        }], service: [{
            type: i0.Input
        }] }); })();
        return CrudFormComponent;
    }());
    CrudFormComponent.ctorParameters = function () { return [
        { type: router.ActivatedRoute }
    ]; };
    CrudFormComponent.propDecorators = {
        form: [{ type: i0.Input }],
        service: [{ type: i0.Input }],
        disableSave: [{ type: i0.Input }]
    };

    var CRUD_SERVICE = new i0.InjectionToken("CRUD_SERVICE");

    var CrudListComponent = /** @class */ (function () {
        function CrudListComponent(crudService, confirmationService, route, router) {
            this.crudService = crudService;
            this.confirmationService = confirmationService;
            this.route = route;
            this.router = router;
            this.action = "findAll";
            this.findLabel = "Pesquisar";
            this.disableSave = false;
            this.disableEdit = false;
            this.disableView = false;
            this.disableDelete = false;
            this.find = new i0.EventEmitter();
        }
        CrudListComponent.prototype.ngOnInit = function () {
            if (this.service) {
                this.crudService = this.service;
            }
            if (!this.url) {
                this.url = this.crudService.uri;
            }
        };
        CrudListComponent.prototype.datatableClick = function (event) {
            var _this = this;
            if (event.selection) {
                switch (event.button) {
                    case "edit":
                    case "view":
                        this.router.navigate(["../" + event.button, event.selection.id], { relativeTo: this.route });
                        break;
                    case "delete":
                        this.confirmationService.confirm({
                            message: 'Você tem certeza que deseja excluir o registro?',
                            accept: function () { return _this.crudService.delete(event.selection.id)
                                .subscribe(function () { return _this.datatable.filter(); }); }
                        });
                        break;
                }
            }
        };
        CrudListComponent.prototype.findAll = function (event) {
            var _this = this;
            if (this.find.observers.length) {
                this.find.emit(this.form.value);
            }
            else {
                this.datatable.filterParams = {};
                Object.keys(this.form.value).forEach(function (element) {
                    var value = _this.form.value[element];
                    if (value) {
                        _this.datatable.filterParams[element] =
                            value instanceof Date ? JSON.stringify(value).replace(/"/g, "") : value;
                    }
                });
                this.datatable.filter();
            }
        };
        CrudListComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            var datatableNgAfterContentInit = this.datatable.pDatatableComponent.ngAfterContentInit;
            this.datatable.pDatatableComponent.ngAfterContentInit = function () {
                _this.datatable.pDatatableComponent.columns = _this.columns.toArray();
                datatableNgAfterContentInit.call(_this.datatable.pDatatableComponent);
            };
        };
        CrudListComponent.prototype.ngAfterViewInit = function () {
            for (var i in this.datatableExtraParams) {
                this.datatable[i] = this.datatableExtraParams[i];
            }
        };
CrudListComponent.ɵfac = function CrudListComponent_Factory(t) { return new (t || CrudListComponent)(ɵngcc0.ɵɵdirectiveInject(CRUD_SERVICE), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.ConfirmationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc18.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc18.Router)); };
CrudListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CrudListComponent, selectors: [["nCrudList"]], contentQueries: function CrudListComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, Column, 0);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);
    } }, viewQuery: function CrudListComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c18, 3);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datatable = _t.first);
    } }, inputs: { action: "action", findLabel: "findLabel", disableSave: "disableSave", disableEdit: "disableEdit", disableView: "disableView", disableDelete: "disableDelete", url: "url", form: "form", service: "service", datatableExtraParams: "datatableExtraParams" }, outputs: { find: "find" }, ngContentSelectors: _c21, decls: 7, vars: 8, consts: [[3, "form", "saveLabel", "save"], ["nButton", "", "pButton", "", "type", "button", "label", "Novo", "class", "p-mr-2 p-mb-2", 3, "routerLink", 4, "ngIf"], [3, "value", "url", "disableEdit", "disableView", "disableDelete", "buttonClick"], ["datatable", ""], ["header", "Confirmar Exclus\u00E3o", "acceptLabel", "Sim", "rejectLabel", "N\u00E3o", "icon", "pi pi-exclamation-triangle"], ["nButton", "", "pButton", "", "type", "button", "label", "Novo", 1, "p-mr-2", "p-mb-2", 3, "routerLink"]], template: function CrudListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c20);
        ɵngcc0.ɵɵelementStart(0, "nForm", 0);
        ɵngcc0.ɵɵlistener("save", function CrudListComponent_Template_nForm_save_0_listener($event) { return ctx.findAll($event); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵtemplate(2, CrudListComponent_button_2_Template, 1, 2, "button", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "basis-datatable", 2, 3);
        ɵngcc0.ɵɵlistener("buttonClick", function CrudListComponent_Template_basis_datatable_buttonClick_3_listener($event) { return ctx.datatableClick($event); });
        ɵngcc0.ɵɵprojection(5, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(6, "p-confirmDialog", 4);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("form", ctx.form)("saveLabel", ctx.findLabel);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.disableSave);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", ctx.result)("url", ctx.url)("disableEdit", ctx.disableEdit)("disableView", ctx.disableView)("disableDelete", ctx.disableDelete);
    } }, directives: function () { return [FormComponent, ɵngcc7.NgIf, DatatableComponent, ɵngcc19.ConfirmDialog, ɵngcc3.ButtonDirective, ɵngcc18.RouterLink]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CrudListComponent, [{
        type: i0.Component,
        args: [{
                selector: 'nCrudList',
                template: "<nForm [form]=\"form\" (save)=\"findAll($event)\" [saveLabel]=\"findLabel\">\n    <ng-content select=\"[nForm]\"></ng-content>\n    <button nButton pButton type=\"button\" [routerLink]=\"['../save']\" label=\"Novo\" *ngIf=\"!disableSave\" class=\"p-mr-2 p-mb-2\"></button>\n</nForm>\n<basis-datatable #datatable \n    [value]=\"result\" \n    (buttonClick)=\"datatableClick($event)\" \n    [url]=\"url\"\n    [disableEdit]=\"disableEdit\" \n    [disableView]=\"disableView\"     \n    [disableDelete]=\"disableDelete\">\n    <ng-content select=\"p-column\"></ng-content>\n</basis-datatable>\n\n<p-confirmDialog header=\"Confirmar Exclus\u00E3o\" acceptLabel=\"Sim\" rejectLabel=\"N\u00E3o\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n"
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: i0.Inject,
                args: [CRUD_SERVICE]
            }] }, { type: ɵngcc9.ConfirmationService }, { type: ɵngcc18.ActivatedRoute }, { type: ɵngcc18.Router }]; }, { action: [{
            type: i0.Input
        }], findLabel: [{
            type: i0.Input
        }], disableSave: [{
            type: i0.Input
        }], disableEdit: [{
            type: i0.Input
        }], disableView: [{
            type: i0.Input
        }], disableDelete: [{
            type: i0.Input
        }], find: [{
            type: i0.Output
        }], url: [{
            type: i0.Input
        }], form: [{
            type: i0.Input
        }], service: [{
            type: i0.Input
        }], datatableExtraParams: [{
            type: i0.Input
        }], datatable: [{
            type: i0.ViewChild,
            args: ['datatable', { static: true }]
        }], columns: [{
            type: i0.ContentChildren,
            args: [Column]
        }] }); })();
        return CrudListComponent;
    }());
    CrudListComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [CRUD_SERVICE,] }] },
        { type: i1$1.ConfirmationService },
        { type: router.ActivatedRoute },
        { type: router.Router }
    ]; };
    CrudListComponent.propDecorators = {
        form: [{ type: i0.Input }],
        action: [{ type: i0.Input }],
        findLabel: [{ type: i0.Input }],
        service: [{ type: i0.Input }],
        url: [{ type: i0.Input }],
        disableSave: [{ type: i0.Input }],
        disableEdit: [{ type: i0.Input }],
        disableView: [{ type: i0.Input }],
        disableDelete: [{ type: i0.Input }],
        datatableExtraParams: [{ type: i0.Input }],
        find: [{ type: i0.Output }],
        datatable: [{ type: i0.ViewChild, args: ['datatable', { static: true },] }],
        columns: [{ type: i0.ContentChildren, args: [Column,] }]
    };

    var CrudResolveGuard = /** @class */ (function () {
        function CrudResolveGuard(crudService) {
            this.crudService = crudService;
        }
        CrudResolveGuard.prototype.resolve = function (route) {
            return this.crudService.find(route.paramMap.get('id'));
        };
CrudResolveGuard.ɵfac = function CrudResolveGuard_Factory(t) { return new (t || CrudResolveGuard)(ɵngcc0.ɵɵinject(CRUD_SERVICE)); };
CrudResolveGuard.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CrudResolveGuard, factory: function (t) { return CrudResolveGuard.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CrudResolveGuard, [{
        type: i0.Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: i0.Inject,
                args: [CRUD_SERVICE]
            }] }]; }, null); })();
        return CrudResolveGuard;
    }());
    CrudResolveGuard.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [CRUD_SERVICE,] }] }
    ]; };

    function crudRouteBuilder(route, parent, list, form) {
        return {
            path: route,
            component: parent,
            data: { breadcrumb: route },
            children: [
                {
                    path: 'list',
                    component: list,
                    data: { breadcrumb: 'list' },
                },
                {
                    path: ':action',
                    component: form,
                    data: { breadcrumb: ':action' },
                },
                {
                    path: ':action/:id',
                    component: form,
                    resolve: {
                        value: CrudResolveGuard
                    },
                    data: { breadcrumb: ':action' },
                }
            ]
        };
    }

    var CrudServiceNuvem = /** @class */ (function () {
        function CrudServiceNuvem(uri, http) {
            this.uri = uri;
            this.http = http;
        }
        CrudServiceNuvem.prototype.save = function (entity) {
            return this.http.post(this.uri, entity);
        };
        CrudServiceNuvem.prototype.edit = function (entity) {
            return this.http.put(this.uri, entity);
        };
        CrudServiceNuvem.prototype.find = function (id) {
            return this.http.get(this.uri + "/" + id);
        };
        CrudServiceNuvem.prototype.delete = function (id) {
            return this.http.delete(this.uri + "/" + id);
        };
        CrudServiceNuvem.prototype.findAll = function (entity) {
            var params = new i1.HttpParams();
            for (var field in entity) {
                params = params.append(field, entity[field]);
            }
            return this.http.get("" + this.uri, { params: params });
        };
        return CrudServiceNuvem;
    }());

    var STATUS;
    (function (STATUS) {
        STATUS[STATUS["OK"] = 200] = "OK";
        STATUS[STATUS["CREATED"] = 201] = "CREATED";
    })(STATUS || (STATUS = {}));
    var SuccessMessageHandlerInterceptor = /** @class */ (function () {
        function SuccessMessageHandlerInterceptor(notification) {
            this.notification = notification;
        }
        SuccessMessageHandlerInterceptor.prototype.intercept = function (req, next) {
            var _this = this;
            return next.handle(req).pipe(operators.tap(function (event) {
                if (event instanceof i1.HttpResponse) {
                    if (event.headers.has("X-nuvem-alert")) {
                        _this.notification.addSuccessMessage(event.headers.get("X-nuvem-alert"));
                    }
                    else if ((event.status === STATUS.OK || event.status === STATUS.CREATED) && req.method != "GET") {
                        _this.notification.addSuccessMessage("Operação realizada com sucesso!");
                    }
                }
            }));
        };
SuccessMessageHandlerInterceptor.ɵfac = function SuccessMessageHandlerInterceptor_Factory(t) { return new (t || SuccessMessageHandlerInterceptor)(ɵngcc0.ɵɵinject(PageNotificationService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SuccessMessageHandlerInterceptor, [{
        type: i0.Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return [{ type: PageNotificationService }]; }, null); })();
        return SuccessMessageHandlerInterceptor;
    }());
    SuccessMessageHandlerInterceptor.ɵprov = i0.ɵɵdefineInjectable({ factory: function SuccessMessageHandlerInterceptor_Factory() { return new SuccessMessageHandlerInterceptor(i0.ɵɵinject(PageNotificationService)); }, token: SuccessMessageHandlerInterceptor, providedIn: "root" });
    SuccessMessageHandlerInterceptor.ctorParameters = function () { return [
        { type: PageNotificationService }
    ]; };
    var httpInterceptorProviders = [
        { provide: i1.HTTP_INTERCEPTORS, useClass: SuccessMessageHandlerInterceptor, multi: true },
    ];

    var FieldComponent = /** @class */ (function (_super) {
        __extends(FieldComponent, _super);
        function FieldComponent(controlContainer, injector) {
            var _this = _super.call(this, injector) || this;
            _this.controlContainer = controlContainer;
            _this.injector = injector;
            _this.onBlur = new i0.EventEmitter();
            _this.onSelect = new i0.EventEmitter();
            _this.onFocus = new i0.EventEmitter();
            return _this;
        }
        Object.defineProperty(FieldComponent.prototype, "name", {
            get: function () {
                return this._name ? this._name : this.formControlName;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldComponent.prototype, "label", {
            get: function () {
                return this.required ? this._label + "*" : this._label;
            },
            set: function (value) {
                this._label = value;
            },
            enumerable: false,
            configurable: true
        });
        FieldComponent.prototype.ngOnInit = function () {
            this.setValidators();
            this.setRequired();
        };
        FieldComponent.prototype.setRequired = function () {
            if (this.required) {
                if (this.input instanceof i0.ElementRef) {
                    this.input.nativeElement.required = true;
                }
                else {
                    this.input.required = true;
                }
            }
        };
        FieldComponent.prototype.setElementRefAttr = function (attr, value) {
            if (value && this.input instanceof i0.ElementRef) {
                this.input.nativeElement[attr] = value;
            }
        };
        FieldComponent.prototype.setFormControlValidators = function () {
            if (this.controlContainer && this.formControlName) {
                var validator = this.controlContainer.control.get(this.formControlName).validator;
                if (validator) {
                    this.formControl.setValidators(validator);
                }
            }
        };
        FieldComponent.prototype.setValidators = function () {
            if (this.controlContainer && this.formControlName) {
                var validator = this.controlContainer.control.get(this.formControlName).validator;
                if (validator) {
                    this.formControl.setValidators(validator);
                }
            }
        };
        FieldComponent.prototype.ngAfterViewInit = function () {
            for (var i in this.extraParams) {
                this.input[i] = this.extraParams[i];
            }
        };
        FieldComponent.prototype.onBlurEvent = function (event) {
            this.onBlur.emit(event);
        };
        FieldComponent.prototype.onSelectEvent = function (event) {
            this.onSelect.emit(event);
        };
        FieldComponent.prototype.onFocusEvent = function (event) {
            this.onFocus.emit(event);
        };
FieldComponent.ɵfac = function FieldComponent_Factory(t) { return new (t || FieldComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc10.ControlContainer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };
FieldComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FieldComponent, selectors: [["", "nField", ""]], viewQuery: function FieldComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c22, 1);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
    } }, inputs: { name: "name", label: "label", form: "form", formControlName: "formControlName", extraParams: "extraParams", required: "required" }, outputs: { onBlur: "onBlur", onSelect: "onSelect", onFocus: "onFocus" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FieldComponent, [{
        type: i0.Directive,
        args: [{
                selector: "[nField]"
            }]
    }], function () { return [{ type: ɵngcc10.ControlContainer }, { type: ɵngcc0.Injector }]; }, { name: [{
            type: i0.Input
        }], label: [{
            type: i0.Input
        }], form: [{
            type: i0.Input
        }], formControlName: [{
            type: i0.Input
        }], extraParams: [{
            type: i0.Input
        }], required: [{
            type: i0.Input
        }], onBlur: [{
            type: i0.Output
        }], onSelect: [{
            type: i0.Output
        }], onFocus: [{
            type: i0.Output
        }], input: [{
            type: i0.ViewChild,
            args: ["input", { static: false }]
        }] }); })();
        return FieldComponent;
    }(angularBase.WrappedFormControlSuperclass));
    FieldComponent.ctorParameters = function () { return [
        { type: forms.ControlContainer },
        { type: i0.Injector }
    ]; };
    FieldComponent.propDecorators = {
        form: [{ type: i0.Input }],
        formControlName: [{ type: i0.Input }],
        extraParams: [{ type: i0.Input }],
        required: [{ type: i0.Input }],
        onBlur: [{ type: i0.Output }],
        onSelect: [{ type: i0.Output }],
        onFocus: [{ type: i0.Output }],
        input: [{ type: i0.ViewChild, args: ["input", { static: false },] }],
        name: [{ type: i0.Input }],
        label: [{ type: i0.Input }]
    };

    var InputTextComponent = /** @class */ (function (_super) {
        __extends(InputTextComponent, _super);
        function InputTextComponent() {
            var _this = _super.apply(this, __spread(arguments)) || this;
            _this.type = "text";
            return _this;
        }
        InputTextComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.setElementRefAttr("min", this.min);
            this.setElementRefAttr("max", this.max);
            this.setElementRefAttr("minLength", this.minLength);
            this.setElementRefAttr("maxLength", this.maxLength);
            this.setElementRefAttr("pattern", this.pattern);
        };
InputTextComponent.ɵfac = function InputTextComponent_Factory(t) { return ɵInputTextComponent_BaseFactory(t || InputTextComponent); };
InputTextComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputTextComponent, selectors: [["", "nInputText", ""]], inputs: { minLength: "minLength", maxLength: "maxLength", min: "min", max: "max", pattern: "pattern", type: "type" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(InputTextComponent)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c23, ngContentSelectors: _c15, decls: 7, vars: 11, consts: [["form-notification", "", 1, "p-float-label", 3, "name", "form"], ["notification", ""], ["pInputText", "", 3, "ngClass", "type", "name", "formControl", "blur", "focus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function InputTextComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "input", 2, 3);
        ɵngcc0.ɵɵlistener("blur", function InputTextComponent_Template_input_blur_2_listener($event) { return ctx.onBlurEvent($event); })("focus", function InputTextComponent_Template_input_focus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, InputTextComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c24, _r0.message))("type", ctx.type)("name", ctx.name)("formControl", ctx.formControl);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r0.message);
    } }, directives: function () { return [FormNotificationComponent, ɵngcc10.DefaultValueAccessor, ɵngcc11.InputText, ɵngcc7.NgClass, ɵngcc10.NgControlStatus, ɵngcc10.FormControlDirective, ɵngcc7.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵInputTextComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(InputTextComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputTextComponent, [{
        type: i0.Component,
        args: [{
                selector: "[nInputText]",
                template: "<span #notification form-notification class=\"p-float-label\" [name]=\"name\" [form]=\"form\">\n    <input #input\n        pInputText\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        [type]=\"type\"\n        [name]=\"name\"\n        (blur)=\"onBlurEvent($event)\"\n        (focus)=\"onFocusEvent($event)\"\n        [formControl]=\"formControl\" />\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(InputTextComponent)]
            }]
    }], null, { minLength: [{
            type: i0.Input
        }], maxLength: [{
            type: i0.Input
        }], min: [{
            type: i0.Input
        }], max: [{
            type: i0.Input
        }], pattern: [{
            type: i0.Input
        }], type: [{
            type: i0.Input
        }] }); })();
        return InputTextComponent;
    }(FieldComponent));
    InputTextComponent.propDecorators = {
        minLength: [{ type: i0.Input }],
        maxLength: [{ type: i0.Input }],
        min: [{ type: i0.Input }],
        max: [{ type: i0.Input }],
        pattern: [{ type: i0.Input }],
        type: [{ type: i0.Input }]
    };

    var CALENDAR_LOCALE = {
        firstDayOfWeek: 0,
        dayNames: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"],
        dayNamesShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"],
        dayNamesMin: ["D", "S", "T", "Q", "Q", "S", "S"],
        monthNames: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
        monthNamesShort: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"],
        today: 'Hoje',
        clear: 'Limpar',
        dateFormat: 'dd/mm/yy',
        weekHeader: 'Semana'
    };

    var CalendarComponent = /** @class */ (function (_super) {
        __extends(CalendarComponent, _super);
        function CalendarComponent() {
            var _this = _super.apply(this, __spread(arguments)) || this;
            _this.maxDate = null;
            _this.yearRange = null;
            _this.monthNavigator = false;
            _this.yearNavigator = false;
            _this.locale = CALENDAR_LOCALE;
            return _this;
        }
        CalendarComponent.prototype.outerToInner = function (value) {
            return value ? new Date(value) : null;
        };
CalendarComponent.ɵfac = function CalendarComponent_Factory(t) { return ɵCalendarComponent_BaseFactory(t || CalendarComponent); };
CalendarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CalendarComponent, selectors: [["", "nCalendar", ""]], inputs: { maxDate: "maxDate", yearRange: "yearRange", monthNavigator: "monthNavigator", yearNavigator: "yearNavigator", locale: "locale" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(CalendarComponent)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c25, ngContentSelectors: _c15, decls: 7, vars: 16, consts: [["form-notification", "", 1, "p-float-label", 3, "name", "form"], ["notification", ""], [3, "ngClass", "name", "formControl", "locale", "dateFormat", "yearRange", "maxDate", "monthNavigator", "yearNavigator", "onBlur", "onFocus", "onSelect"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function CalendarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-calendar", 2, 3);
        ɵngcc0.ɵɵlistener("onBlur", function CalendarComponent_Template_p_calendar_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onFocus", function CalendarComponent_Template_p_calendar_onFocus_2_listener($event) { return ctx.onFocusEvent($event); })("onSelect", function CalendarComponent_Template_p_calendar_onSelect_2_listener($event) { return ctx.onSelectEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, CalendarComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(14, _c24, _r0.message))("name", ctx.name)("formControl", ctx.formControl)("locale", ctx.locale)("dateFormat", ctx.locale.dateFormat)("yearRange", ctx.yearRange)("maxDate", ctx.maxDate)("monthNavigator", ctx.monthNavigator)("yearNavigator", ctx.yearNavigator);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r0.message);
    } }, directives: function () { return [FormNotificationComponent, ɵngcc20.Calendar, ɵngcc7.NgClass, ɵngcc10.NgControlStatus, ɵngcc10.FormControlDirective, ɵngcc7.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵCalendarComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(CalendarComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarComponent, [{
        type: i0.Component,
        args: [{
                selector: "[nCalendar]",
                template: "<span #notification form-notification class=\"p-float-label\" [name]=\"name\" [form]=\"form\">\n    <p-calendar #input\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        [name]=\"name\"\n        [formControl]=\"formControl\"\n        [locale]=\"locale\"\n        [dateFormat]=\"locale.dateFormat\"\n        [yearRange]=\"yearRange\"\n        [maxDate]=\"maxDate\"\n        [monthNavigator]=\"monthNavigator\"\n        [yearNavigator]=\"yearNavigator\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        (onSelect)=\"onSelectEvent($event)\">\n    </p-calendar>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(CalendarComponent)]
            }]
    }], null, { maxDate: [{
            type: i0.Input
        }], yearRange: [{
            type: i0.Input
        }], monthNavigator: [{
            type: i0.Input
        }], yearNavigator: [{
            type: i0.Input
        }], locale: [{
            type: i0.Input
        }] }); })();
        return CalendarComponent;
    }(FieldComponent));
    CalendarComponent.propDecorators = {
        maxDate: [{ type: i0.Input }],
        yearRange: [{ type: i0.Input }],
        monthNavigator: [{ type: i0.Input }],
        yearNavigator: [{ type: i0.Input }],
        locale: [{ type: i0.Input }]
    };

    var TextAreaComponent = /** @class */ (function (_super) {
        __extends(TextAreaComponent, _super);
        function TextAreaComponent() {
            var _this = _super.apply(this, __spread(arguments)) || this;
            _this.autoResize = false;
            return _this;
        }
TextAreaComponent.ɵfac = function TextAreaComponent_Factory(t) { return ɵTextAreaComponent_BaseFactory(t || TextAreaComponent); };
TextAreaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TextAreaComponent, selectors: [["", "nTextArea", ""]], inputs: { autoResize: "autoResize", rows: "rows", cols: "cols", minLength: "minLength", maxLength: "maxLength" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(TextAreaComponent)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c26, ngContentSelectors: _c15, decls: 8, vars: 15, consts: [["form-notification", "", 1, "p-float-label", 3, "name", "form"], ["notification", ""], ["pInputTextarea", "", "type", "text", 3, "ngClass", "name", "autoResize", "rows", "cols", "minLength", "maxLength", "formControl", "blur", "focus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function TextAreaComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "textarea", 2, 3);
        ɵngcc0.ɵɵlistener("blur", function TextAreaComponent_Template_textarea_blur_2_listener($event) { return ctx.onBlurEvent($event); })("focus", function TextAreaComponent_Template_textarea_focus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵtext(4, "    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(5, "label", 4);
        ɵngcc0.ɵɵtemplate(6, TextAreaComponent_nValidationMessage_6_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(7);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(13, _c24, _r0.message))("name", ctx.name)("autoResize", ctx.autoResize)("rows", ctx.rows)("cols", ctx.cols)("minLength", ctx.minLength)("maxLength", ctx.maxLength)("formControl", ctx.formControl);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r0.message);
    } }, directives: function () { return [FormNotificationComponent, ɵngcc10.DefaultValueAccessor, ɵngcc21.InputTextarea, ɵngcc7.NgClass, ɵngcc10.NgControlStatus, ɵngcc10.FormControlDirective, ɵngcc7.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵTextAreaComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(TextAreaComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextAreaComponent, [{
        type: i0.Component,
        args: [{
                selector: "[nTextArea]",
                template: "<span #notification form-notification class=\"p-float-label\" [name]=\"name\" [form]=\"form\">\n    <textarea #input\n        pInputTextarea\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        type=\"text\"\n        [name]=\"name\"\n        [autoResize]=\"autoResize\"\n        [rows]=\"rows\"\n        [cols]=\"cols\"\n        [minLength]=\"minLength\"\n        [maxLength]=\"maxLength\"\n        [formControl]=\"formControl\"\n        (blur)=\"onBlurEvent($event)\"\n        (focus)=\"onFocusEvent($event)\">\n    </textarea>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(TextAreaComponent)]
            }]
    }], null, { autoResize: [{
            type: i0.Input
        }], rows: [{
            type: i0.Input
        }], cols: [{
            type: i0.Input
        }], minLength: [{
            type: i0.Input
        }], maxLength: [{
            type: i0.Input
        }] }); })();
        return TextAreaComponent;
    }(FieldComponent));
    TextAreaComponent.propDecorators = {
        autoResize: [{ type: i0.Input }],
        rows: [{ type: i0.Input }],
        cols: [{ type: i0.Input }],
        minLength: [{ type: i0.Input }],
        maxLength: [{ type: i0.Input }]
    };

    var DropdownComponent = /** @class */ (function (_super) {
        __extends(DropdownComponent, _super);
        function DropdownComponent() {
            var _this = _super.apply(this, __spread(arguments)) || this;
            _this.virtualScroll = false;
            _this.filter = false;
            _this.itemSize = 30;
            _this.options = [];
            _this.onChange = new i0.EventEmitter();
            return _this;
        }
        DropdownComponent.prototype.ngOnInit = function () {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            if (this.service) {
                this.service.findAll(null).subscribe(function (data) {
                    _this.options = data;
                });
            }
        };
        DropdownComponent.prototype.onChangeEvent = function (event) {
            this.onChange.emit(event);
        };
        DropdownComponent.prototype.outerToInner = function (value) {
            var _this = this;
            if (value && value.id) {
                this.service.find(value.id).subscribe(function (data) {
                    _this.formControl.setValue(data);
                });
            }
            return value;
        };
DropdownComponent.ɵfac = function DropdownComponent_Factory(t) { return ɵDropdownComponent_BaseFactory(t || DropdownComponent); };
DropdownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DropdownComponent, selectors: [["", "nDropdown", ""]], inputs: { optionLabel: "optionLabel", virtualScroll: "virtualScroll", filter: "filter", itemSize: "itemSize", service: "service", options: "options" }, outputs: { onChange: "onChange" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(DropdownComponent)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c27, ngContentSelectors: _c15, decls: 7, vars: 11, consts: [["form-notification", "", 1, "p-float-label", "custom-select", 3, "name", "form"], ["notification", ""], [3, "formControl", "optionLabel", "options", "filter", "virtualScroll", "itemSize", "onChange"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function DropdownComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-dropdown", 2, 3);
        ɵngcc0.ɵɵlistener("onChange", function DropdownComponent_Template_p_dropdown_onChange_2_listener($event) { return ctx.onChangeEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, DropdownComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formControl", ctx.formControl)("optionLabel", ctx.optionLabel)("options", ctx.options)("filter", ctx.filter)("virtualScroll", ctx.virtualScroll)("itemSize", ctx.itemSize);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r0.message);
    } }, directives: function () { return [FormNotificationComponent, ɵngcc15.Dropdown, ɵngcc10.NgControlStatus, ɵngcc10.FormControlDirective, ɵngcc7.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵDropdownComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(DropdownComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownComponent, [{
        type: i0.Component,
        args: [{
                selector: "[nDropdown]",
                template: "<span #notification form-notification class=\"p-float-label custom-select\" [name]=\"name\" [form]=\"form\">\n    <p-dropdown #input\n        [formControl]=\"formControl\"\n        [optionLabel]=\"optionLabel\"\n        [options]=\"options\"\n        [filter]=\"filter\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onChange)=\"onChangeEvent($event)\">\n    </p-dropdown>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(DropdownComponent)]
            }]
    }], null, { optionLabel: [{
            type: i0.Input
        }], virtualScroll: [{
            type: i0.Input
        }], filter: [{
            type: i0.Input
        }], itemSize: [{
            type: i0.Input
        }], service: [{
            type: i0.Input
        }], options: [{
            type: i0.Input
        }], onChange: [{
            type: i0.Output
        }] }); })();
        return DropdownComponent;
    }(FieldComponent));
    DropdownComponent.propDecorators = {
        optionLabel: [{ type: i0.Input }],
        virtualScroll: [{ type: i0.Input }],
        filter: [{ type: i0.Input }],
        itemSize: [{ type: i0.Input }],
        service: [{ type: i0.Input }],
        options: [{ type: i0.Input }],
        onChange: [{ type: i0.Output }]
    };

    var InputMaskComponent = /** @class */ (function (_super) {
        __extends(InputMaskComponent, _super);
        function InputMaskComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
InputMaskComponent.ɵfac = function InputMaskComponent_Factory(t) { return ɵInputMaskComponent_BaseFactory(t || InputMaskComponent); };
InputMaskComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputMaskComponent, selectors: [["", "nInputMask", ""]], inputs: { mask: "mask", placeholder: "placeholder" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(InputMaskComponent)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c28, ngContentSelectors: _c15, decls: 7, vars: 12, consts: [["form-notification", "", 1, "p-float-label", 3, "name", "form"], ["notification", ""], ["pInputText", "", 3, "ngClass", "name", "formControl", "mask", "placeholder", "onBlur", "onFocus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function InputMaskComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-inputMask", 2, 3);
        ɵngcc0.ɵɵlistener("onBlur", function InputMaskComponent_Template_p_inputMask_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onFocus", function InputMaskComponent_Template_p_inputMask_onFocus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, InputMaskComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c24, _r0.message))("name", ctx.name)("formControl", ctx.formControl)("mask", ctx.mask)("placeholder", ctx.placeholder);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r0.message);
    } }, directives: function () { return [FormNotificationComponent, ɵngcc22.InputMask, ɵngcc11.InputText, ɵngcc7.NgClass, ɵngcc10.NgControlStatus, ɵngcc10.FormControlDirective, ɵngcc7.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵInputMaskComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(InputMaskComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputMaskComponent, [{
        type: i0.Component,
        args: [{
                selector: "[nInputMask]",
                template: "<span #notification form-notification class=\"p-float-label\" [name]=\"name\" [form]=\"form\">\n    <p-inputMask #input\n        pInputText\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        [name]=\"name\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        [formControl]=\"formControl\"\n        [mask]=\"mask\"\n        [placeholder]=\"placeholder\"></p-inputMask>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(InputMaskComponent)]
            }]
    }], null, { mask: [{
            type: i0.Input
        }], placeholder: [{
            type: i0.Input
        }] }); })();
        return InputMaskComponent;
    }(FieldComponent));
    InputMaskComponent.propDecorators = {
        mask: [{ type: i0.Input }],
        placeholder: [{ type: i0.Input }]
    };

    var CheckComponent = /** @class */ (function (_super) {
        __extends(CheckComponent, _super);
        /**
         * Método construtor responsável por carregar o serviço de validação
         * @param formNotificationService
         */
        function CheckComponent(controlContainer, injector, formNotificationService) {
            var _this = _super.call(this, controlContainer, injector) || this;
            _this.formNotificationService = formNotificationService;
            return _this;
        }
        /**
         * Método Inicial para subscrição no endpoint responsável por validar o formulário
         */
        CheckComponent.prototype.ngOnInit = function () {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            this.subscription = this.formNotificationService
                .notifications(this.form, this.name)
                .subscribe(function (notification) {
                if (notification instanceof angularBase.FieldFormNotification) {
                    _this.message = notification.message;
                }
                else {
                    _this.message = null;
                }
            });
        };
        /**
         * Método responsável por realizar a saida das subscrições do endpont de validação
         */
        CheckComponent.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
            this.subscription.unsubscribe();
        };
CheckComponent.ɵfac = function CheckComponent_Factory(t) { return new (t || CheckComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc10.ControlContainer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormNotificationService)); };
CheckComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CheckComponent, selectors: [["", "nCheck", ""]], features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(CheckComponent)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c29, ngContentSelectors: _c15, decls: 11, vars: 12, consts: [[1, "p-g-12", "semborda"], [1, "p-g-4", 3, "innerHTML"], [1, "p-g-4"], ["id", "sim", "type", "radio", "pRadioButton", "", 3, "ngClass", "value", "name", "formControl"], ["id", "n\u00E3o", "type", "radio", "name", "correspondencia", "pRadioButton", "", 3, "ngClass", "value", "formControl"]], template: function CheckComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelement(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelement(3, "p-radioButton", 3);
        ɵngcc0.ɵɵelementStart(4, "label");
        ɵngcc0.ɵɵtext(5, "Sim");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 2);
        ɵngcc0.ɵɵelement(7, "p-radioButton", 4);
        ɵngcc0.ɵɵelementStart(8, "label");
        ɵngcc0.ɵɵtext(9, "N\u00E3o");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(10);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c24, ctx.message))("value", true)("name", ctx.name)("formControl", ctx.formControl);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c24, ctx.message))("value", false)("formControl", ctx.formControl);
    } }, directives: [ɵngcc23.RadioButton, ɵngcc7.NgClass, ɵngcc10.NgControlStatus, ɵngcc10.FormControlDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CheckComponent, [{
        type: i0.Component,
        args: [{
                selector: "[nCheck]",
                template: "<div class=\"p-g-12 semborda\">\n    <div class=\"p-g-4\" [innerHTML]=\"label\"></div>\n    <div class=\"p-g-4\">\n        <p-radioButton\n            [ngClass]=\"{ 'ng-invalid ng-dirty': message }\"\n            id=\"sim\"\n            type=\"radio\"\n            [value]=\"true\"\n            [name]=\"name\"\n            [formControl]=\"formControl\"\n            pRadioButton></p-radioButton>\n        <label>Sim</label>\n    </div>\n    <div class=\"p-g-4\">\n        <p-radioButton\n            [ngClass]=\"{ 'ng-invalid ng-dirty': message }\"\n            id=\"n\u00E3o\"\n            type=\"radio\"\n            [value]=\"false\"\n            name=\"correspondencia\"\n            [formControl]=\"formControl\"\n            pRadioButton></p-radioButton>\n        <label>N\u00E3o</label>\n    </div>\n    <ng-content></ng-content>\n</div>\n",
                providers: [angularBase.provideValueAccessor(CheckComponent)]
            }]
    }], function () { return [{ type: ɵngcc10.ControlContainer }, { type: ɵngcc0.Injector }, { type: ɵngcc4.FormNotificationService }]; }, null); })();
        return CheckComponent;
    }(FieldComponent));
    CheckComponent.ctorParameters = function () { return [
        { type: forms.ControlContainer },
        { type: i0.Injector },
        { type: angularBase.FormNotificationService }
    ]; };

    var FormComponent = /** @class */ (function () {
        function FormComponent(crudService, activatedRoute, router) {
            this.crudService = crudService;
            this.activatedRoute = activatedRoute;
            this.router = router;
            this.action = "save";
            this.saveLabel = "Salvar";
            this.disableSave = false;
            this.save = new i0.EventEmitter();
            this.reset = new i0.EventEmitter();
        }
        FormComponent.prototype.ngOnInit = function () {
            if (this.service) {
                this.crudService = this.service;
            }
        };
        FormComponent.prototype.submit = function () {
            var _this = this;
            if (this.save.observers.length) {
                this.save.emit(this.form.value);
            }
            else {
                this.crudService[this.action](this.form.value)
                    .subscribe(function () {
                    if (_this.route) {
                        _this.router.navigate(_this.route, { relativeTo: _this.activatedRoute });
                    }
                    else if (_this.reset.observers.length) {
                        _this.reset.emit(_this.form);
                    }
                    else {
                        _this.form.reset();
                    }
                });
            }
        };
FormComponent.ɵfac = function FormComponent_Factory(t) { return new (t || FormComponent)(ɵngcc0.ɵɵdirectiveInject(CRUD_SERVICE), ɵngcc0.ɵɵdirectiveInject(ɵngcc18.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc18.Router)); };
FormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormComponent, selectors: [["nForm"]], inputs: { action: "action", saveLabel: "saveLabel", disableSave: "disableSave", form: "form", route: "route", service: "service" }, outputs: { save: "save", reset: "reset" }, ngContentSelectors: _c31, decls: 5, vars: 1, consts: [[1, "p-grid"], [1, "p-col-12"], [1, "form-group", 3, "submit"], [4, "ngIf"], ["pButton", "", "type", "submit", 1, "p-mr-2", "p-mb-2", 3, "label", "disabled"]], template: function FormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c30);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "form", 2);
        ɵngcc0.ɵɵlistener("submit", function FormComponent_Template_form_submit_2_listener() { return ctx.submit(); });
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵtemplate(4, FormComponent_div_4_Template, 3, 2, "div", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.disableSave);
    } }, directives: [ɵngcc10.ɵangular_packages_forms_forms_y, ɵngcc10.NgControlStatusGroup, ɵngcc10.NgForm, ɵngcc7.NgIf, ɵngcc3.ButtonDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormComponent, [{
        type: i0.Component,
        args: [{
                selector: 'nForm',
                template: "<div class=\"p-grid\">\n    <div class=\"p-col-12\">\n        <form (submit)=\"submit()\" class=\"form-group\">\n            <ng-content></ng-content>\n            <div *ngIf=\"!disableSave\">\n                <button pButton type=\"submit\" [label]=\"saveLabel\" [disabled]=\"form.disabled || form.invalid\" class=\"p-mr-2 p-mb-2\"></button>\n                <ng-content select=\"[nButton]\"></ng-content>\n            </div>\n        </form>\n    </div>\n</div>"
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: i0.Inject,
                args: [CRUD_SERVICE]
            }] }, { type: ɵngcc18.ActivatedRoute }, { type: ɵngcc18.Router }]; }, { action: [{
            type: i0.Input
        }], saveLabel: [{
            type: i0.Input
        }], disableSave: [{
            type: i0.Input
        }], save: [{
            type: i0.Output
        }], reset: [{
            type: i0.Output
        }], form: [{
            type: i0.Input
        }], route: [{
            type: i0.Input
        }], service: [{
            type: i0.Input
        }] }); })();
        return FormComponent;
    }());
    FormComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [CRUD_SERVICE,] }] },
        { type: router.ActivatedRoute },
        { type: router.Router }
    ]; };
    FormComponent.propDecorators = {
        form: [{ type: i0.Input }],
        route: [{ type: i0.Input }],
        action: [{ type: i0.Input }],
        saveLabel: [{ type: i0.Input }],
        service: [{ type: i0.Input }],
        disableSave: [{ type: i0.Input }],
        save: [{ type: i0.Output }],
        reset: [{ type: i0.Output }]
    };

    var ValidationMessageComponent = /** @class */ (function () {
        function ValidationMessageComponent() {
        }
ValidationMessageComponent.ɵfac = function ValidationMessageComponent_Factory(t) { return new (t || ValidationMessageComponent)(); };
ValidationMessageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ValidationMessageComponent, selectors: [["nValidationMessage"]], inputs: { control: "control" }, decls: 1, vars: 1, consts: [[4, "ngIf"], [1, "form-notification-msg", "p-message", "p-messages-error", "p-corner-all"]], template: function ValidationMessageComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ValidationMessageComponent_ng_container_0_Template, 8, 6, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.control.invalid && (ctx.control.dirty || ctx.control.touched) && ctx.control.errors);
    } }, directives: [ɵngcc7.NgIf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ValidationMessageComponent, [{
        type: i0.Component,
        args: [{
                selector: 'nValidationMessage',
                template: "<ng-container *ngIf=\"control.invalid && (control.dirty || control.touched) && control.errors\">\n    <div class=\"form-notification-msg p-message p-messages-error p-corner-all\" >\n        <ng-container *ngIf=\"control.errors.required\">\n            campo obrigat\u00F3rio\n        </ng-container>\n        <ng-container *ngIf=\"control.errors.minlength\">\n            tamanho m\u00EDnimo {{ control.errors.minlength.requiredLength }}\n        </ng-container>\n        <ng-container *ngIf=\"control.errors.maxlength\">\n            tamanho m\u00E1ximo {{ control.errors.maxlength.requiredLength }}\n        </ng-container>\n        <ng-container *ngIf=\"control.errors.min\">\n            valor m\u00EDnimo {{ control.errors.min.min }}\n        </ng-container>\n        <ng-container *ngIf=\"control.errors.max\">\n            valor m\u00E1ximo {{ control.errors.max.max }}\n        </ng-container>\n        <ng-container *ngIf=\"control.errors.email || control.errors.pattern\">\n            campo inv\u00E1lido\n        </ng-container>\n    </div>\n</ng-container>\n"
            }]
    }], function () { return []; }, { control: [{
            type: i0.Input
        }] }); })();
        return ValidationMessageComponent;
    }());
    ValidationMessageComponent.propDecorators = {
        control: [{ type: i0.Input }]
    };

    var AutoCompleteComponent = /** @class */ (function (_super) {
        __extends(AutoCompleteComponent, _super);
        function AutoCompleteComponent() {
            var _this = _super.apply(this, __spread(arguments)) || this;
            _this.virtualScroll = false;
            _this.itemSize = 30;
            return _this;
        }
        AutoCompleteComponent.prototype.selectItem = function (option) {
            this.formControl.setValue(option);
        };
        AutoCompleteComponent.prototype.findAll = function (event) {
            var _this = this;
            var query = {};
            query[this.field] = event.query;
            this.service.findAll(query).subscribe(function (data) {
                _this.results = data;
            });
        };
        AutoCompleteComponent.prototype.outerToInner = function (value) {
            var _this = this;
            if (value && value.id && !value[this.field]) {
                this.service.find(value.id).subscribe(function (data) {
                    _this.formControl.setValue(data);
                });
            }
            return value;
        };
AutoCompleteComponent.ɵfac = function AutoCompleteComponent_Factory(t) { return ɵAutoCompleteComponent_BaseFactory(t || AutoCompleteComponent); };
AutoCompleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoCompleteComponent, selectors: [["", "nAutoComplete", ""]], inputs: { field: "field", virtualScroll: "virtualScroll", itemSize: "itemSize", service: "service" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(AutoCompleteComponent)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c32, ngContentSelectors: _c15, decls: 7, vars: 10, consts: [["form-notification", "", 1, "p-float-label", 3, "name", "form"], ["notification", ""], [3, "formControl", "suggestions", "virtualScroll", "itemSize", "field", "onBlur", "onSelect", "onFocus", "completeMethod"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function AutoCompleteComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-autoCompleteCustom", 2, 3);
        ɵngcc0.ɵɵlistener("onBlur", function AutoCompleteComponent_Template_p_autoCompleteCustom_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onSelect", function AutoCompleteComponent_Template_p_autoCompleteCustom_onSelect_2_listener($event) { return ctx.onSelectEvent($event); })("onFocus", function AutoCompleteComponent_Template_p_autoCompleteCustom_onFocus_2_listener($event) { return ctx.onFocusEvent($event); })("completeMethod", function AutoCompleteComponent_Template_p_autoCompleteCustom_completeMethod_2_listener($event) { return ctx.findAll($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, AutoCompleteComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formControl", ctx.formControl)("suggestions", ctx.results)("virtualScroll", ctx.virtualScroll)("itemSize", ctx.itemSize)("field", ctx.field);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r0.message);
    } }, directives: function () { return [FormNotificationComponent, AutoCompleteCustomComponent, ɵngcc10.NgControlStatus, ɵngcc10.FormControlDirective, ɵngcc7.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵAutoCompleteComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(AutoCompleteComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutoCompleteComponent, [{
        type: i0.Component,
        args: [{
                selector: "[nAutoComplete]",
                template: "<span #notification form-notification class=\"p-float-label\" [name]=\"name\" [form]=\"form\">\n    <p-autoCompleteCustom #input\n        [formControl]=\"formControl\"\n        [suggestions]=\"results\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onSelect)=\"onSelectEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        (completeMethod)=\"findAll($event)\"\n        [field]=\"field\">\n    </p-autoCompleteCustom>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(AutoCompleteComponent)]
            }]
    }], null, { field: [{
            type: i0.Input
        }], virtualScroll: [{
            type: i0.Input
        }], itemSize: [{
            type: i0.Input
        }], service: [{
            type: i0.Input
        }] }); })();
        return AutoCompleteComponent;
    }(FieldComponent));
    AutoCompleteComponent.propDecorators = {
        field: [{ type: i0.Input }],
        virtualScroll: [{ type: i0.Input }],
        itemSize: [{ type: i0.Input }],
        service: [{ type: i0.Input }]
    };

    var AUTOCOMPLETE_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return AutoCompleteCustomComponent; }),
        multi: true
    };
    var AutoCompleteCustomComponent = /** @class */ (function (_super) {
        __extends(AutoCompleteCustomComponent, _super);
        function AutoCompleteCustomComponent(el, renderer, cd, differs) {
            var _this = _super.call(this, el, renderer, cd, differs) || this;
            _this.el = el;
            _this.renderer = renderer;
            _this.cd = cd;
            _this.differs = differs;
            return _this;
        }
AutoCompleteCustomComponent.ɵfac = function AutoCompleteCustomComponent_Factory(t) { return new (t || AutoCompleteCustomComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };
AutoCompleteCustomComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoCompleteCustomComponent, selectors: [["p-autoCompleteCustom"]], inputs: { virtualScroll: "virtualScroll", itemSize: "itemSize" }, features: [ɵngcc0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 12, consts: [[3, "ngClass", "ngStyle"], ["aria-autocomplete", "list", "role", "combobox", "aria-haspopup", "true", 3, "ngStyle", "class", "autocomplete", "ngClass", "value", "readonly", "disabled", "click", "input", "keydown", "keyup", "focus", "blur", "change", "paste", 4, "ngIf"], ["class", "p-autocomplete-multiple-container p-component p-inputtext p-state-default p-corner-all", 3, "ngClass", "click", 4, "ngIf"], ["class", "p-autocomplete-loader pi pi-spinner pi-spin", 4, "ngIf"], ["type", "button", "pButton", "", "class", "p-autocomplete-dropdown", 3, "icon", "disabled", "click", 4, "ngIf"], [3, "ngClass", "max-height", "ngStyle", "class", 4, "ngIf"], ["aria-autocomplete", "list", "role", "combobox", "aria-haspopup", "true", 3, "ngStyle", "autocomplete", "ngClass", "value", "readonly", "disabled", "click", "input", "keydown", "keyup", "focus", "blur", "change", "paste"], ["in", ""], [1, "p-autocomplete-multiple-container", "p-component", "p-inputtext", "p-state-default", "p-corner-all", 3, "ngClass", "click"], ["multiContainer", ""], ["class", "p-autocomplete-token p-highlight p-corner-all", 4, "ngFor", "ngForOf"], [1, "p-autocomplete-input-token"], ["aria-autocomplete", "list", "role", "combobox", "aria-haspopup", "true", 3, "disabled", "readonly", "autocomplete", "ngStyle", "ngClass", "input", "click", "keydown", "keyup", "focus", "blur", "change", "paste"], ["multiIn", ""], [1, "p-autocomplete-token", "p-highlight", "p-corner-all"], ["token", ""], ["class", "p-autocomplete-token-icon pi pi-fw pi-times", 3, "click", 4, "ngIf"], ["class", "p-autocomplete-token-label", 4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "p-autocomplete-token-icon", "pi", "pi-fw", "pi-times", 3, "click"], [1, "p-autocomplete-token-label"], [1, "p-autocomplete-loader", "pi", "pi-spinner", "pi-spin"], ["type", "button", "pButton", "", 1, "p-autocomplete-dropdown", 3, "icon", "disabled", "click"], ["ddBtn", ""], ["panel", ""], ["role", "listbox", 1, "p-autocomplete-items", "p-autocomplete-list", "p-component-content", "p-component", "p-corner-all", "p-reset"], [4, "ngIf", "ngIfElse"], ["virtualScrollList", ""], ["class", "p-autocomplete-emptymessage p-autocomplete-list-item p-corner-all", 4, "ngIf"], [3, "option", "highlightOption", "index", "itemSize", "template", "resolvedFieldData", "highlightOptionChange", "onClick", 4, "ngFor", "ngForOf"], [3, "option", "highlightOption", "index", "itemSize", "template", "resolvedFieldData", "highlightOptionChange", "onClick"], [3, "ngStyle", "itemSize", 4, "ngIf"], [3, "ngStyle", "itemSize"], [4, "cdkVirtualFor", "cdkVirtualForOf"], [1, "p-autocomplete-emptymessage", "p-autocomplete-list-item", "p-corner-all"]], template: function AutoCompleteCustomComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵtemplate(1, AutoCompleteCustomComponent_input_1_Template, 2, 22, "input", 1);
        ɵngcc0.ɵɵtemplate(2, AutoCompleteCustomComponent_ul_2_Template, 6, 22, "ul", 2);
        ɵngcc0.ɵɵtemplate(3, AutoCompleteCustomComponent_i_3_Template, 1, 0, "i", 3);
        ɵngcc0.ɵɵtemplate(4, AutoCompleteCustomComponent_button_4_Template, 2, 3, "button", 4);
        ɵngcc0.ɵɵtemplate(5, AutoCompleteCustomComponent_div_5_Template, 7, 16, "div", 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.styleClass);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(9, _c40, ctx.dropdown, ctx.multiple))("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.multiple);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.multiple);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.dropdown);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.overlayVisible);
    } }, directives: function () { return [ɵngcc7.NgClass, ɵngcc7.NgStyle, ɵngcc7.NgIf, ɵngcc7.NgForOf, ɵngcc7.NgTemplateOutlet, ɵngcc3.ButtonDirective, AutoCompleteItem, ɵngcc24.CdkVirtualScrollViewport, ɵngcc24.CdkFixedSizeVirtualScroll, ɵngcc24.CdkVirtualForOf]; }, styles: ["ul[_ngcontent-%COMP%]{list-style-type:none}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutoCompleteCustomComponent, [{
        type: i0.Component,
        args: [{
                selector: 'p-autoCompleteCustom',
                template: "<span [ngClass]=\"{'p-autocomplete p-component':true,'p-autocomplete-dd':dropdown,'p-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n    <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n        [ngClass]=\"'p-inputtext p-component p-state-default p-corner-all p-autocomplete-input'\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" role=\"combobox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n        (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n        [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\">\n\n    <ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext p-state-default p-corner-all\" [ngClass]=\"{'p-disabled':disabled,'p-focus':focus}\" (click)=\"multiIn.focus()\">\n        <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token p-highlight p-corner-all\">\n            <span class=\"p-autocomplete-token-icon pi pi-fw pi-times\" (click)=\"removeItem(token)\" *ngIf=\"!disabled\"></span>\n            <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n            <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n        </li>\n        <li class=\"p-autocomplete-input-token\">\n            <input #multiIn \n                [attr.type]=\"type\" \n                [attr.id]=\"inputId\" [disabled]=\"disabled\" \n                [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" \n                [attr.tabindex]=\"tabindex\" \n                (input)=\"onInput($event)\"  \n                (click)=\"onInputClick($event)\"\n                (keydown)=\"onKeydown($event)\" \n                [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" \n                [attr.autofocus]=\"autofocus\" \n                (focus)=\"onInputFocus($event)\" \n                (blur)=\"onInputBlur($event)\" \n                (change)=\"onInputChange($event)\" \n                (paste)=\"onInputPaste($event)\" \n                [autocomplete]=\"autocomplete\"\n                [ngStyle]=\"inputStyle\" \n                [class]=\"inputStyleClass\"\n                [ngClass]=\"'p-inputtext p-component p-state-default p-corner-all p-autocomplete-input'\" \n                [attr.aria-label]=\"ariaLabel\" \n                [attr.aria-labelledby]=\"ariaLabelledBy\" \n                [attr.aria-required]=\"required\"\n                aria-autocomplete=\"list\" \n                role=\"combobox\" \n                [attr.aria-expanded]=\"overlayVisible\" \n                aria-haspopup=\"true\" \n                [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n        </li>\n    </ul>\n\n    <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i>\n    <button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" class=\"p-autocomplete-dropdown\" [disabled]=\"disabled\"\n        (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\">\n    </button>\n\n    <div #panel *ngIf=\"overlayVisible\" [ngClass]=\"['p-autocomplete-panel p-component p-component-content p-corner-all p-shadow']\"\n        [style.max-height]=\"virtualScroll ? 'auto' : (scrollHeight||'auto')\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n        [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n        <ul role=\"listbox\" class=\"p-autocomplete-items p-autocomplete-list p-component-content p-component p-corner-all p-reset\">\n            <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                <p-autoCompleteItem *ngFor=\"let option of suggestions; let idx = index\"\n                    [option]=\"option\" [(highlightOption)]=\"highlightOption\" [index]=\"idx\"\n                    (onClick)=\"selectItem($event.option)\" [itemSize]=\"itemSize\"\n                    [template]=\"itemTemplate\" [resolvedFieldData]=\"resolveFieldData(option)\">\n                </p-autoCompleteItem>\n            </ng-container>\n            <ng-template #virtualScrollList>\n                <cdk-virtual-scroll-viewport *ngIf=\"virtualScroll && suggestions && suggestions.length\"\n                    [ngStyle]=\"{height: scrollHeight}\" [itemSize]=\"itemSize\">\n                    <ng-container *cdkVirtualFor=\"let option of suggestions; let idx = index\">\n                        <p-autoCompleteItem\n                            [option]=\"option\" [(highlightOption)]=\"highlightOption\" [index]=\"idx\"\n                            (onClick)=\"selectItem($event.option)\" [itemSize]=\"itemSize\"\n                            [template]=\"itemTemplate\" [resolvedFieldData]=\"resolveFieldData(option)\"\n                        ></p-autoCompleteItem>\n                    </ng-container>\n                </cdk-virtual-scroll-viewport>\n            </ng-template>\n\n            <li *ngIf=\"noResults && emptyMessage\" class=\"p-autocomplete-emptymessage p-autocomplete-list-item p-corner-all\">{{emptyMessage}}</li>\n        </ul>\n    </div>\n</span>\n",
                providers: [AUTOCOMPLETE_VALUE_ACCESSOR],
                styles: ["ul{list-style-type:none}"]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.IterableDiffers }]; }, { virtualScroll: [{
            type: i0.Input
        }], itemSize: [{
            type: i0.Input
        }] }); })();
        return AutoCompleteCustomComponent;
    }(autocomplete.AutoComplete));
    AutoCompleteCustomComponent.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: i0.Renderer2 },
        { type: i0.ChangeDetectorRef },
        { type: i0.IterableDiffers }
    ]; };
    AutoCompleteCustomComponent.propDecorators = {
        virtualScroll: [{ type: i0.Input }],
        itemSize: [{ type: i0.Input }]
    };

    var AutoCompleteItem = /** @class */ (function () {
        function AutoCompleteItem() {
            this.highlightOptionChange = new i0.EventEmitter();
            this.onClick = new i0.EventEmitter();
        }
        AutoCompleteItem.prototype.selectItem = function (event) {
            this.onClick.emit({
                originalEvent: event,
                option: this.option
            });
        };
AutoCompleteItem.ɵfac = function AutoCompleteItem_Factory(t) { return new (t || AutoCompleteItem)(); };
AutoCompleteItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoCompleteItem, selectors: [["p-autoCompleteItem"]], inputs: { option: "option", resolvedFieldData: "resolvedFieldData", highlightOption: "highlightOption", index: "index", itemSize: "itemSize", template: "template" }, outputs: { highlightOptionChange: "highlightOptionChange", onClick: "onClick" }, decls: 3, vars: 13, consts: [["role", "option", 3, "ngClass", "id", "ngStyle", "mouseenter", "mouseleave", "click"], [4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function AutoCompleteItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵlistener("mouseenter", function AutoCompleteItem_Template_li_mouseenter_0_listener() { return ctx.highlightOptionChange.emit(ctx.option); })("mouseleave", function AutoCompleteItem_Template_li_mouseleave_0_listener() { return ctx.highlightOptionChange.emit(null); })("click", function AutoCompleteItem_Template_li_click_0_listener($event) { return ctx.selectItem($event); });
        ɵngcc0.ɵɵtemplate(1, AutoCompleteItem_span_1_Template, 2, 1, "span", 1);
        ɵngcc0.ɵɵtemplate(2, AutoCompleteItem_ng_container_2_Template, 1, 0, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c41, ctx.highlightOption == ctx.option))("id", ctx.highlightOption == ctx.option ? "p-highlighted-option" : "")("ngStyle", ɵngcc0.ɵɵpureFunction1(8, _c42, ctx.itemSize + "px"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(10, _c43, ctx.option, ctx.index));
    } }, directives: [ɵngcc7.NgClass, ɵngcc7.NgStyle, ɵngcc7.NgIf, ɵngcc7.NgTemplateOutlet], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutoCompleteItem, [{
        type: i0.Component,
        args: [{
                selector: 'p-autoCompleteItem',
                template: "\n        <li role=\"option\" [ngClass]=\"{'p-autocomplete-list-item p-corner-all':true,'p-highlight':(highlightOption==option)}\"\n            (mouseenter)=\"highlightOptionChange.emit(option)\" (mouseleave)=\"highlightOptionChange.emit(null)\"\n            [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem($event)\"\n            [ngStyle]=\"{'height': itemSize + 'px', 'display': 'table', 'width': '100%'}\">\n            <span *ngIf=\"!template\">{{resolvedFieldData}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option, index: index}\"></ng-container>\n        </li>\n    "
            }]
    }], function () { return []; }, { highlightOptionChange: [{
            type: i0.Output
        }], onClick: [{
            type: i0.Output
        }], option: [{
            type: i0.Input
        }], resolvedFieldData: [{
            type: i0.Input
        }], highlightOption: [{
            type: i0.Input
        }], index: [{
            type: i0.Input
        }], itemSize: [{
            type: i0.Input
        }], template: [{
            type: i0.Input
        }] }); })();
        return AutoCompleteItem;
    }());
    AutoCompleteItem.propDecorators = {
        option: [{ type: i0.Input }],
        resolvedFieldData: [{ type: i0.Input }],
        highlightOption: [{ type: i0.Input }],
        highlightOptionChange: [{ type: i0.Output }],
        index: [{ type: i0.Input }],
        itemSize: [{ type: i0.Input }],
        template: [{ type: i0.Input }],
        onClick: [{ type: i0.Output }]
    };

    var AutoCompleteMultipleComponent = /** @class */ (function (_super) {
        __extends(AutoCompleteMultipleComponent, _super);
        function AutoCompleteMultipleComponent() {
            var _this = _super.apply(this, __spread(arguments)) || this;
            _this.virtualScroll = false;
            _this.itemSize = 30;
            return _this;
        }
        AutoCompleteMultipleComponent.prototype.findAll = function (event) {
            var _this = this;
            var query = {};
            query[this.field] = event.query;
            this.service.findAll(query).subscribe(function (data) {
                _this.results = data;
            });
        };
        AutoCompleteMultipleComponent.prototype.outerToInner = function (value) {
            var _this = this;
            if (value && value.length > 0 && !value[0][this.field]) {
                var obs_1 = [];
                value.forEach(function (element) {
                    if (element && element.id) {
                        obs_1.push(_this.service.find(element.id));
                    }
                });
                rxjs.forkJoin(obs_1).subscribe(function (data) {
                    _this.formControl.setValue(data);
                });
            }
            return value;
        };
AutoCompleteMultipleComponent.ɵfac = function AutoCompleteMultipleComponent_Factory(t) { return ɵAutoCompleteMultipleComponent_BaseFactory(t || AutoCompleteMultipleComponent); };
AutoCompleteMultipleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoCompleteMultipleComponent, selectors: [["", "nAutoCompleteMultiple", ""]], inputs: { field: "field", service: "service", virtualScroll: "virtualScroll", itemSize: "itemSize" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(AutoCompleteMultipleComponent)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c44, ngContentSelectors: _c15, decls: 7, vars: 11, consts: [["form-notification", "", 1, "p-float-label", 3, "name", "form"], ["notification", ""], [3, "formControl", "suggestions", "field", "virtualScroll", "itemSize", "multiple", "completeMethod", "onBlur", "onSelect", "onFocus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function AutoCompleteMultipleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-autoCompleteCustom", 2, 3);
        ɵngcc0.ɵɵlistener("completeMethod", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_completeMethod_2_listener($event) { return ctx.findAll($event); })("onBlur", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onSelect", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_onSelect_2_listener($event) { return ctx.onSelectEvent($event); })("onFocus", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_onFocus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, AutoCompleteMultipleComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formControl", ctx.formControl)("suggestions", ctx.results)("field", ctx.field)("virtualScroll", ctx.virtualScroll)("itemSize", ctx.itemSize)("multiple", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r0.message);
    } }, directives: [FormNotificationComponent, AutoCompleteCustomComponent, ɵngcc10.NgControlStatus, ɵngcc10.FormControlDirective, ɵngcc7.NgIf, ValidationMessageComponent], encapsulation: 2 });
var ɵAutoCompleteMultipleComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(AutoCompleteMultipleComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutoCompleteMultipleComponent, [{
        type: i0.Component,
        args: [{
                selector: "[nAutoCompleteMultiple]",
                template: "<span #notification form-notification class=\"p-float-label\" [name]=\"name\" [form]=\"form\">\n    <p-autoCompleteCustom #input\n        [formControl]=\"formControl\"\n        [suggestions]=\"results\"\n        (completeMethod)=\"findAll($event)\"\n        [field]=\"field\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onSelect)=\"onSelectEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        [multiple]=\"true\">\n    </p-autoCompleteCustom>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(AutoCompleteMultipleComponent)]
            }]
    }], null, { field: [{
            type: i0.Input
        }], service: [{
            type: i0.Input
        }], virtualScroll: [{
            type: i0.Input
        }], itemSize: [{
            type: i0.Input
        }] }); })();
        return AutoCompleteMultipleComponent;
    }(FieldComponent));
    AutoCompleteMultipleComponent.propDecorators = {
        field: [{ type: i0.Input }],
        service: [{ type: i0.Input }],
        virtualScroll: [{ type: i0.Input }],
        itemSize: [{ type: i0.Input }]
    };

    var CheckPipe = /** @class */ (function () {
        function CheckPipe() {
        }
        CheckPipe.prototype.transform = function (value) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            return value ? "Sim" : "Não";
        };
CheckPipe.ɵfac = function CheckPipe_Factory(t) { return new (t || CheckPipe)(); };
CheckPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "check", type: CheckPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CheckPipe, [{
        type: i0.Pipe,
        args: [{
                name: "check"
            }]
    }], function () { return []; }, null); })();
        return CheckPipe;
    }());

    var CrudModule = /** @class */ (function () {
        function CrudModule() {
        }
CrudModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CrudModule });
CrudModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CrudModule_Factory(t) { return new (t || CrudModule)(); }, providers: [
        httpInterceptorProviders,
        i1$1.ConfirmationService,
    ], imports: [[
            common.CommonModule,
            forms.FormsModule,
            forms.ReactiveFormsModule,
            FormNotificationModule,
            inputtext.InputTextModule,
            inputtextarea.InputTextareaModule,
            calendar.CalendarModule,
            autocomplete.AutoCompleteModule,
            button.ButtonModule,
            DatatableModule,
            i1.HttpClientModule,
            router.RouterModule,
            confirmdialog.ConfirmDialogModule,
            dropdown.DropdownModule,
            scrolling.ScrollingModule,
            inputmask.InputMaskModule,
            radiobutton.RadioButtonModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CrudModule, { declarations: [CalendarComponent, InputTextComponent, TextAreaComponent, FormComponent, AutoCompleteComponent, AutoCompleteMultipleComponent, CrudListComponent, CrudFormComponent, FieldComponent, ValidationMessageComponent, DropdownComponent, AutoCompleteItem, AutoCompleteCustomComponent, CheckComponent, InputMaskComponent, CheckPipe], imports: [ɵngcc7.CommonModule, ɵngcc10.FormsModule, ɵngcc10.ReactiveFormsModule, FormNotificationModule, ɵngcc11.InputTextModule, ɵngcc21.InputTextareaModule, ɵngcc20.CalendarModule, ɵngcc25.AutoCompleteModule, ɵngcc3.ButtonModule, DatatableModule, ɵngcc1.HttpClientModule, ɵngcc18.RouterModule, ɵngcc19.ConfirmDialogModule, ɵngcc15.DropdownModule, ɵngcc24.ScrollingModule, ɵngcc22.InputMaskModule, ɵngcc23.RadioButtonModule], exports: [CalendarComponent, InputTextComponent, TextAreaComponent, FormComponent, AutoCompleteComponent, AutoCompleteMultipleComponent, CrudListComponent, CrudFormComponent, FieldComponent, ValidationMessageComponent, DropdownComponent, CheckComponent, InputMaskComponent, CheckPipe] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CrudModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    forms.FormsModule,
                    forms.ReactiveFormsModule,
                    FormNotificationModule,
                    inputtext.InputTextModule,
                    inputtextarea.InputTextareaModule,
                    calendar.CalendarModule,
                    autocomplete.AutoCompleteModule,
                    button.ButtonModule,
                    DatatableModule,
                    i1.HttpClientModule,
                    router.RouterModule,
                    confirmdialog.ConfirmDialogModule,
                    dropdown.DropdownModule,
                    scrolling.ScrollingModule,
                    inputmask.InputMaskModule,
                    radiobutton.RadioButtonModule,
                ],
                declarations: [
                    CalendarComponent,
                    InputTextComponent,
                    TextAreaComponent,
                    FormComponent,
                    AutoCompleteComponent,
                    AutoCompleteMultipleComponent,
                    CrudListComponent,
                    CrudFormComponent,
                    FieldComponent,
                    ValidationMessageComponent,
                    DropdownComponent,
                    AutoCompleteItem,
                    AutoCompleteCustomComponent,
                    CheckComponent,
                    InputMaskComponent,
                    CheckPipe,
                ],
                exports: [
                    CalendarComponent,
                    InputTextComponent,
                    TextAreaComponent,
                    FormComponent,
                    AutoCompleteComponent,
                    AutoCompleteMultipleComponent,
                    CrudListComponent,
                    CrudFormComponent,
                    FieldComponent,
                    ValidationMessageComponent,
                    DropdownComponent,
                    CheckComponent,
                    InputMaskComponent,
                    CheckPipe,
                ],
                providers: [
                    httpInterceptorProviders,
                    i1$1.ConfirmationService,
                ]
            }]
    }], function () { return []; }, null); })();
        return CrudModule;
    }());

    var BreadcrumbService = /** @class */ (function () {
        function BreadcrumbService() {
            this.itemsSource = new rxjs.Subject();
            this.itemsHandler = this.itemsSource.asObservable();
        }
        BreadcrumbService.prototype.setItems = function (items) {
            this.itemsSource.next(items);
        };
        BreadcrumbService.prototype.reset = function () {
            this.itemsSource.next([]);
        };
BreadcrumbService.ɵfac = function BreadcrumbService_Factory(t) { return new (t || BreadcrumbService)(); };
BreadcrumbService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BreadcrumbService, factory: function (t) { return BreadcrumbService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbService, [{
        type: i0.Injectable
    }], function () { return []; }, null); })();
        return BreadcrumbService;
    }());

    var BreadcrumbComponent = /** @class */ (function () {
        function BreadcrumbComponent(router, activatedRoute, breadcrumbService, messages, accessibilityService) {
            var _this = this;
            this.router = router;
            this.activatedRoute = activatedRoute;
            this.breadcrumbService = breadcrumbService;
            this.messages = messages;
            this.accessibilityService = accessibilityService;
            this.highContrastEnabled = false;
            this.subscription = breadcrumbService.itemsHandler.subscribe(function (response) {
                _this.items = response;
            });
            this.home = { icon: 'pi pi-home', routerLink: '/' };
        }
        BreadcrumbComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.router.events.pipe(operators.filter(function (event) { return event instanceof router.NavigationEnd; }), operators.distinctUntilChanged()).subscribe(function (event) {
                _this.items = _this.buildBreadCrumb(_this.activatedRoute.root);
            });
        };
        BreadcrumbComponent.prototype.ngOnDestroy = function () {
            if (this.subscription) {
                this.subscription.unsubscribe();
            }
        };
        BreadcrumbComponent.prototype.enableHighContrast = function () {
            this.highContrastEnabled = true;
            this.accessibilityService.enableHighContrast();
        };
        BreadcrumbComponent.prototype.disableHighContrast = function () {
            this.highContrastEnabled = false;
            this.accessibilityService.disableHighContrast();
        };
        BreadcrumbComponent.prototype.increaseFontSize = function () {
            this.accessibilityService.increaseFontSize();
        };
        BreadcrumbComponent.prototype.decreaseFontSize = function () {
            this.accessibilityService.decreaseFontSize();
        };
        BreadcrumbComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.messages.messageObserver.subscribe(function (msg) {
                _this.accessibilityService.addAccessibilityMessages({ severity: msg.severity });
            });
            this.accessibilityService.addAccessibilityIcons();
        };
        BreadcrumbComponent.prototype.buildBreadCrumb = function (route, url, breadcrumbs) {
            if (url === void 0) { url = ''; }
            if (breadcrumbs === void 0) { breadcrumbs = []; }
            var label = (route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '').trim();
            var path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';
            var lastRoutePart = path.split('/').pop();
            var isDynamicRoute = lastRoutePart.startsWith(':');
            if (isDynamicRoute && !!route.snapshot) {
                for (var key in route.snapshot.params) {
                    path = path.replace(":" + key, route.snapshot.params[key]);
                }
                label = (((label != ':action') ? label : '') + " " + Object.values(route.snapshot.params).join(' ')).trim();
            }
            var nextUrl = path ? url + "/" + path : url;
            var menuItem = {
                "label": label.charAt(0).toUpperCase() + label.slice(1),
                "routerLink": nextUrl
            };
            var newBreadcrumbs = menuItem.label ? __spread(breadcrumbs, [menuItem]) : __spread(breadcrumbs);
            if (route.firstChild) {
                return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);
            }
            return newBreadcrumbs;
        };
BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) { return new (t || BreadcrumbComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc18.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc18.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(BreadcrumbService), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.MessageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AccessbilityService)); };
BreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadcrumbComponent, selectors: [["breadcrumb"]], decls: 6, vars: 3, consts: [[1, "layout-breadcrumb", "layout-breadcrumb-container", "p-d-flex", "p-jc-between", "p-ai-center", "p-shadow-1"], ["styleClass", "layout-breadcrumb p-pl-4 p-py-2", 3, "model", "home"], [1, "layout-breadcrumb-buttons", "p-d-flex", "p-ai-center", "p-pr-3"], ["pButton", "", "pRipple", "", "type", "button", "icon", "pi pi-sliders-h", 1, "p-button-rounded", "p-button-text", "p-button-plain", "p-mr-1", 3, "title", "click"], ["pButton", "", "pRipple", "", "type", "button", "icon", "pi pi-search-plus", "title", "Aumentar fonte", 1, "p-button-rounded", "p-button-text", "p-button-plain", "p-mr-1", 3, "click"], ["pButton", "", "pRipple", "", "type", "button", "icon", "pi pi-search-minus", "title", "Diminuir fonte", 1, "p-button-rounded", "p-button-text", "p-button-plain", "p-mr-1", 3, "click"]], template: function BreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelement(1, "p-breadcrumb", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "button", 3);
        ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_Template_button_click_3_listener() { return ctx.highContrastEnabled ? ctx.disableHighContrast() : ctx.enableHighContrast(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "button", 4);
        ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_Template_button_click_4_listener() { return ctx.increaseFontSize(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "button", 5);
        ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_Template_button_click_5_listener() { return ctx.decreaseFontSize(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("model", ctx.items)("home", ctx.home);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.highContrastEnabled ? "Desabilitar alto contraste" : "Habilitar alto contraste");
    } }, directives: [ɵngcc26.Breadcrumb, ɵngcc3.ButtonDirective], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbComponent, [{
        type: i0.Component,
        args: [{
                selector: 'breadcrumb',
                template: "<div class=\"layout-breadcrumb layout-breadcrumb-container p-d-flex p-jc-between p-ai-center p-shadow-1\">\n    <p-breadcrumb [model]=\"items\" [home]=\"home\" styleClass=\"layout-breadcrumb p-pl-4 p-py-2\"></p-breadcrumb>\n    <div class=\"layout-breadcrumb-buttons p-d-flex p-ai-center p-pr-3\">\n        <button pButton \n            pRipple type=\"button\" \n            icon=\"pi pi-sliders-h\"\n            (click)=\"highContrastEnabled ? disableHighContrast() : enableHighContrast()\"\n            title=\"{{ highContrastEnabled ? 'Desabilitar alto contraste' : 'Habilitar alto contraste' }}\"\n            class=\"p-button-rounded p-button-text p-button-plain p-mr-1\">\n        </button>\n        <button pButton \n            pRipple \n            type=\"button\" \n            icon=\"pi pi-search-plus\"\n            title=\"Aumentar fonte\"\n            (click)=\"increaseFontSize()\" \n            class=\"p-button-rounded p-button-text p-button-plain p-mr-1\">\n        </button>\n        <button pButton \n            pRipple \n            type=\"button\"\n            icon=\"pi pi-search-minus\" \n            (click)=\"decreaseFontSize()\" title=\"Diminuir fonte\"\n            class=\"p-button-rounded p-button-text p-button-plain p-mr-1\">\n        </button>\n    </div>\n</div>\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc18.Router }, { type: ɵngcc18.ActivatedRoute }, { type: BreadcrumbService }, { type: ɵngcc9.MessageService }, { type: ɵngcc4.AccessbilityService }]; }, null); })();
        return BreadcrumbComponent;
    }());
    BreadcrumbComponent.ctorParameters = function () { return [
        { type: router.Router },
        { type: router.ActivatedRoute },
        { type: BreadcrumbService },
        { type: i1$1.MessageService },
        { type: angularBase.AccessbilityService }
    ]; };

    var BreadcrumbModule = /** @class */ (function () {
        function BreadcrumbModule() {
        }
BreadcrumbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BreadcrumbModule });
BreadcrumbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BreadcrumbModule_Factory(t) { return new (t || BreadcrumbModule)(); }, providers: [
        BreadcrumbService
    ], imports: [[
            common.CommonModule,
            router.RouterModule,
            breadcrumb.BreadcrumbModule,
            button.ButtonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BreadcrumbModule, { declarations: [BreadcrumbComponent], imports: [ɵngcc7.CommonModule, ɵngcc18.RouterModule, ɵngcc26.BreadcrumbModule, ɵngcc3.ButtonModule], exports: [BreadcrumbComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [BreadcrumbComponent],
                imports: [
                    common.CommonModule,
                    router.RouterModule,
                    breadcrumb.BreadcrumbModule,
                    button.ButtonModule
                ],
                exports: [
                    BreadcrumbComponent
                ],
                providers: [
                    BreadcrumbService
                ]
            }]
    }], function () { return []; }, null); })();
        return BreadcrumbModule;
    }());

    (function (MenuOrientation) {
        MenuOrientation[MenuOrientation["STATIC"] = 0] = "STATIC";
        MenuOrientation[MenuOrientation["OVERLAY"] = 1] = "OVERLAY";
        MenuOrientation[MenuOrientation["SLIM"] = 2] = "SLIM";
        MenuOrientation[MenuOrientation["HORIZONTAL"] = 3] = "HORIZONTAL";
    })(exports.MenuOrientation || (exports.MenuOrientation = {}));
    /**
     * Class MenuService
     * @class
     */
    var MenusService = /** @class */ (function () {
        function MenusService() {
            this.menuSource = new rxjs.Subject();
            this.resetSource = new rxjs.Subject();
            this.menuSource$ = this.menuSource.asObservable();
            this.resetSource$ = this.resetSource.asObservable();
            this.layoutMode = exports.MenuOrientation.STATIC;
            this.itens = [];
        }
        MenusService.prototype.isOverlay = function () {
            return this.layoutMode === exports.MenuOrientation.OVERLAY;
        };
        MenusService.prototype.isHorizontal = function () {
            return this.layoutMode === exports.MenuOrientation.HORIZONTAL;
        };
        MenusService.prototype.isSlim = function () {
            return this.layoutMode === exports.MenuOrientation.SLIM;
        };
        MenusService.prototype.isStatic = function () {
            return this.layoutMode === exports.MenuOrientation.STATIC;
        };
        MenusService.prototype.changeToStaticMenu = function () {
            this.layoutMode = exports.MenuOrientation.STATIC;
        };
        MenusService.prototype.changeToOverlayMenu = function () {
            this.layoutMode = exports.MenuOrientation.OVERLAY;
        };
        MenusService.prototype.changeToHorizontalMenu = function () {
            this.layoutMode = exports.MenuOrientation.HORIZONTAL;
        };
        MenusService.prototype.changeToSlimMenu = function () {
            this.layoutMode = exports.MenuOrientation.SLIM;
        };
        MenusService.prototype.onMenuStateChange = function (key) {
            this.menuSource.next(key);
        };
        MenusService.prototype.reset = function () {
            this.resetSource.next();
        };
MenusService.ɵfac = function MenusService_Factory(t) { return new (t || MenusService)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MenusService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
        return MenusService;
    }());
    MenusService.ɵprov = i0.ɵɵdefineInjectable({ factory: function MenusService_Factory() { return new MenusService(); }, token: MenusService, providedIn: "root" });

    var MenuComponent = /** @class */ (function () {
        function MenuComponent(menuService) {
            this.menuService = menuService;
        }
MenuComponent.ɵfac = function MenuComponent_Factory(t) { return new (t || MenuComponent)(ɵngcc0.ɵɵdirectiveInject(MenusService)); };
MenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MenuComponent, selectors: [["app-menu"]], decls: 2, vars: 1, consts: [[1, "layout-menu"], ["submenu", "", "root", "true", 3, "item", "index", 4, "ngFor", "ngForOf"], ["submenu", "", "root", "true", 3, "item", "index"]], template: function MenuComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, MenuComponent_li_1_Template, 1, 2, "li", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.menuService.itens);
    } }, directives: function () { return [ɵngcc7.NgForOf, SubMenuComponent]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MenuComponent, [{
        type: i0.Component,
        args: [{
                selector: 'app-menu',
                template: "<ul class=\"layout-menu\">\n    <li submenu *ngFor=\"let item of menuService.itens; let i = index;\" [item]=\"item\" [index]=\"i\" root=\"true\"></li>\n</ul>"
            }]
    }], function () { return [{ type: MenusService }]; }, null); })();
        return MenuComponent;
    }());
    MenuComponent.ctorParameters = function () { return [
        { type: MenusService }
    ]; };

    var SubMenuComponent = /** @class */ (function () {
        function SubMenuComponent(menuService, router$1) {
            var _this = this;
            this.menuService = menuService;
            this.router = router$1;
            this.active = false;
            this.menuSourceSubscription = this.menuService.menuSource$.subscribe(function (key) {
                // deactivate current active menu
                if (_this.active && _this.key !== key && key.indexOf(_this.key) !== 0) {
                    _this.active = false;
                }
            });
            this.menuResetSubscription = this.menuService.resetSource$.subscribe(function () {
                _this.active = false;
            });
            this.router.events.pipe(operators.filter(function (event) { return event instanceof router.NavigationEnd; }))
                .subscribe(function (params) {
                if (_this.menuService.isHorizontal() || _this.menuService.isSlim()) {
                    _this.active = false;
                }
                else {
                    if (_this.item.routerLink) {
                        _this.updateActiveStateFromRoute();
                    }
                    else {
                        _this.active = false;
                    }
                }
            });
        }
        SubMenuComponent.prototype.updateActiveStateFromRoute = function () {
            this.active = this.router.isActive(this.item.routerLink[0], this.item.items ? false : true);
        };
        /**
         * Alterar o menu root entre aberto e fechado
         */
        SubMenuComponent.prototype.rootMenuToggle = function () {
            if (this.root) {
                this.menuService.menuHoverActive = !this.menuService.menuHoverActive;
            }
        };
        /**
         * Activa o menu por index e desativa o item ativo
         * @param index
         */
        SubMenuComponent.prototype.activeMenuByIndex = function (index) {
            this.activeIndex = (this.activeIndex === index) ? null : index;
            return this.activeIndex;
        };
        /**
         * Verifica se foi informado um comando para o item de menu e executa caso necessário
         * @param item menu
         */
        SubMenuComponent.prototype.execCommand = function (event, item) {
            if (item.command) {
                item.command({ 'originalEvent': event, 'item': item });
                return true;
            }
            return false;
        };
        /**
         * Esconte o menu caso este não possua itens
         * @param item menu
         */
        SubMenuComponent.prototype.hideMenu = function (item) {
            if (!item.items) {
                if (this.menuService.isHorizontal() || this.menuService.isSlim()) {
                    this.menuService.resetMenu = true;
                }
                else {
                    this.menuService.resetMenu = false;
                }
                this.menuService.overlayMenuActive = false;
                this.menuService.staticMenuMobileActive = false;
                this.menuService.menuHoverActive = !this.menuService.menuHoverActive;
                return true;
            }
            return false;
        };
        SubMenuComponent.prototype.itemClick = function (event) {
            // avoid processing disabled items
            if (this.item.disabled) {
                event.preventDefault();
                return true;
            }
            // navigate with hover in horizontal mode
            if (this.root) {
                this.menuService.menuHoverActive = !this.menuService.menuHoverActive;
            }
            // notify other items
            this.menuService.onMenuStateChange(this.key);
            // execute command
            if (this.item.command) {
                this.item.command({ originalEvent: event, item: this.item });
            }
            // toggle active state
            if (this.item.items) {
                this.active = !this.active;
            }
            else {
                // activate item
                this.active = true;
                // reset horizontal and slim menu
                if (this.menuService.isHorizontal() || this.menuService.isSlim()) {
                    this.menuService.reset();
                    this.menuService.menuHoverActive = false;
                }
                if (!this.menuService.isStatic()) {
                    this.active = false;
                }
            }
            this.removeActiveInk(event);
        };
        SubMenuComponent.prototype.onMouseEnter = function () {
            // activate item on hover
            if (this.root) {
                this.active = true;
            }
        };
        SubMenuComponent.prototype.isActive = function (index) {
            return this.activeIndex === index;
        };
        Object.defineProperty(SubMenuComponent.prototype, "reset", {
            get: function () {
                return this._reset;
            },
            set: function (val) {
                this._reset = val;
                if (this._reset && (this.menuService.isHorizontal() || this.menuService.isSlim())) {
                    this.activeIndex = null;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SubMenuComponent.prototype, "parentActive", {
            get: function () {
                return this._parentActive;
            },
            set: function (val) {
                this._parentActive = val;
                if (!this._parentActive) {
                    this.activeIndex = null;
                }
            },
            enumerable: false,
            configurable: true
        });
        SubMenuComponent.prototype.removeActiveInk = function (event) {
            var currentTarget = event.currentTarget;
            setTimeout(function () {
                if (currentTarget) {
                    var activeInk = currentTarget.querySelector('.p-ink-active');
                    if (activeInk) {
                        if (activeInk.classList)
                            activeInk.classList.remove('p-ink-active');
                        else
                            activeInk.className = activeInk.className.replace(new RegExp('(^|\\b)' + 'p-ink-active'.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
                    }
                }
            }, 401);
        };
        SubMenuComponent.prototype.ngOnDestroy = function () {
            if (this.menuSourceSubscription) {
                this.menuSourceSubscription.unsubscribe();
            }
            if (this.menuResetSubscription) {
                this.menuResetSubscription.unsubscribe();
            }
        };
SubMenuComponent.ɵfac = function SubMenuComponent_Factory(t) { return new (t || SubMenuComponent)(ɵngcc0.ɵɵdirectiveInject(MenusService), ɵngcc0.ɵɵdirectiveInject(ɵngcc18.Router)); };
SubMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SubMenuComponent, selectors: [["", "submenu", ""]], hostVars: 4, hostBindings: function SubMenuComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("layout-root-menuitem", ctx.root || ctx.active)("active-menuitem", ctx.active);
    } }, inputs: { reset: "reset", parentActive: "parentActive", item: "item", root: "root", visible: "visible", parentKey: "parentKey", index: "index" }, attrs: _c45, decls: 4, vars: 4, consts: [[4, "ngIf"], ["pRipple", "", 3, "ngClass", "pTooltip", "tooltipDisabled", "click", "keydown.enter", "mouseenter", 4, "ngIf"], ["routerLinkActive", "active-menuitem-routerlink", "pRipple", "", 3, "routerLink", "routerLinkActiveOptions", "ngClass", "pTooltip", "tooltipDisabled", "click", "mouseenter", 4, "ngIf"], [1, "layout-menuitem-text"], ["pRipple", "", 3, "ngClass", "pTooltip", "tooltipDisabled", "click", "keydown.enter", "mouseenter"], [1, "layout-menuitem-icon", 3, "ngClass"], ["class", "p-badge p-component p-badge-no-gutter", 3, "ngClass", 4, "ngIf"], ["class", "pi pi-fw pi-angle-down layout-submenu-toggler", 4, "ngIf"], [1, "p-badge", "p-component", "p-badge-no-gutter", 3, "ngClass"], [1, "pi", "pi-fw", "pi-angle-down", "layout-submenu-toggler"], ["routerLinkActive", "active-menuitem-routerlink", "pRipple", "", 3, "routerLink", "routerLinkActiveOptions", "ngClass", "pTooltip", "tooltipDisabled", "click", "mouseenter"], ["ngFor", "", 3, "ngForOf"], ["submenu", "", 3, "item", "index", "parentKey"]], template: function SubMenuComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SubMenuComponent_div_0_Template, 3, 1, "div", 0);
        ɵngcc0.ɵɵtemplate(1, SubMenuComponent_a_1_Template, 6, 10, "a", 1);
        ɵngcc0.ɵɵtemplate(2, SubMenuComponent_a_2_Template, 6, 12, "a", 2);
        ɵngcc0.ɵɵtemplate(3, SubMenuComponent_ul_3_Template, 2, 2, "ul", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.root);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.item.routerLink || ctx.item.items);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.item.routerLink && !ctx.item.items);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.item.items && ctx.root || ctx.item.items && ctx.active);
    } }, directives: [ɵngcc7.NgIf, ɵngcc7.NgClass, ɵngcc2.Tooltip, ɵngcc18.RouterLinkWithHref, ɵngcc18.RouterLinkActive, ɵngcc7.NgForOf, SubMenuComponent], encapsulation: 2, data: { animation: [
            animations.trigger('children', [
                animations.state('void', animations.style({
                    height: '0px',
                    padding: '0px'
                })),
                animations.state('hiddenAnimated', animations.style({
                    height: '0px',
                    padding: '0px'
                })),
                animations.state('visibleAnimated', animations.style({
                    height: '*'
                })),
                animations.state('visible', animations.style({
                    height: '*'
                })),
                animations.state('hidden', animations.style({
                    height: '0px',
                    padding: '0px'
                })),
                animations.transition('visibleAnimated => hiddenAnimated', animations.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),
                animations.transition('hiddenAnimated => visibleAnimated', animations.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),
                animations.transition('void => visibleAnimated, visibleAnimated => void', animations.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))
            ])
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SubMenuComponent, [{
        type: i0.Component,
        args: [{
                selector: '[submenu]',
                template: "<div *ngIf=\"root\">\n    <span class=\"layout-menuitem-text\">{{item.label}}</span>\n</div>\n<a [attr.href]=\"item.url\" (click)=\"itemClick($event)\" *ngIf=\"!item.routerLink || item.items\"\n    (keydown.enter)=\"itemClick($event)\" [attr.target]=\"item.target\" [attr.tabindex]=\"0\" [ngClass]=\"item.class\"\n    (mouseenter)=\"onMouseEnter()\" pRipple [pTooltip]=\"item.label\"\n    [tooltipDisabled]=\"active || !(root && menuService.isSlim() && !menuService.isMobile)\">\n    <i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\n    <span class=\"layout-menuitem-text\">{{item.label}}</span>\n    <span class=\"p-badge p-component p-badge-no-gutter\" [ngClass]=\"item.badgeClass\"\n        *ngIf=\"item.badge && !root\">{{item.badge}}</span>\n    <i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n</a>\n<a (click)=\"itemClick($event)\" *ngIf=\"item.routerLink && !item.items\" [routerLink]=\"item.routerLink\"\n    routerLinkActive=\"active-menuitem-routerlink\" [routerLinkActiveOptions]=\"{exact: true}\" [attr.target]=\"item.target\"\n    [attr.tabindex]=\"0\" [ngClass]=\"item.class\" (mouseenter)=\"onMouseEnter()\" pRipple [pTooltip]=\"item.label\"\n    [tooltipDisabled]=\"active || !(root && menuService.isSlim() && !menuService.isMobile)\">\n    <i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\n    <span class=\"layout-menuitem-text\">{{item.label}}</span>\n    <span class=\"p-badge p-component p-badge-no-gutter\" [ngClass]=\"item.badgeClass\"\n        *ngIf=\"item.badge && !root\">{{item.badge}}</span>\n    <i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n</a>\n<ul *ngIf=\"(item.items && root) || (item.items && active)\"\n    [@children]=\"root ? 'visible' : active ? 'visibleAnimated' : 'hiddenAnimated'\">\n    <ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"item.items\">\n        <li submenu [item]=\"child\" [index]=\"i\" [parentKey]=\"key\" [class]=\"child.badgeClass\"></li>\n    </ng-template>\n</ul>",
                host: {
                    '[class.layout-root-menuitem]': 'root || active',
                    '[class.active-menuitem]': '(active)'
                },
                animations: [
                    animations.trigger('children', [
                        animations.state('void', animations.style({
                            height: '0px',
                            padding: '0px'
                        })),
                        animations.state('hiddenAnimated', animations.style({
                            height: '0px',
                            padding: '0px'
                        })),
                        animations.state('visibleAnimated', animations.style({
                            height: '*'
                        })),
                        animations.state('visible', animations.style({
                            height: '*'
                        })),
                        animations.state('hidden', animations.style({
                            height: '0px',
                            padding: '0px'
                        })),
                        animations.transition('visibleAnimated => hiddenAnimated', animations.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),
                        animations.transition('hiddenAnimated => visibleAnimated', animations.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),
                        animations.transition('void => visibleAnimated, visibleAnimated => void', animations.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))
                    ])
                ]
            }]
    }], function () { return [{ type: MenusService }, { type: ɵngcc18.Router }]; }, { reset: [{
            type: i0.Input
        }], parentActive: [{
            type: i0.Input
        }], item: [{
            type: i0.Input
        }], root: [{
            type: i0.Input
        }], visible: [{
            type: i0.Input
        }], parentKey: [{
            type: i0.Input
        }], index: [{
            type: i0.Input
        }] }); })();
        return SubMenuComponent;
    }());
    SubMenuComponent.ctorParameters = function () { return [
        { type: MenusService },
        { type: router.Router }
    ]; };
    SubMenuComponent.propDecorators = {
        item: [{ type: i0.Input }],
        root: [{ type: i0.Input }],
        visible: [{ type: i0.Input }],
        parentKey: [{ type: i0.Input }],
        index: [{ type: i0.Input }],
        reset: [{ type: i0.Input }],
        parentActive: [{ type: i0.Input }]
    };

    var MenuModule = /** @class */ (function () {
        function MenuModule() {
        }
MenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MenuModule });
MenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MenuModule_Factory(t) { return new (t || MenuModule)(); }, providers: [
        MenusService
    ], imports: [[
            common.CommonModule,
            router.RouterModule,
            tooltip.TooltipModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MenuModule, { declarations: [MenuComponent, SubMenuComponent], imports: [ɵngcc7.CommonModule, ɵngcc18.RouterModule, ɵngcc2.TooltipModule], exports: [MenuComponent, SubMenuComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MenuModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    MenuComponent,
                    SubMenuComponent
                ],
                imports: [
                    common.CommonModule,
                    router.RouterModule,
                    tooltip.TooltipModule
                ],
                exports: [
                    MenuComponent,
                    SubMenuComponent
                ],
                providers: [
                    MenusService
                ]
            }]
    }], function () { return []; }, null); })();
        return MenuModule;
    }());

    /*
     * Public API Surface of primeng-components
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AutoCompleteComponent = AutoCompleteComponent;
    exports.AutoCompleteMultipleComponent = AutoCompleteMultipleComponent;
    exports.BlockUiComponent = BlockUiComponent;
    exports.BlockUiModule = BlockUiModule;
    exports.BreadcrumbComponent = BreadcrumbComponent;
    exports.BreadcrumbModule = BreadcrumbModule;
    exports.BreadcrumbService = BreadcrumbService;
    exports.CALENDAR_LOCALE = CALENDAR_LOCALE;
    exports.CRUD_SERVICE = CRUD_SERVICE;
    exports.CalendarComponent = CalendarComponent;
    exports.CheckComponent = CheckComponent;
    exports.CheckPipe = CheckPipe;
    exports.Column = Column;
    exports.CrudFormComponent = CrudFormComponent;
    exports.CrudListComponent = CrudListComponent;
    exports.CrudModule = CrudModule;
    exports.CrudResolveGuard = CrudResolveGuard;
    exports.CrudServiceNuvem = CrudServiceNuvem;
    exports.DataProviderFactory = DataProviderFactory;
    exports.DatatableButtonComponent = DatatableButtonComponent;
    exports.DatatableClickEvent = DatatableClickEvent;
    exports.DatatableComponent = DatatableComponent;
    exports.DatatableModule = DatatableModule;
    exports.DatatableService = DatatableService;
    exports.DatatableSplitbuttonComponent = DatatableSplitbuttonComponent;
    exports.DatatableSplitbuttonModule = DatatableSplitbuttonModule;
    exports.DropdownComponent = DropdownComponent;
    exports.ErrorStackComponent = ErrorStackComponent;
    exports.ErrorStackModule = ErrorStackModule;
    exports.FieldComponent = FieldComponent;
    exports.FilterColumn = FilterColumn;
    exports.FilterColumnModule = FilterColumnModule;
    exports.FormComponent = FormComponent;
    exports.FormNotificationComponent = FormNotificationComponent;
    exports.FormNotificationModule = FormNotificationModule;
    exports.InputMaskComponent = InputMaskComponent;
    exports.InputTextComponent = InputTextComponent;
    exports.MemoryDataProvider = MemoryDataProvider;
    exports.MenuComponent = MenuComponent;
    exports.MenuModule = MenuModule;
    exports.MenusService = MenusService;
    exports.PageNotificationComponent = PageNotificationComponent;
    exports.PageNotificationModule = PageNotificationModule;
    exports.PageNotificationService = PageNotificationService;
    exports.ServerDataProvider = ServerDataProvider;
    exports.ShowColumn = ShowColumn;
    exports.ShowColumnModule = ShowColumnModule;
    exports.SubMenuComponent = SubMenuComponent;
    exports.SuccessMessageHandlerInterceptor = SuccessMessageHandlerInterceptor;
    exports.TextAreaComponent = TextAreaComponent;
    exports.ValidationMessageComponent = ValidationMessageComponent;
    exports.crudRouteBuilder = crudRouteBuilder;
    exports.httpInterceptorProviders = httpInterceptorProviders;
    exports.ɵa = ActionButtonComponent;
    exports.ɵb = AutoCompleteItem;
    exports.ɵc = AUTOCOMPLETE_VALUE_ACCESSOR;
    exports.ɵd = AutoCompleteCustomComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=nuvem-primeng-components.umd.js.map