{"ast":null,"code":"import _classCallCheck from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction Chip_div_0_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"src\", ctx_r1.image, ɵngcc0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction Chip_div_0_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵclassMap(ctx_r6.icon);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"p-chip-icon\");\n  }\n}\n\nfunction Chip_div_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, Chip_div_0_ng_template_3_span_0_Template, 1, 3, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.icon);\n  }\n}\n\nfunction Chip_div_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.label);\n  }\n}\n\nfunction Chip_div_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function Chip_div_0_span_6_Template_span_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.close($event);\n    })(\"keydown.enter\", function Chip_div_0_span_6_Template_span_keydown_enter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r9.close($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMap(ctx_r5.removeIcon);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"pi-chip-remove-icon\");\n  }\n}\n\nfunction Chip_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵtemplate(2, Chip_div_0_img_2_Template, 1, 1, \"img\", 2);\n    ɵngcc0.ɵɵtemplate(3, Chip_div_0_ng_template_3_Template, 1, 1, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(5, Chip_div_0_div_5_Template, 2, 1, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(6, Chip_div_0_span_6_Template, 1, 3, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r2 = ɵngcc0.ɵɵreference(4);\n\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r0.styleClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.containerClass())(\"ngStyle\", ctx_r0.style);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.image)(\"ngIfElse\", _r2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.removable);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nvar Chip = /*#__PURE__*/function () {\n  function Chip() {\n    _classCallCheck(this, Chip);\n\n    this.removeIcon = \"pi pi-times-circle\";\n    this.onRemove = new EventEmitter();\n    this.visible = true;\n  }\n\n  _createClass(Chip, [{\n    key: \"containerClass\",\n    value: function containerClass() {\n      return {\n        'p-chip p-component': true,\n        'p-chip-image': this.image != null\n      };\n    }\n  }, {\n    key: \"close\",\n    value: function close(event) {\n      this.visible = false;\n      this.onRemove.emit(event);\n    }\n  }]);\n\n  return Chip;\n}();\n\nChip.ɵfac = function Chip_Factory(t) {\n  return new (t || Chip)();\n};\n\nChip.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Chip,\n  selectors: [[\"p-chip\"]],\n  inputs: {\n    removeIcon: \"removeIcon\",\n    label: \"label\",\n    icon: \"icon\",\n    image: \"image\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    removable: \"removable\"\n  },\n  outputs: {\n    onRemove: \"onRemove\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngClass\", \"class\", \"ngStyle\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"src\", 4, \"ngIf\", \"ngIfElse\"], [\"iconTemplate\", \"\"], [\"class\", \"p-chip-text\", 4, \"ngIf\"], [\"tabindex\", \"0\", 3, \"class\", \"ngClass\", \"click\", \"keydown.enter\", 4, \"ngIf\"], [3, \"src\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"p-chip-text\"], [\"tabindex\", \"0\", 3, \"ngClass\", \"click\", \"keydown.enter\"]],\n  template: function Chip_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, Chip_div_0_Template, 7, 8, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.visible);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgStyle],\n  styles: [\".p-chip{align-items:center;display:inline-flex}.p-chip-icon.pi,.p-chip-text{line-height:1.5}.pi-chip-remove-icon{cursor:pointer;line-height:1.5}.p-chip img{border-radius:50%}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nChip.propDecorators = {\n  label: [{\n    type: Input\n  }],\n  icon: [{\n    type: Input\n  }],\n  image: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  removable: [{\n    type: Input\n  }],\n  removeIcon: [{\n    type: Input\n  }],\n  onRemove: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Chip, [{\n    type: Component,\n    args: [{\n      selector: 'p-chip',\n      template: \"\\n        <div [ngClass]=\\\"containerClass()\\\" [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\" *ngIf=\\\"visible\\\">\\n            <ng-content></ng-content>\\n            <img [src]=\\\"image\\\" *ngIf=\\\"image;else iconTemplate\\\">\\n            <ng-template #iconTemplate><span *ngIf=\\\"icon\\\" [class]=\\\"icon\\\" [ngClass]=\\\"'p-chip-icon'\\\"></span></ng-template>\\n            <div class=\\\"p-chip-text\\\" *ngIf=\\\"label\\\">{{label}}</div>\\n            <span *ngIf=\\\"removable\\\" tabindex=\\\"0\\\" [class]=\\\"removeIcon\\\" [ngClass]=\\\"'pi-chip-remove-icon'\\\" (click)=\\\"close($event)\\\" (keydown.enter)=\\\"close($event)\\\"></span>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-chip{align-items:center;display:inline-flex}.p-chip-icon.pi,.p-chip-text{line-height:1.5}.pi-chip-remove-icon{cursor:pointer;line-height:1.5}.p-chip img{border-radius:50%}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    removeIcon: [{\n      type: Input\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    label: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    image: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ChipModule = function ChipModule() {\n  _classCallCheck(this, ChipModule);\n};\n\nChipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ChipModule\n});\nChipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ChipModule_Factory(t) {\n    return new (t || ChipModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChipModule, {\n    declarations: function declarations() {\n      return [Chip];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [Chip];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ChipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Chip],\n      declarations: [Chip]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Chip, ChipModule };","map":{"version":3,"sources":["../../src/app/components/chip/chip.ts","../../src/app/components/chip/primeng-chip.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'p-chip',\n    template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" *ngIf=\"visible\">\n            <ng-content></ng-content>\n            <img [src]=\"image\" *ngIf=\"image;else iconTemplate\">\n            <ng-template #iconTemplate><span *ngIf=\"icon\" [class]=\"icon\" [ngClass]=\"'p-chip-icon'\"></span></ng-template>\n            <div class=\"p-chip-text\" *ngIf=\"label\">{{label}}</div>\n            <span *ngIf=\"removable\" tabindex=\"0\" [class]=\"removeIcon\" [ngClass]=\"'pi-chip-remove-icon'\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\"></span>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./chip.css']\n})\nexport class Chip {\n\n    @Input() label: string;\n\n    @Input() icon: string;\n\n    @Input() image: string;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() removable: boolean;\n\n    @Input() removeIcon: string = \"pi pi-times-circle\";\n\n    @Output() onRemove: EventEmitter<any> = new EventEmitter();\n\n    visible: boolean = true;\n\n    containerClass() {\n        return {\n            'p-chip p-component': true,\n            'p-chip-image': this.image != null\n        };\n    }\n\n    close(event) {\n        this.visible = false;\n        this.onRemove.emit(event)\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Chip],\n    declarations: [Chip]\n})\nexport class ChipModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}