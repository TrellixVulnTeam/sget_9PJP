import { Component } from '@angular/core';
import { MessageService } from 'primeng/api';
import { BreadcrumbService } from './breadcrumb.service';
import { AccessbilityService } from '@nuvem/angular-base';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { filter, distinctUntilChanged } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from './breadcrumb.service';
import * as ɵngcc3 from 'primeng/api';
import * as ɵngcc4 from '@nuvem/angular-base';
import * as ɵngcc5 from 'primeng/breadcrumb';
import * as ɵngcc6 from 'primeng/button';
export class BreadcrumbComponent {
    constructor(router, activatedRoute, breadcrumbService, messages, accessibilityService) {
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.breadcrumbService = breadcrumbService;
        this.messages = messages;
        this.accessibilityService = accessibilityService;
        this.highContrastEnabled = false;
        this.subscription = breadcrumbService.itemsHandler.subscribe(response => {
            this.items = response;
        });
        this.home = { icon: 'pi pi-home', routerLink: '/' };
    }
    ngOnInit() {
        this.router.events.pipe(filter((event) => event instanceof NavigationEnd), distinctUntilChanged()).subscribe((event) => {
            this.items = this.buildBreadCrumb(this.activatedRoute.root);
        });
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
    enableHighContrast() {
        this.highContrastEnabled = true;
        this.accessibilityService.enableHighContrast();
    }
    disableHighContrast() {
        this.highContrastEnabled = false;
        this.accessibilityService.disableHighContrast();
    }
    increaseFontSize() {
        this.accessibilityService.increaseFontSize();
    }
    decreaseFontSize() {
        this.accessibilityService.decreaseFontSize();
    }
    ngAfterViewInit() {
        this.messages.messageObserver.subscribe((msg) => {
            this.accessibilityService.addAccessibilityMessages({ severity: msg.severity });
        });
        this.accessibilityService.addAccessibilityIcons();
    }
    buildBreadCrumb(route, url = '', breadcrumbs = []) {
        let label = (route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '').trim();
        let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';
        const lastRoutePart = path.split('/').pop();
        const isDynamicRoute = lastRoutePart.startsWith(':');
        if (isDynamicRoute && !!route.snapshot) {
            for (let key in route.snapshot.params) {
                path = path.replace(`:${key}`, route.snapshot.params[key]);
            }
            label = (`${(label != ':action') ? label : ''} ${Object.values(route.snapshot.params).join(' ')}`).trim();
        }
        const nextUrl = path ? `${url}/${path}` : url;
        const menuItem = {
            "label": label.charAt(0).toUpperCase() + label.slice(1),
            "routerLink": nextUrl
        };
        const newBreadcrumbs = menuItem.label ? [...breadcrumbs, menuItem] : [...breadcrumbs];
        if (route.firstChild) {
            return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);
        }
        return newBreadcrumbs;
    }
}
BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) { return new (t || BreadcrumbComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BreadcrumbService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.MessageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AccessbilityService)); };
BreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadcrumbComponent, selectors: [["breadcrumb"]], decls: 6, vars: 3, consts: [[1, "layout-breadcrumb", "layout-breadcrumb-container", "p-d-flex", "p-jc-between", "p-ai-center", "p-shadow-1"], ["styleClass", "layout-breadcrumb p-pl-4 p-py-2", 3, "model", "home"], [1, "layout-breadcrumb-buttons", "p-d-flex", "p-ai-center", "p-pr-3"], ["pButton", "", "pRipple", "", "type", "button", "icon", "pi pi-sliders-h", 1, "p-button-rounded", "p-button-text", "p-button-plain", "p-mr-1", 3, "title", "click"], ["pButton", "", "pRipple", "", "type", "button", "icon", "pi pi-search-plus", "title", "Aumentar fonte", 1, "p-button-rounded", "p-button-text", "p-button-plain", "p-mr-1", 3, "click"], ["pButton", "", "pRipple", "", "type", "button", "icon", "pi pi-search-minus", "title", "Diminuir fonte", 1, "p-button-rounded", "p-button-text", "p-button-plain", "p-mr-1", 3, "click"]], template: function BreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelement(1, "p-breadcrumb", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "button", 3);
        ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_Template_button_click_3_listener() { return ctx.highContrastEnabled ? ctx.disableHighContrast() : ctx.enableHighContrast(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "button", 4);
        ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_Template_button_click_4_listener() { return ctx.increaseFontSize(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "button", 5);
        ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_Template_button_click_5_listener() { return ctx.decreaseFontSize(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("model", ctx.items)("home", ctx.home);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.highContrastEnabled ? "Desabilitar alto contraste" : "Habilitar alto contraste");
    } }, directives: [ɵngcc5.Breadcrumb, ɵngcc6.ButtonDirective], styles: [""] });
BreadcrumbComponent.ctorParameters = () => [
    { type: Router },
    { type: ActivatedRoute },
    { type: BreadcrumbService },
    { type: MessageService },
    { type: AccessbilityService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbComponent, [{
        type: Component,
        args: [{
                selector: 'breadcrumb',
                template: "<div class=\"layout-breadcrumb layout-breadcrumb-container p-d-flex p-jc-between p-ai-center p-shadow-1\">\n    <p-breadcrumb [model]=\"items\" [home]=\"home\" styleClass=\"layout-breadcrumb p-pl-4 p-py-2\"></p-breadcrumb>\n    <div class=\"layout-breadcrumb-buttons p-d-flex p-ai-center p-pr-3\">\n        <button pButton \n            pRipple type=\"button\" \n            icon=\"pi pi-sliders-h\"\n            (click)=\"highContrastEnabled ? disableHighContrast() : enableHighContrast()\"\n            title=\"{{ highContrastEnabled ? 'Desabilitar alto contraste' : 'Habilitar alto contraste' }}\"\n            class=\"p-button-rounded p-button-text p-button-plain p-mr-1\">\n        </button>\n        <button pButton \n            pRipple \n            type=\"button\" \n            icon=\"pi pi-search-plus\"\n            title=\"Aumentar fonte\"\n            (click)=\"increaseFontSize()\" \n            class=\"p-button-rounded p-button-text p-button-plain p-mr-1\">\n        </button>\n        <button pButton \n            pRipple \n            type=\"button\"\n            icon=\"pi pi-search-minus\" \n            (click)=\"decreaseFontSize()\" title=\"Diminuir fonte\"\n            class=\"p-button-rounded p-button-text p-button-plain p-mr-1\">\n        </button>\n    </div>\n</div>\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc1.ActivatedRoute }, { type: ɵngcc2.BreadcrumbService }, { type: ɵngcc3.MessageService }, { type: ɵngcc4.AccessbilityService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,