{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' && typeof require === 'function' ? factory(require('../moment')) : typeof define === 'function' && define.amd ? define(['../moment'], factory) : factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\n  var monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n\n  function plural(n) {\n    return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;\n  }\n\n  function translate(number, withoutSuffix, key) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 'm':\n        return withoutSuffix ? 'minuta' : 'minutę';\n\n      case 'mm':\n        return result + (plural(number) ? 'minuty' : 'minut');\n\n      case 'h':\n        return withoutSuffix ? 'godzina' : 'godzinę';\n\n      case 'hh':\n        return result + (plural(number) ? 'godziny' : 'godzin');\n\n      case 'MM':\n        return result + (plural(number) ? 'miesiące' : 'miesięcy');\n\n      case 'yy':\n        return result + (plural(number) ? 'lata' : 'lat');\n    }\n  }\n\n  var pl = moment.defineLocale('pl', {\n    months: function months(momentToFormat, format) {\n      if (!momentToFormat) {\n        return monthsNominative;\n      } else if (format === '') {\n        // Hack: if format empty we know this is used to generate\n        // RegExp by moment. Give then back both valid forms of months\n        // in RegExp ready format.\n        return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';\n      } else if (/D MMMM/.test(format)) {\n        return monthsSubjective[momentToFormat.month()];\n      } else {\n        return monthsNominative[momentToFormat.month()];\n      }\n    },\n    monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n    weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n    weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n    weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Dziś o] LT',\n      nextDay: '[Jutro o] LT',\n      nextWeek: '[W] dddd [o] LT',\n      lastDay: '[Wczoraj o] LT',\n      lastWeek: function lastWeek() {\n        switch (this.day()) {\n          case 0:\n            return '[W zeszłą niedzielę o] LT';\n\n          case 3:\n            return '[W zeszłą środę o] LT';\n\n          case 6:\n            return '[W zeszłą sobotę o] LT';\n\n          default:\n            return '[W zeszły] dddd [o] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: '%s temu',\n      s: 'kilka sekund',\n      m: translate,\n      mm: translate,\n      h: translate,\n      hh: translate,\n      d: '1 dzień',\n      dd: '%d dni',\n      M: 'miesiąc',\n      MM: translate,\n      y: 'rok',\n      yy: translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n  return pl;\n});","map":{"version":3,"sources":["/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/chart.js/node_modules/moment/locale/pl.js"],"names":["global","factory","exports","module","require","define","amd","moment","monthsNominative","split","monthsSubjective","plural","n","translate","number","withoutSuffix","key","result","pl","defineLocale","months","momentToFormat","format","month","test","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","day","sameElse","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\nvar monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\nfunction plural(n) {\n    return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n}\nfunction translate(number, withoutSuffix, key) {\n    var result = number + ' ';\n    switch (key) {\n        case 'm':\n            return withoutSuffix ? 'minuta' : 'minutę';\n        case 'mm':\n            return result + (plural(number) ? 'minuty' : 'minut');\n        case 'h':\n            return withoutSuffix  ? 'godzina'  : 'godzinę';\n        case 'hh':\n            return result + (plural(number) ? 'godziny' : 'godzin');\n        case 'MM':\n            return result + (plural(number) ? 'miesiące' : 'miesięcy');\n        case 'yy':\n            return result + (plural(number) ? 'lata' : 'lat');\n    }\n}\n\nvar pl = moment.defineLocale('pl', {\n    months : function (momentToFormat, format) {\n        if (!momentToFormat) {\n            return monthsNominative;\n        } else if (format === '') {\n            // Hack: if format empty we know this is used to generate\n            // RegExp by moment. Give then back both valid forms of months\n            // in RegExp ready format.\n            return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';\n        } else if (/D MMMM/.test(format)) {\n            return monthsSubjective[momentToFormat.month()];\n        } else {\n            return monthsNominative[momentToFormat.month()];\n        }\n    },\n    monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n    weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n    weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n    weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[Dziś o] LT',\n        nextDay: '[Jutro o] LT',\n        nextWeek: '[W] dddd [o] LT',\n        lastDay: '[Wczoraj o] LT',\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[W zeszłą niedzielę o] LT';\n                case 3:\n                    return '[W zeszłą środę o] LT';\n                case 6:\n                    return '[W zeszłą sobotę o] LT';\n                default:\n                    return '[W zeszły] dddd [o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'za %s',\n        past : '%s temu',\n        s : 'kilka sekund',\n        m : translate,\n        mm : translate,\n        h : translate,\n        hh : translate,\n        d : '1 dzień',\n        dd : '%d dni',\n        M : 'miesiąc',\n        MM : translate,\n        y : 'rok',\n        yy : translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn pl;\n\n})));\n"]},"metadata":{},"sourceType":"script"}