import { DatatableSplitbuttonComponent } from './datatable-splitbutton.component';
import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { SplitButtonModule } from 'primeng/splitbutton';
/**
 * Class DatatableSplitbuttonModule
 * @class
 */
import * as ɵngcc0 from '@angular/core';
export class DatatableSplitbuttonModule {
}
DatatableSplitbuttonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DatatableSplitbuttonModule });
DatatableSplitbuttonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DatatableSplitbuttonModule_Factory(t) { return new (t || DatatableSplitbuttonModule)(); }, providers: [], imports: [[
            SplitButtonModule
        ], SplitButtonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DatatableSplitbuttonModule, { declarations: function () { return [DatatableSplitbuttonComponent]; }, imports: function () { return [SplitButtonModule]; }, exports: function () { return [DatatableSplitbuttonComponent,
        SplitButtonModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatableSplitbuttonModule, [{
        type: NgModule,
        args: [{
                imports: [
                    SplitButtonModule
                ],
                declarations: [
                    DatatableSplitbuttonComponent
                ],
                providers: [],
                exports: [
                    DatatableSplitbuttonComponent,
                    SplitButtonModule
                ],
                schemas: [CUSTOM_ELEMENTS_SCHEMA]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXRhYmxlLXNwbGl0YnV0dG9uLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcHJpbWVuZy1jb21wb25lbnRzL3NyYy9saWIvZXh0cmEtYnV0dG9uL2RhdGF0YWJsZS1zcGxpdGJ1dHRvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDbEYsT0FBTyxFQUFFLFFBQVEsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN4RDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQWVILE1BQU0sT0FBTywwQkFBMEI7QUFDdkM7c0RBZkMsUUFBUSxTQUFDLGtCQUNSLE9BQU87Q0FBRSxzQkFDUCxpQkFBaUIsa0JBQ2xCLGtCQUNELFlBQVksRUFBRSxzQkFDWiw2QkFBNkIsa0JBQzlCLGtCQUNELFNBQVMsRUFBRSxFQUFFO1lBQ2IsT0FBTyxFQUFFO2FBQ1A7UUFBNkIsc0JBQzdCLGlCQUFpQixrQkFDbEIsa0JBQ0QsT0FBTyxFQUFFLENBQUMsc0JBQXNCLENBQUMsY0FDbEM7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YXRhYmxlU3BsaXRidXR0b25Db21wb25lbnQgfSBmcm9tICcuL2RhdGF0YWJsZS1zcGxpdGJ1dHRvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmdNb2R1bGUsIENVU1RPTV9FTEVNRU5UU19TQ0hFTUEgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNwbGl0QnV0dG9uTW9kdWxlIH0gZnJvbSAncHJpbWVuZy9zcGxpdGJ1dHRvbic7XG4vKipcbiAqIENsYXNzIERhdGF0YWJsZVNwbGl0YnV0dG9uTW9kdWxlXG4gKiBAY2xhc3NcbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIFNwbGl0QnV0dG9uTW9kdWxlXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIERhdGF0YWJsZVNwbGl0YnV0dG9uQ29tcG9uZW50XG4gIF0sXG4gIHByb3ZpZGVyczogW10sXG4gIGV4cG9ydHM6IFtcbiAgICBEYXRhdGFibGVTcGxpdGJ1dHRvbkNvbXBvbmVudCxcbiAgICBTcGxpdEJ1dHRvbk1vZHVsZVxuICBdLFxuICBzY2hlbWFzOiBbQ1VTVE9NX0VMRU1FTlRTX1NDSEVNQV1cbn0pXG5leHBvcnQgY2xhc3MgRGF0YXRhYmxlU3BsaXRidXR0b25Nb2R1bGUge1xufVxuIl19