{"ast":null,"code":"import _classCallCheck from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Renderer2, ChangeDetectorRef, NgZone, Input, Output, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { RippleModule } from 'primeng/ripple';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'primeng/ripple';\n\nfunction OverlayPanel_div_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction OverlayPanel_div_0_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function OverlayPanel_div_0_button_4_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r3.onCloseClick($event);\n    })(\"keydown.enter\", function OverlayPanel_div_0_button_4_Template_button_keydown_enter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r5.hide();\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2.ariaCloseLabel);\n  }\n}\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nvar _c1 = function _c1(a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nfunction OverlayPanel_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function OverlayPanel_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.onContainerClick();\n    })(\"@animation.start\", function OverlayPanel_div_0_Template_div_animation_animation_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.onAnimationStart($event);\n    })(\"@animation.done\", function OverlayPanel_div_0_Template_div_animation_animation_done_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onAnimationEnd($event);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵtemplate(3, OverlayPanel_div_0_ng_container_3_Template, 1, 0, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, OverlayPanel_div_0_button_4_Template, 2, 1, \"button\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r0.styleClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"p-overlaypanel p-component\")(\"ngStyle\", ctx_r0.style)(\"@animation\", ɵngcc0.ɵɵpureFunction2(10, _c1, ctx_r0.overlayVisible ? \"open\" : \"close\", ɵngcc0.ɵɵpureFunction2(7, _c0, ctx_r0.showTransitionOptions, ctx_r0.hideTransitionOptions)));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.contentTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showCloseIcon);\n  }\n}\n\nvar _c2 = [\"*\"];\n\nvar OverlayPanel = /*#__PURE__*/function () {\n  function OverlayPanel(el, renderer, cd, zone) {\n    _classCallCheck(this, OverlayPanel);\n\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.zone = zone;\n    this.dismissable = true;\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.focusOnShow = true;\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.onShow = new EventEmitter();\n    this.onHide = new EventEmitter();\n    this.overlayVisible = false;\n    this.render = false;\n    this.isContainerClicked = true;\n  }\n\n  _createClass(OverlayPanel, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'content':\n            _this.contentTemplate = item.template;\n            break;\n\n          default:\n            _this.contentTemplate = item.template;\n            break;\n        }\n\n        _this.cd.markForCheck();\n      });\n    }\n  }, {\n    key: \"onContainerClick\",\n    value: function onContainerClick() {\n      this.isContainerClicked = true;\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this2 = this;\n\n      if (!this.documentClickListener && this.dismissable) {\n        this.zone.runOutsideAngular(function () {\n          var documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\n          var documentTarget = _this2.el ? _this2.el.nativeElement.ownerDocument : 'document';\n          _this2.documentClickListener = _this2.renderer.listen(documentTarget, documentEvent, function (event) {\n            if (!_this2.container.contains(event.target) && _this2.target !== event.target && !_this2.target.contains(event.target) && !_this2.isContainerClicked) {\n              _this2.zone.run(function () {\n                _this2.hide();\n              });\n            }\n\n            _this2.isContainerClicked = false;\n\n            _this2.cd.markForCheck();\n          });\n        });\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(event, target) {\n      var _this3 = this;\n\n      if (this.overlayVisible) {\n        if (this.hasTargetChanged(event, target)) {\n          this.destroyCallback = function () {\n            _this3.show(null, target || event.currentTarget || event.target);\n          };\n        }\n\n        this.hide();\n      } else {\n        this.show(event, target);\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show(event, target) {\n      this.target = target || event.currentTarget || event.target;\n      this.overlayVisible = true;\n      this.render = true;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"hasTargetChanged\",\n    value: function hasTargetChanged(event, target) {\n      return this.target != null && this.target !== (target || event.currentTarget || event.target);\n    }\n  }, {\n    key: \"appendContainer\",\n    value: function appendContainer() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') document.body.appendChild(this.container);else DomHandler.appendChild(this.container, this.appendTo);\n      }\n    }\n  }, {\n    key: \"restoreAppend\",\n    value: function restoreAppend() {\n      if (this.container && this.appendTo) {\n        this.el.nativeElement.appendChild(this.container);\n      }\n    }\n  }, {\n    key: \"align\",\n    value: function align() {\n      if (this.autoZIndex) {\n        this.container.style.zIndex = String(this.baseZIndex + ++DomHandler.zindex);\n      }\n\n      DomHandler.absolutePosition(this.container, this.target);\n      var containerOffset = DomHandler.getOffset(this.container);\n      var targetOffset = DomHandler.getOffset(this.target);\n      var arrowLeft = 0;\n\n      if (containerOffset.left < targetOffset.left) {\n        arrowLeft = targetOffset.left - containerOffset.left;\n      }\n\n      this.container.style.setProperty('--overlayArrowLeft', \"\".concat(arrowLeft, \"px\"));\n\n      if (containerOffset.top < targetOffset.top) {\n        DomHandler.addClass(this.container, 'p-overlaypanel-flipped');\n      }\n    }\n  }, {\n    key: \"onAnimationStart\",\n    value: function onAnimationStart(event) {\n      if (event.toState === 'open') {\n        this.container = event.element;\n        this.onShow.emit(null);\n        this.appendContainer();\n        this.align();\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n\n        if (this.focusOnShow) {\n          this.focus();\n        }\n      }\n    }\n  }, {\n    key: \"onAnimationEnd\",\n    value: function onAnimationEnd(event) {\n      switch (event.toState) {\n        case 'void':\n          if (this.destroyCallback) {\n            this.destroyCallback();\n            this.destroyCallback = null;\n          }\n\n          break;\n\n        case 'close':\n          this.onContainerDestroy();\n          this.onHide.emit({});\n          this.render = false;\n          break;\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var focusable = DomHandler.findSingle(this.container, '[autofocus]');\n\n      if (focusable) {\n        this.zone.runOutsideAngular(function () {\n          setTimeout(function () {\n            return focusable.focus();\n          }, 5);\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.overlayVisible = false;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"onCloseClick\",\n    value: function onCloseClick(event) {\n      this.hide();\n      event.preventDefault();\n    }\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize(event) {\n      this.hide();\n    }\n  }, {\n    key: \"bindDocumentResizeListener\",\n    value: function bindDocumentResizeListener() {\n      this.documentResizeListener = this.onWindowResize.bind(this);\n      window.addEventListener('resize', this.documentResizeListener);\n    }\n  }, {\n    key: \"unbindDocumentResizeListener\",\n    value: function unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this4 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, function () {\n          if (_this4.overlayVisible) {\n            _this4.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"onContainerDestroy\",\n    value: function onContainerDestroy() {\n      this.target = null;\n      this.unbindDocumentClickListener();\n      this.unbindDocumentResizeListener();\n      this.unbindScrollListener();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n\n      this.target = null;\n      this.destroyCallback = null;\n\n      if (this.container) {\n        this.restoreAppend();\n        this.onContainerDestroy();\n      }\n    }\n  }]);\n\n  return OverlayPanel;\n}();\n\nOverlayPanel.ɵfac = function OverlayPanel_Factory(t) {\n  return new (t || OverlayPanel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nOverlayPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: OverlayPanel,\n  selectors: [[\"p-overlayPanel\"]],\n  contentQueries: function OverlayPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  inputs: {\n    dismissable: \"dismissable\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    focusOnShow: \"focusOnShow\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    showCloseIcon: \"showCloseIcon\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    appendTo: \"appendTo\",\n    ariaCloseLabel: \"ariaCloseLabel\"\n  },\n  outputs: {\n    onShow: \"onShow\",\n    onHide: \"onHide\"\n  },\n  ngContentSelectors: _c2,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"class\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\", \"click\"], [1, \"p-overlaypanel-content\"], [4, \"ngTemplateOutlet\"], [\"type\", \"button\", \"class\", \"p-overlaypanel-close p-link\", \"pRipple\", \"\", 3, \"click\", \"keydown.enter\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-overlaypanel-close\", \"p-link\", 3, \"click\", \"keydown.enter\"], [1, \"p-overlaypanel-close-icon\", \"pi\", \"pi-times\"]],\n  template: function OverlayPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, OverlayPanel_div_0_Template, 5, 13, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.render);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgTemplateOutlet, ɵngcc2.Ripple],\n  styles: [\".p-overlaypanel{margin-top:10px;position:absolute}.p-overlaypanel-flipped{margin-bottom:10px;margin-top:0}.p-overlaypanel-close{align-items:center;display:flex;justify-content:center;overflow:hidden;position:relative}.p-overlaypanel:after,.p-overlaypanel:before{bottom:100%;content:\\\" \\\";height:0;left:calc(var(--overlayArrowLeft, 0) + 1.25rem);pointer-events:none;position:absolute;width:0}.p-overlaypanel:after{border-width:8px;margin-left:-8px}.p-overlaypanel:before{border-width:10px;margin-left:-10px}.p-overlaypanel-shifted:after,.p-overlaypanel-shifted:before{left:auto;margin-left:auto;right:1.25em}.p-overlaypanel-flipped:after,.p-overlaypanel-flipped:before{bottom:auto;top:100%}.p-overlaypanel.p-overlaypanel-flipped:after,.p-overlaypanel.p-overlaypanel-flipped:before{border-bottom-color:transparent}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animation', [state('void', style({\n      transform: 'scaleY(0.8)',\n      opacity: 0\n    })), state('close', style({\n      opacity: 0\n    })), state('open', style({\n      transform: 'translateY(0)',\n      opacity: 1\n    })), transition('void => open', animate('{{showTransitionParams}}')), transition('open => close', animate('{{hideTransitionParams}}'))])]\n  },\n  changeDetection: 0\n});\n\nOverlayPanel.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgZone\n  }];\n};\n\nOverlayPanel.propDecorators = {\n  dismissable: [{\n    type: Input\n  }],\n  showCloseIcon: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  appendTo: [{\n    type: Input\n  }],\n  autoZIndex: [{\n    type: Input\n  }],\n  ariaCloseLabel: [{\n    type: Input\n  }],\n  baseZIndex: [{\n    type: Input\n  }],\n  focusOnShow: [{\n    type: Input\n  }],\n  showTransitionOptions: [{\n    type: Input\n  }],\n  hideTransitionOptions: [{\n    type: Input\n  }],\n  onShow: [{\n    type: Output\n  }],\n  onHide: [{\n    type: Output\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayPanel, [{\n    type: Component,\n    args: [{\n      selector: 'p-overlayPanel',\n      template: \"\\n        <div *ngIf=\\\"render\\\" [ngClass]=\\\"'p-overlaypanel p-component'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" (click)=\\\"onContainerClick()\\\"\\n            [@animation]=\\\"{value: (overlayVisible ? 'open': 'close'), params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\"\\n                (@animation.start)=\\\"onAnimationStart($event)\\\" (@animation.done)=\\\"onAnimationEnd($event)\\\">\\n            <div class=\\\"p-overlaypanel-content\\\">\\n                <ng-content></ng-content>\\n                <ng-container *ngTemplateOutlet=\\\"contentTemplate\\\"></ng-container>\\n            </div>\\n            <button *ngIf=\\\"showCloseIcon\\\" type=\\\"button\\\" class=\\\"p-overlaypanel-close p-link\\\" (click)=\\\"onCloseClick($event)\\\" (keydown.enter)=\\\"hide()\\\" [attr.aria-label]=\\\"ariaCloseLabel\\\" pRipple>\\n                <span class=\\\"p-overlaypanel-close-icon pi pi-times\\\"></span>\\n            </button>\\n        </div>\\n    \",\n      animations: [trigger('animation', [state('void', style({\n        transform: 'scaleY(0.8)',\n        opacity: 0\n      })), state('close', style({\n        opacity: 0\n      })), state('open', style({\n        transform: 'translateY(0)',\n        opacity: 1\n      })), transition('void => open', animate('{{showTransitionParams}}')), transition('open => close', animate('{{hideTransitionParams}}'))])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-overlaypanel{margin-top:10px;position:absolute}.p-overlaypanel-flipped{margin-bottom:10px;margin-top:0}.p-overlaypanel-close{align-items:center;display:flex;justify-content:center;overflow:hidden;position:relative}.p-overlaypanel:after,.p-overlaypanel:before{bottom:100%;content:\\\" \\\";height:0;left:calc(var(--overlayArrowLeft, 0) + 1.25rem);pointer-events:none;position:absolute;width:0}.p-overlaypanel:after{border-width:8px;margin-left:-8px}.p-overlaypanel:before{border-width:10px;margin-left:-10px}.p-overlaypanel-shifted:after,.p-overlaypanel-shifted:before{left:auto;margin-left:auto;right:1.25em}.p-overlaypanel-flipped:after,.p-overlaypanel-flipped:before{bottom:auto;top:100%}.p-overlaypanel.p-overlaypanel-flipped:after,.p-overlaypanel.p-overlaypanel-flipped:before{border-bottom-color:transparent}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    dismissable: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    focusOnShow: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    showCloseIcon: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    ariaCloseLabel: [{\n      type: Input\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar OverlayPanelModule = function OverlayPanelModule() {\n  _classCallCheck(this, OverlayPanelModule);\n};\n\nOverlayPanelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: OverlayPanelModule\n});\nOverlayPanelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function OverlayPanelModule_Factory(t) {\n    return new (t || OverlayPanelModule)();\n  },\n  imports: [[CommonModule, RippleModule, SharedModule], SharedModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayPanelModule, {\n    declarations: function declarations() {\n      return [OverlayPanel];\n    },\n    imports: function imports() {\n      return [CommonModule, RippleModule, SharedModule];\n    },\n    exports: function exports() {\n      return [OverlayPanel, SharedModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayPanelModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RippleModule, SharedModule],\n      exports: [OverlayPanel, SharedModule],\n      declarations: [OverlayPanel]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { OverlayPanel, OverlayPanelModule };","map":{"version":3,"sources":["../../src/app/components/overlaypanel/overlaypanel.ts","../../src/app/components/overlaypanel/primeng-overlaypanel.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,OnDestroy,EventEmitter,Renderer2,ElementRef,ChangeDetectorRef,NgZone,\n        ContentChildren,TemplateRef,AfterContentInit,QueryList,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler, ConnectedOverlayScrollHandler} from 'primeng/dom';\nimport {SharedModule,PrimeTemplate} from 'primeng/api';\nimport {RippleModule} from 'primeng/ripple';\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\n\n@Component({\n    selector: 'p-overlayPanel',\n    template: `\n        <div *ngIf=\"render\" [ngClass]=\"'p-overlaypanel p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onContainerClick()\"\n            [@animation]=\"{value: (overlayVisible ? 'open': 'close'), params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n                (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\">\n            <div class=\"p-overlaypanel-content\">\n                <ng-content></ng-content>\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </div>\n            <button *ngIf=\"showCloseIcon\" type=\"button\" class=\"p-overlaypanel-close p-link\" (click)=\"onCloseClick($event)\" (keydown.enter)=\"hide()\" [attr.aria-label]=\"ariaCloseLabel\" pRipple>\n                <span class=\"p-overlaypanel-close-icon pi pi-times\"></span>\n            </button>\n        </div>\n    `,\n    animations: [\n        trigger('animation', [\n            state('void', style({\n                transform: 'scaleY(0.8)',\n                opacity: 0\n            })),\n            state('close', style({\n                opacity: 0\n            })),\n            state('open', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => open', animate('{{showTransitionParams}}')),\n            transition('open => close', animate('{{hideTransitionParams}}')),\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./overlaypanel.css']\n})\nexport class OverlayPanel implements AfterContentInit, OnDestroy {\n\n    @Input() dismissable: boolean = true;\n\n    @Input() showCloseIcon: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() appendTo: any;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() ariaCloseLabel: string;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() focusOnShow: boolean = true;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    container: HTMLDivElement;\n\n    overlayVisible: boolean = false;\n\n    render: boolean = false;\n\n    isContainerClicked: boolean = true;\n\n    documentClickListener: any;\n\n    target: any;\n\n    willHide: boolean;\n\n    scrollHandler: any;\n\n    documentResizeListener: any;\n\n    contentTemplate: TemplateRef<any>;\n\n    destroyCallback: Function;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef, private zone: NgZone) {}\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n\n            this.cd.markForCheck();\n        });\n    }\n\n    onContainerClick() {\n        this.isContainerClicked = true;\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener && this.dismissable) {\n            this.zone.runOutsideAngular(() => {\n                let documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\n                const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n                this.documentClickListener = this.renderer.listen(documentTarget, documentEvent, (event) => {\n                    if (!this.container.contains(event.target) && this.target !== event.target && !this.target.contains(event.target) && !this.isContainerClicked) {\n                        this.zone.run(() => {\n                            this.hide();\n                        });\n                    }\n\n                    this.isContainerClicked = false;\n                    this.cd.markForCheck();\n                });\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    toggle(event, target?) {\n        if (this.overlayVisible) {\n            if (this.hasTargetChanged(event, target)) {\n                this.destroyCallback = () => {\n                    this.show(null, (target||event.currentTarget||event.target));\n                };\n            }\n\n            this.hide();\n        }\n        else {\n            this.show(event, target);\n        }\n    }\n\n    show(event, target?) {\n        this.target = target||event.currentTarget||event.target;\n        this.overlayVisible = true;\n        this.render = true;\n        this.cd.markForCheck();\n    }\n\n    hasTargetChanged(event, target) {\n        return this.target != null && this.target !== (target||event.currentTarget||event.target);\n    }\n\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.container);\n            else\n                DomHandler.appendChild(this.container, this.appendTo);\n        }\n    }\n\n    restoreAppend() {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.container);\n        }\n    }\n\n    align() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n        DomHandler.absolutePosition(this.container, this.target);\n\n        const containerOffset = DomHandler.getOffset(this.container);\n        const targetOffset = DomHandler.getOffset(this.target);\n        let arrowLeft = 0;\n\n        if (containerOffset.left < targetOffset.left) {\n            arrowLeft = targetOffset.left - containerOffset.left;\n        }\n        this.container.style.setProperty('--overlayArrowLeft', `${arrowLeft}px`);\n\n        if (containerOffset.top < targetOffset.top) {\n            DomHandler.addClass(this.container, 'p-overlaypanel-flipped');\n        }\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        if (event.toState === 'open') {\n            this.container = event.element;\n            this.onShow.emit(null);\n            this.appendContainer();\n            this.align();\n            this.bindDocumentClickListener();\n            this.bindDocumentResizeListener();\n            this.bindScrollListener();\n\n            if (this.focusOnShow) {\n                this.focus();\n            }\n        }\n    }\n\n    onAnimationEnd(event: AnimationEvent) {\n        switch (event.toState) {\n            case 'void':\n                if (this.destroyCallback) {\n                    this.destroyCallback();\n                    this.destroyCallback = null;\n                }\n            break;\n\n            case 'close':\n                this.onContainerDestroy();\n                this.onHide.emit({});\n                this.render = false;\n            break;\n        }\n    }\n\n    focus() {\n        let focusable = DomHandler.findSingle(this.container, '[autofocus]');\n        if (focusable) {\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => focusable.focus(), 5);\n            });\n        }\n    }\n\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n\n    onCloseClick(event) {\n        this.hide();\n        event.preventDefault();\n    }\n\n    onWindowResize(event) {\n        this.hide();\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    onContainerDestroy() {\n        this.target = null;\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n    }\n\n    ngOnDestroy() {\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        this.target = null;\n        this.destroyCallback = null;\n        if (this.container) {\n            this.restoreAppend();\n            this.onContainerDestroy();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RippleModule, SharedModule],\n    exports: [OverlayPanel, SharedModule],\n    declarations: [OverlayPanel]\n})\nexport class OverlayPanelModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}