{"version":3,"file":"nuvem-primeng-components.js","sources":["../../../projects/primeng-components/src/lib/datatable/datatable.service.ts","../../../projects/primeng-components/src/lib/datatable/server-dataprovider.ts","../../../projects/primeng-components/src/lib/datatable/memory-dataprovider.ts","../../../projects/primeng-components/src/lib/datatable/dataprovider-factory.ts","../../../projects/primeng-components/src/lib/datatable/datatable-button.component.ts","../../../projects/primeng-components/src/lib/datatable/datatable-click-event.ts","../../../projects/primeng-components/src/lib/datatable/p-column.directive.ts","../../../projects/primeng-components/src/lib/datatable/datatable.component.ts","../../../projects/primeng-components/src/lib/extra-button/datatable-splitbutton.component.ts","../../../projects/primeng-components/src/lib/extra-button/datatable-splitbutton.module.ts","../../../projects/primeng-components/src/lib/datatable/filter-column/filter-column.component.ts","../../../projects/primeng-components/src/lib/datatable/filter-column/filter-column.module.ts","../../../projects/primeng-components/src/lib/page-notification/page-notification.service.ts","../../../projects/primeng-components/src/lib/datatable/show-column/show-column.component.ts","../../../projects/primeng-components/src/lib/datatable/show-column/show-column.module.ts","../../../projects/primeng-components/src/lib/datatable/action-button/action-button.component.ts","../../../projects/primeng-components/src/lib/datatable/datatable.module.ts","../../../projects/primeng-components/src/lib/block-ui/block-ui.component.ts","../../../projects/primeng-components/src/lib/block-ui/block-ui.module.ts","../../../projects/primeng-components/src/lib/page-notification/page-notification.component.ts","../../../projects/primeng-components/src/lib/page-notification/page-notification.module.ts","../../../projects/primeng-components/src/lib/form-notification/form-notification.component.ts","../../../projects/primeng-components/src/lib/form-notification/form-notification.module.ts","../../../projects/primeng-components/src/lib/error-stack/error-stack.component.ts","../../../projects/primeng-components/src/lib/error-stack/error-stack.module.ts","../../../projects/primeng-components/src/lib/crud/crud-form.component.ts","../../../projects/primeng-components/src/lib/crud/crud-service.service.ts","../../../projects/primeng-components/src/lib/crud/crud-list.component.ts","../../../projects/primeng-components/src/lib/crud/crud-resolve.guard.ts","../../../projects/primeng-components/src/lib/crud/crud-route-builder.ts","../../../projects/primeng-components/src/lib/crud/crud-service-nuvem.service.ts","../../../projects/primeng-components/src/lib/crud/success-message-handler.interceptor.ts","../../../projects/primeng-components/src/lib/crud/components/field.component.ts","../../../projects/primeng-components/src/lib/crud/components/input-text/input-text.component.ts","../../../projects/primeng-components/src/lib/crud/components/calendar/calendar-locale.ts","../../../projects/primeng-components/src/lib/crud/components/calendar/calendar.component.ts","../../../projects/primeng-components/src/lib/crud/components/text-area/text-area.component.ts","../../../projects/primeng-components/src/lib/crud/components/dropdown/dropdown.component.ts","../../../projects/primeng-components/src/lib/crud/components/input-mask/input-mask.component.ts","../../../projects/primeng-components/src/lib/crud/components/check/check.component.ts","../../../projects/primeng-components/src/lib/crud/form.component.ts","../../../projects/primeng-components/src/lib/crud/components/validation-message/validation-message.component.ts","../../../projects/primeng-components/src/lib/crud/components/auto-complete/auto-complete.component.ts","../../../projects/primeng-components/src/lib/crud/components/auto-complete/auto-complete-custom.component.ts","../../../projects/primeng-components/src/lib/crud/components/auto-complete/auto-complete-item.component.ts","../../../projects/primeng-components/src/lib/crud/components/auto-complete-multiple/auto-complete-multiple.component.ts","../../../projects/primeng-components/src/lib/crud/components/check/check.pipe.ts","../../../projects/primeng-components/src/lib/crud/crud.module.ts","../../../projects/primeng-components/src/lib/breadcrumb/breadcrumb.service.ts","../../../projects/primeng-components/src/lib/breadcrumb/breadcrumb.component.ts","../../../projects/primeng-components/src/lib/breadcrumb/breadcrumb.module.ts","../../../projects/primeng-components/src/lib/menu/menu.service.ts","../../../projects/primeng-components/src/lib/menu/menu.component.ts","../../../projects/primeng-components/src/lib/menu/submenu.component.ts","../../../projects/primeng-components/src/lib/menu/menu.module.ts","../../../projects/primeng-components/src/public-api.ts","../../../projects/primeng-components/src/nuvem-primeng-components.ts"],"names":["DataTable","AutoCompletePrimeng","PrimengBreadcrumbModule"],"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { LazyLoadEvent } from 'primeng/api';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/**\n * Class DatatableService\n * @class\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DatatableService {\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {HttpClient} http\n     */\n    constructor(private http: HttpClient) {}\n\n    /**\n     * search method\n     * @param {LazyLoadEvent} event\n     * @param {String} url\n     * @param {number} rows\n     * @param {boolean} orderInSort\n     * @param {any} query\n     * @return Observable\n     */\n    search(event: LazyLoadEvent, url: string, rows: number, orderInSort: boolean, query?: any) {\n        let page = 0;\n        if (event !== undefined && event.first > 0) {\n            page = Math.floor(event.first / rows);\n        }\n\n        let order = event.sortOrder === 1 ? 'asc' : 'desc';\n        let params: HttpParams = new HttpParams()\n        .set('page', page.toString())\n        .set('size', rows.toString());\n\n        if (orderInSort) {\n            if (event.sortField !== undefined) {\n                params = params.set('sort', event.sortField + ',' + order);\n            }\n        } else {\n            if (event.sortField !== undefined) {\n                params = params\n                .set('sort', event.sortField)\n                .set('order', order);\n            }\n        }\n\n        if ('string' === typeof query) {\n            params = params.set('query', query);\n        }\n\n        if ('object' === typeof query) {\n            Object.keys(query).forEach(key => params = params.set(key, query[key]));\n        }\n        return this.http.get(`${url}?${params.toString()}`, { observe: 'response' });\n    }\n}\n","import { LazyLoadEvent } from 'primeng/api';\nimport { DatatableComponent } from './datatable.component';\nimport { DatatableService } from './datatable.service';\nimport { DataProvider } from './dataprovider';\n\n/**\n * Class ServerDataProvider\n * @class\n */\nexport class ServerDataProvider implements DataProvider {\n\n    /**\n     * currentLazyLoadEvent property\n     * @type {LazyLoadEvent}\n     */\n    currentLazyLoadEvent: LazyLoadEvent;\n\n    /**\n     * _query property\n     * @type {any}\n     */\n    private _query: any;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {DatatableService} datatableService\n     * @param {DatatableComponent} component\n     */\n    constructor(private datatableService: DatatableService, private component: DatatableComponent) {\n        this.component.pDatatableComponent.onLazyLoad.subscribe((event: LazyLoadEvent) => this.onLazyLoad(event));\n        this.component.pDatatableComponent.lazy = true;\n    }\n\n    /**\n     * onLazyLoad method\n     * @param {LazyLoadEvent} onLazyLoad\n     * @returns void\n     */\n    onLazyLoad(event: LazyLoadEvent) {\n        this.currentLazyLoadEvent = event;\n        this.load();\n    }\n\n    /**\n     * load method\n     * @param {any} query\n     * @returns void\n     */\n    load(query?: any): void {\n        query = this.retrieveAndSaveQuery(query);\n        this.component.startedLoading.emit();\n        this.datatableService.search(\n            this.currentLazyLoadEvent,\n            this.component.url,\n            this.component.pDatatableComponent.rows,\n            this.component.orderInSort,\n            query)\n            .toPromise()\n            .then(\n            (response) => {\n                this.treatLoadResponse(response);\n                this.component.finishedLoading.emit();\n            },\n            (error) => {\n                this.component.finishedLoading.emit(error);\n            }\n        );\n    }\n\n    /**\n     * treatLoadResponse method\n     * @param {any} response\n     * @return void\n     */\n    private treatLoadResponse(response: any) {\n        const data = response.body;\n        if (this.component.paginationParameters) {\n            this.treatLoadResponseWithPaginationParameters(data);\n        } else {\n            this.treatLoadResponseWithoutPaginationParameters(response, data);\n        }\n    }\n\n    /**\n     * treatLoadResponseWithPaginationParameters method\n     * @param {any} data\n     * @returns void\n     */\n    private treatLoadResponseWithPaginationParameters(data) {\n        let contentIndex = this.component.paginationParameters.contentIndex;\n        let totalIndex = this.component.paginationParameters.totalElementsIndex;\n        this.component.value = (data[contentIndex])? data[contentIndex]: data;\n        this.component.pDatatableComponent.totalRecords = (data[totalIndex])? data[totalIndex]: this.component.value.length;\n    }\n\n    /**\n     * treatLoadResponseWithoutPaginationParameters method\n     * @param {any} response\n     * @param {any} data\n     * @returns void\n     */\n    private treatLoadResponseWithoutPaginationParameters(response: any, data) {\n        if (response.headers.has('x-total-count')) {\n            this.component.pDatatableComponent.totalRecords = parseInt(response.headers.get('x-total-count'), 10);\n            this.component.value = data;\n        } else {\n            this.component.pDatatableComponent.totalRecords = data.totalElements;\n            this.component.value = data.content;\n        }\n    }\n\n    /**\n     * retrieveAndSaveQuery method\n     * @param {any} query\n     * @returns any\n     */\n    private retrieveAndSaveQuery(query: any): any {\n        const oldQuery = this._query;\n        const currentQuery = this.doRetrieveAndSaveQuery(query);\n        this.resetToFirstPageIfQueryChanged(oldQuery, currentQuery);\n        return currentQuery;\n    }\n\n    /**\n     * doRetrieveAndSaveQuery method\n     * @param {any} query\n     * @returns any\n     */\n    private doRetrieveAndSaveQuery(query: any): any {\n        if ('object' === typeof query && query.value) {\n            this._query = query.value;\n        } else if (query) {\n            this._query = query;\n        }\n        return this._query;\n    }\n\n    /**\n     * resetToFirstPageIfQueryChanged method\n     * @param {any} oldQuery\n     * @param {any} currentQuery\n     * @returns void\n     */\n    private resetToFirstPageIfQueryChanged(oldQuery, currentQuery) {\n        if (oldQuery !== currentQuery) {\n            this.currentLazyLoadEvent.first = 0;\n            this.component.pDatatableComponent.first = 0;\n        }\n    }\n    /**\n     * reset method\n     * @returns void\n     */\n    reset() {\n        this._query = undefined;\n    }\n}\n","import { DataProvider } from './dataprovider';\nimport { DatatableComponent } from './datatable.component';\n\n/**\n * Class MemoryDataProvider\n * @class\n */\nexport class MemoryDataProvider implements DataProvider {\n\n    /**\n     * constructor method\n     * @param {DatatableComponent} component\n     * @constructor\n     */\n    constructor(private component: DatatableComponent) {}\n\n    /**\n     * load method\n     * @param {any} query\n     * @returns void\n     */\n    load(query ?: any): void {\n        this.component.pDatatableComponent.reset();\n        \n        for (let prop in query) {\n            let matchMode = 'contains';\n            if (query[prop] instanceof Array) {\n                matchMode = 'in';\n            }\n            this.component.pDatatableComponent.filter(\n                query[prop],\n                prop,\n                matchMode\n            );\n        }\n\n        this.component.pDatatableComponent.globalFilterFields = query;\n        this.component.pDatatableComponent._filter();\n    }\n\n    /**\n     * reset method\n     * @returns void\n     */\n    reset() {\n        this.component.pDatatableComponent.globalFilterFields = undefined;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DatatableService } from './datatable.service';\nimport { DatatableComponent } from './datatable.component';\n\nimport { DataProvider } from './dataprovider';\nimport { ServerDataProvider } from './server-dataprovider';\nimport { MemoryDataProvider } from './memory-dataprovider';\n\n/**\n * Enum DataProviderType\n * @enum\n */\nexport enum DataProviderType {\n    Memory = 'memory',\n    Server = 'server'\n}\n/**\n * Class DataProviderFactory\n * @class\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DataProviderFactory {\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {DatatableService} datatableService\n     */\n    constructor(private datatableService: DatatableService) {}\n\n    /**\n     * create method\n     * @param {DataProviderType} type\n     * @param {DatatableComponent} component\n     * @public\n     * @returns DataProvider\n     */\n    public create(type: DataProviderType, component: DatatableComponent): DataProvider {\n        if (DataProviderType.Server === type) {\n            return new ServerDataProvider(this.datatableService, component);\n        }\n\n        if (DataProviderType.Memory === type) {\n            return new MemoryDataProvider(component);\n        }\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter\n} from '@angular/core';\n/**\n * Class DatatableButtonComponent\n * @class\n */\n@Component({\n    selector: 'basis-datatable-button',\n    templateUrl: './datatable-button.component.html'\n})\nexport class DatatableButtonComponent {\n\n    /**\n     * icon property\n     * @type {string}\n     */\n    @Input()\n    icon: string;\n\n    /**\n     * class property\n     * @type {string}\n     */\n    @Input()\n    class: string;\n\n    /**\n     * bTooltip property\n     * @type {string}\n     */\n    @Input()\n    bTooltip: string;\n\n    /**\n     * name property\n     * @type {string}\n     */\n    @Input()\n    name: string;\n\n    /**\n     * allowMultipleSelection property\n     * @type {boolean}\n     */\n    @Input()\n    allowMultipleSelection: boolean = true;\n\n    /**\n     * disabled property\n     * @type boolean\n     */\n    @Input()\n    disabled: boolean = false;\n\n    /**\n     * click property\n     * @type {EventEmitter<any>}\n     */\n    @Output()\n    click: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * onClick method\n     * @param {any} event\n     * @return void\n     */\n    onClick(event: any) {\n        this.click.emit(event);\n        event.stopPropagation();\n    }\n}\n","/**\n * Class DatatableClickEvent\n * @class\n */\nexport class DatatableClickEvent {\n    /**\n     * constructor method\n     * @constructor\n     * @param {string} button\n     * @param {any} selection\n     */\n    constructor(public button: string, public selection: any) {}\n}\n","import { Input, EventEmitter, QueryList, TemplateRef, AfterContentInit, Output, ContentChildren, ContentChild, Directive } from '@angular/core';\nimport { PrimeTemplate } from 'primeng/api';\n\n@Directive({\n    selector: 'p-column'\n})\nexport class Column implements AfterContentInit {\n\n    @Input() field: string;\n\n    @Input() colId: string;\n\n    @Input() sortField: string;\n\n    @Input() filterField: string;\n\n    @Input() header: string;\n\n    @Input() footer: string;\n\n    @Input() sortable: any;\n\n    @Input() editable: boolean;\n\n    @Input() filter: boolean;\n\n    @Input() filterMatchMode: string;\n\n    @Input() filterType: string = 'text';\n\n    @Input() excludeGlobalFilter: boolean;\n\n    @Input() rowspan: number;\n\n    @Input() colspan: number;\n\n    @Input() scope: string;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() exportable: boolean = true;\n\n    @Input() headerStyle: any;\n\n    @Input() headerStyleClass: string;\n\n    @Input() bodyStyle: any;\n\n    @Input() bodyStyleClass: string;\n\n    @Input() footerStyle: any;\n\n    @Input() footerStyleClass: string;\n\n    @Input() hidden: boolean;\n\n    @Input() expander: boolean;\n\n    @Input() selectionMode: string;\n\n    @Input() filterPlaceholder: string;\n\n    @Input() filterMaxlength: number;\n\n    @Input() frozen: boolean;\n\n    @Input() resizable: boolean = true;\n\n    @Output() sortFunction: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @ContentChild(TemplateRef) template: TemplateRef<any>;\n\n    public headerTemplate: TemplateRef<any>;\n\n    public bodyTemplate: TemplateRef<any>;\n\n    public footerTemplate: TemplateRef<any>;\n\n    public filterTemplate: TemplateRef<any>;\n\n    public editorTemplate: TemplateRef<any>;\n\n    public inputTemplate: TemplateRef<any>;\n\n    public outputTemplate: TemplateRef<any>;\n\n    ngAfterContentInit(): void {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n\n                case 'body':\n                    this.bodyTemplate = item.template;\n                    break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n\n                case 'editor':\n                    this.editorTemplate = item.template;\n                    break;\n\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n\n                default:\n                    this.bodyTemplate = item.template;\n                    break;\n            }\n        });\n    }\n}\n","import {\n    Component,\n    ViewChild,\n    Input,\n    Output,\n    ContentChildren,\n    QueryList,\n    ChangeDetectorRef,\n    AfterViewInit,\n    AfterContentInit,\n    OnInit,\n    EventEmitter,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Table as DataTable } from 'primeng/table';\nimport { DataProvider } from './dataprovider';\nimport { DataProviderFactory, DataProviderType } from './dataprovider-factory';\nimport { DatatableButtonComponent } from './datatable-button.component';\nimport { DatatableClickEvent } from './datatable-click-event';\nimport { DatatablePaginationParameters } from './datatable-pagination-parameters';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Authorization } from '@nuvem/angular-base';\nimport { Column } from './p-column.directive';\n\n/**\n * Class DatatableComponent\n * @class\n */\n@Component({\n    selector: 'basis-datatable',\n    templateUrl: './datatable.component.html',\n    styleUrls: ['./datatable.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DatatableComponent\n    implements AfterViewInit, AfterContentInit, OnInit {\n    isShowGlobalFilter = false;\n    isShowFilterRow = false;\n\n    get showGlobalFilter(): boolean {\n        return this.isShowGlobalFilter;\n    }\n\n    set showGlobalFilter(showGlobalFilter: boolean) {\n        this.isShowGlobalFilter = showGlobalFilter;\n    }\n\n    get showFilterRow(): boolean {\n        return this.isShowFilterRow;\n    }\n\n    set showFilterRow(ShowFilterRow: boolean) {\n        this.isShowFilterRow = ShowFilterRow;\n    }\n\n    /**\n     * selectedRow property\n     * @type {any}\n     */\n    selectedRow: any;\n\n    /**\n     * dataProvider property\n     * @type {DataProvider}\n     */\n    dataProvider: DataProvider;\n\n    /**\n     * filterParams property\n     * @type {any}\n     */\n    filterParams: any = {};\n\n    /**\n     * footerMsg property\n     * @type {string}\n     */\n    footerMsg: string = '';\n\n    /**\n     * orderInSort property\n     * @type {boolean}\n     */\n    orderInSort: boolean = false;\n\n    /**\n     * title property\n     * @type {string}\n     */\n    @Input() title: string;\n\n    /**\n     * splitButton property\n     * @type {any}\n     */\n    @Input() splitButton: any;\n\n    /**\n     * value property\n     * @type {any}\n     */\n    @Input() value: any[] = [];\n\n    /**\n     * type property\n     * @type DataProviderType\n     */\n    @Input() type: DataProviderType = DataProviderType.Server;\n\n    /**\n     * rows property\n     * @type {number}\n     */\n    @Input() rows: number = 5;\n\n    /**\n     * rowsPerPageOptions property\n     * @type {number[]}\n     */\n    @Input() rowsPerPageOptions: number[];\n\n    /**\n     * url property\n     * @type {string}\n     */\n    @Input() url: string;\n\n    /**\n     * extraParams property\n     * @type {any}\n     */\n    @Input() extraParams: any;\n\n    /**\n     * paginationParameters property\n     * @type {DatatablePaginationParameters}\n     */\n    @Input() paginationParameters: DatatablePaginationParameters;\n\n    /**\n     * showPaginationFooter property\n     * @type {boolean}\n     */\n    @Input() showPaginationFooter = false;\n\n    /**\n     * disableEdit property\n     * @type {boolean}\n     */\n    @Input() disableEdit = false;\n\n    /**\n     * disableView property\n     * @type {boolean}\n     */\n    @Input() disableView = false;\n\n    /**\n     * disableDelete property\n     * @type {boolean}\n     */\n    @Input() disableDelete = false;\n\n    /**\n     * selectionMode property\n     * @type {string}\n     */\n    @Input() selectionMode = 'single';\n\n    /**\n     * enableButtonsScroll property\n     * @type {boolean}\n     */\n    @Input() enableButtonsScroll = false;\n\n    /**\n     * emptyMessage property\n     * @type {string}\n     */\n    @Input() emptyMessage = 'Nenhum registro encontrado.';\n\n    /**\n     * verticalButtons property\n     * @type {boolean}\n     */\n    @Input() verticalButtons = true;\n\n    /**\n     * defaultButtons property\n     * @type {boolean}\n     */\n    @Input() defaultButtons = true;\n\n    /**\n     * enableScroll property\n     * @type {boolean}\n     */\n    @Input() enableScroll = false;\n\n    /**\n     * scrollHeight property\n     * @type {string}\n     */\n    @Input() scrollHeight: string;\n\n    /**\n     * scrollWidth property\n     * @type {string}\n     */\n    @Input() scrollWidth: string;\n\n    /**\n     * rulesToHide property\n     * @type {any}\n     */\n    @Input() rulesToHide: any;\n\n    /**\n     * rulesToShowEdit property\n     * @type {any}\n     */\n    @Input() rulesToShowEdit: any;\n\n    /**\n     * rulesToShowDelete property\n     * @type {any}\n     */\n    @Input() rulesToShowDelete: any;\n\n    /**\n     * rulesToHideView property\n     * @type {any}\n     */\n    @Input() rulesToHideView: any;\n\n    /**\n     * rulesToHideEdit property\n     * @type {any}\n     */\n    @Input() rulesToHideEdit: any;\n\n    /**\n     * rulesToHideDelete property\n     * @type {any}\n     */\n    @Input() rulesToHideDelete: any;\n\n    /**\n     * horizontalButtonsHeader property\n     * @type {string}\n     */\n    horizontalButtonsHeader: string;\n\n    /**\n     * disableLoadingBlockUI property\n     * @type {boolean}\n     */\n    @Input() disableLoadingBlockUI = false;\n\n    /**\n     * rowStyleClass property\n     * @type {any}\n     */\n    @Input() rowStyleClass: any;\n\n    /**\n     * filterOnColumn property\n     */\n    @Input() filterOnColumn = false;\n\n    /**\n     * filterSelectOptions property\n     */\n    filterSelectOptions: any[] = [];\n\n    /**\n     * updateFiltroHistorico property\n     */\n    updateFilterColumn: boolean = false;\n\n    /**\n     * customFilterOptions property\n     */\n    @Input() customFilterOptions: Object = {};\n\n    /**\n     * buttonClick property\n     * @type {EventEmitter<any>}\n     */\n    @Output() buttonClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * pDatatableComponent property\n     * @type {Table}\n     */\n    @ViewChild(DataTable, { static: true }) pDatatableComponent: DataTable;\n\n    /**\n     * extraButtons property\n     * @type {QueryList<DatatableButtonComponent>}\n     */\n    @ContentChildren(DatatableButtonComponent) extraButtons: QueryList<DatatableButtonComponent>;\n\n    /**\n     * columns property\n     * @type {any[]}\n     */\n    @ContentChildren(Column) columns: Column[];\n\n    /**\n     * startedLoading property\n     * @type {EventEmitter<void>}\n     */\n    @Output() startedLoading: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * finishedLoading property\n     * @type {EventEmitter<HttpErrorResponse>}\n     */\n    @Output() finishedLoading: EventEmitter<HttpErrorResponse> = new EventEmitter<HttpErrorResponse>();\n\n    /**\n     * onRowSelected property\n     * @type {EventEmitter<any>}\n     */\n    @Output() onRowSelected: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * showHorizontalButtonsHeader property\n     * @type {boolean}\n     */\n    showHorizontalButtonsHeader = false;\n\n    /**\n     * blockContent\n     * @type {boolean}\n     */\n    blockContent = false;\n\n    /**\n     * visibleColumns property\n     * @type {Object}\n     */\n    visibleColumns: Object = {};\n\n    /**\n     * showVisibleColumnsControl property\n     * @type {boolean}\n     */\n    @Input() showVisibleColumnsControl: boolean = false;\n\n    /**\n     * editMode property\n     * @type {string}\n     */\n    @Input() editMode: string;\n\n    /**\n     * dataKey property\n     * Identificador único para cada registro da tabela\n     * @type {string}\n     */\n    @Input() dataKey: string = 'id';\n\n    /**\n     * onRowEditEvent property\n     * Evento disparado quando o usuário realiza ações de edição em uma linha da tabela\n     * @type {EventEmitter<void>}\n     */\n    @Output() onRowEditEvent: EventEmitter<any> = new EventEmitter<any>();\n\n    clonedRowData: { [s: string]: any } = {};\n\n    /**\n     * errorMessage property\n     * @type {string}\n     */\n    private errorMessage = 'Ocorreu um erro ao carregar os dados da tabela. Tente novamente.';\n\n    /**\n     * originalEmptyMessage property\n     * @type {string}\n     */\n    private originalEmptyMessage: string;\n\n    editingRow = false;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {ChangeDetectorRef} changeDetectorRef\n     * @param {DataProviderFactory} dataProviderFactory\n     * @param {Authorization} authorizationService\n     */\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        private dataProviderFactory: DataProviderFactory,\n        private authorizationService: Authorization\n    ) {}\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n        this.dataProvider = this.dataProviderFactory.create(this.type, this);\n        this.pDatatableComponent.rows = this.rows;\n        this.subscribeToLoadingEvents();\n        this.initRowsPerPageOptionsIfPresent();\n        this.defineIfShouldShowHorizontalButtonsHeader();\n        this.updateOnValueChange();\n\n        this.finishedLoading.subscribe(() => {\n            this.updateOnValueChange();\n        });\n    }\n\n    /**\n     * subscribeFromValueChange method\n     * @returns void\n     */\n    private updateOnValueChange() {\n        this.filterSelectOptions = [];\n        if (this.value) {\n            this.value.map((item: any) => {\n                this.filterSelectOptions.push(item);\n            });\n        }\n    }\n\n    /**\n     * subscribeToLoadingEvents method\n     * @returns void\n     */\n    private subscribeToLoadingEvents() {\n        if (!this.disableLoadingBlockUI) {\n            this.originalEmptyMessage = this.emptyMessage;\n            this.startedLoading.subscribe(() => this.onStartedLoading());\n            this.finishedLoading.subscribe(error =>\n                this.onFinishedLoading(error)\n            );\n        }\n    }\n\n    /**\n     * onStartedLoading method\n     * @returns void\n     */\n    private onStartedLoading() {\n        this.blockContent = true;\n        this.emptyMessage = this.originalEmptyMessage;\n    }\n    /**\n     * onFinishedLoading method\n     * @param {HttpErrorResponse} error\n     * @returns void\n     */\n    private onFinishedLoading(error: HttpErrorResponse) {\n        this.blockContent = false;\n        if (error) {\n            this.emptyMessage = this.errorMessage;\n        }\n    }\n\n    /**\n     * initRowsPerPageOptionsIfPresent method\n     * @returns void\n     */\n    private initRowsPerPageOptionsIfPresent() {\n        if (this.rowsPerPageOptions) {\n            this.pDatatableComponent.rowsPerPageOptions = this.rowsPerPageOptions;\n        }\n    }\n\n    /**\n     * defineIfShouldShowHorizontalButtonsHeader method\n     * @returns void\n     */\n    private defineIfShouldShowHorizontalButtonsHeader() {\n        if (this.horizontalButtonsHeader) {\n            this.showHorizontalButtonsHeader = true;\n        }\n    }\n\n    /**\n     * ngAfterViewInit method\n     * @returns void\n     */\n    ngAfterViewInit() {\n        this.setExtraParams();\n        this.pDatatableComponent.columns = this.columns;\n        this.pDatatableComponent.ngAfterContentInit();\n        this.setAllColumnsVisible();\n        this.changeDetectorRef.detectChanges();\n    }\n\n    /**\n     * setExtraParams method\n     * @returns void\n     */\n    private setExtraParams() {\n        for (let i in this.extraParams) {\n            this.pDatatableComponent[i] = this.extraParams[i];\n        }\n    }\n    /**\n     * ngAfterContentInit method\n     * @returns void\n     */\n    ngAfterContentInit() {\n        this.extraButtons.forEach(button => {\n            button.click.subscribe(event => {\n                this.onClick(button.name, event);\n            });\n        });\n    }\n\n    /**\n     * onClick method\n     * @param {string} button\n     * @param {any} event\n     * @return void\n     */\n    onClick(button: string, event: any) {\n        this.buttonClick.emit(\n            new DatatableClickEvent(button, this.selectedRow)\n        );\n        event.stopPropagation();\n        this.resetSelectedRow(button);\n    }\n\n    /**\n     * onSelectChange method\n     * @param {any} event\n     * @returns void\n     */\n    onSelectChange(event: any) {\n        this.onRowSelected.emit(this.selectedRow);\n        if (Array.isArray(this.selectedRow) && this.selectedRow.length > 1) {\n            this.updateMultipleButtonsStatus(true);\n        } else {\n            this.updateMultipleButtonsStatus(false);\n        }\n    }\n\n    /**\n     * updateMultipleButtonsStatus method\n     * @param {boolean} hasMultipleSelection\n     * @return void\n     */\n    private updateMultipleButtonsStatus(hasMultipleSelection: boolean) {\n        this.extraButtons.forEach(button => {\n            if (hasMultipleSelection && !button.allowMultipleSelection) {\n                button.disabled = true;\n            } else {\n                button.disabled = false;\n            }\n        });\n    }\n\n    /**\n     * refresh method\n     * @param query\n     * @returns void\n     */\n    refresh(query?: any) {\n        this.dataProvider.load(query);\n    }\n\n    /**\n     * resetSelectedRow method\n     * @param button\n     * @returns void\n     */\n    resetSelectedRow(button: string) {\n        if (button === 'delete') {\n            this.selectedRow = null;\n        }\n    }\n\n    /**\n     * reset method\n     * @returns void\n     */\n    reset() {\n        this.pDatatableComponent.first = 0;\n        this.dataProvider.reset();\n        this.refresh();\n    }\n\n    /**\n     * paginationFooterText method\n     * @param {string} msg\n     * @returns string\n     */\n    paginationFooterText(msg: string): string {\n        const registros = this.totalRecords() === 1 ? 'registro' : 'registros';\n        if (msg === '') {\n            return `Exibindo: ${this.currentFirstIndex()} a ${this.currentLastIndex()} de ${this.totalRecords()} ${registros}`;\n        }\n        msg = msg.replace('{totalRecords}', this.totalRecords().toString());\n        msg = msg.replace(\n            '{currentFirstIndex}',\n            this.currentFirstIndex().toString()\n        );\n        msg = msg.replace(\n            '{currentLastIndex}',\n            this.currentLastIndex().toString()\n        );\n        return msg;\n    }\n\n    /**\n     * currentFirstIndex method\n     * @returns number\n     */\n    currentFirstIndex(): number {\n        return this.pDatatableComponent.first + 1;\n    }\n\n    /**\n     * currentLastIndex method\n     * @returns number\n     */\n    currentLastIndex(): number {\n        const currentLastIndex: number =\n            this.pDatatableComponent.first + this.pDatatableComponent.rows;\n        if (currentLastIndex > this.totalRecords()) {\n            return this.totalRecords();\n        }\n        return currentLastIndex;\n    }\n\n    /**\n     * totalRecords method\n     * @returns number\n     */\n    totalRecords(): number {\n        return this.pDatatableComponent.totalRecords;\n    }\n\n    /**\n     * checkRolesToButton method\n     * @param {string} button\n     * @return boolean\n     */\n    checkRolesToButton(button: string): boolean {\n        if (this[button]) {\n            if (\n                button === 'rulesToHide' ||\n                button === 'rulesToShowEdit' ||\n                button === 'rulesToShowDelete'\n            ) {\n                this.checkUseButtons(button);\n                return this.authorizationService.hasRole(this[button]);\n            }\n            return !this.authorizationService.hasRole(this[button]);\n        }\n        return true;\n    }\n\n    /**\n     * checkUseButtons method\n     * @param {string} button\n     * @returns void\n     */\n    checkUseButtons(button: string): void {\n        if (this[button] && this[button.replace('Show', 'Hide')]) {\n            throw new Error(\n                'Não é possível definir dois valores de roles para os botões padrões.'\n            );\n        }\n    }\n\n    /**\n     * filter method\n     * @returns void\n     */\n    filter() {\n        for (let prop in this.filterParams) {\n            if (\n                this.filterParams[prop] === '' ||\n                this.filterParams[prop].length === 0\n            ) {\n                delete this.filterParams[prop];\n            }\n        }\n        if (Object.getOwnPropertyNames(this.filterParams).length === 0) {\n            this.reset();\n        } else {\n            this.refresh(this.filterParams);\n        }\n    }\n\n    /**\n     * Método para filtrar por colunas\n     * @param column chave da coluna na tabela\n     * @param filters valor do filtro\n     */\n    filterColumn(column: string, filters: any) {\n        const values = [];\n        if (filters instanceof Array) {\n            values[column] = [];\n            for (let item in filters) {\n                let val =\n                    filters[item] instanceof Object\n                        ? filters[item].value\n                        : filters[item];\n                values[column].push(val);\n            }\n        } else {\n            values[column] = filters;\n        }\n        this.filterParams = { ...this.filterParams, ...values };\n\n        return this.filter();\n    }\n\n    /**\n     * Inicia todas as colunas da tabela como visíveis\n     */\n    setAllColumnsVisible() {\n        this.columns.forEach(col => {\n            this.visibleColumns[col.field] = 'table-cell';\n        });\n    }\n\n    /**\n     * Verifica se uma coluna deve estar visível\n     * @param column string\n     * @param visibleColumns Array\n     */\n    visibleColumnCheck(column: string, visibleColumns: []) {\n        return visibleColumns.some((item: any) => {\n            return item.field ? item.field == column : true;\n        });\n    }\n\n    /**\n     * Atualzia os valores da variável 'visibleColuns' para mostrar ou não as colunas\n     * @param columns array\n     */\n    updateVisibleColumns(columns: []) {\n        for (let col in this.visibleColumns) {\n            if (this.visibleColumnCheck(col, columns)) {\n                this.visibleColumns[col] = 'table-cell';\n            } else {\n                this.visibleColumns[col] = 'none';\n            }\n        }\n    }\n\n    onRowEditInitEvent(event, rowData: any) {\n        // const tr = event.srcElement.closest('tr');\n\n        // setTimeout(() => {\n        //     this.editingRow = true;\n        //     const top = tr.offsetTop;\n        //     const height = tr.offsetHeight;\n        //     const editButtons = tr.querySelector('.editar-campos');\n\n        //     editButtons.style.top = (top + height) + 'px';\n        //     editButtons.style.height ='75px';\n        //     editButtons.style.backgroundColor = '#d0d0d0';\n        //     editButtons.style.opacity = 1;\n\n        //     this.clonedRowData[rowData.id] = {...rowData};\n        //     this.onRowEditEvent.emit({event: \"init\", data: rowData});\n        // }, null , tr);\n\n    }\n\n    onRowEditSaveEvent(event, rowData: any) {\n        this.onRowEditEvent.emit({event: \"save\", data: rowData});\n        this.resetEditingMode(event);\n    }\n\n    onRowEditCancelEvent(event, rowData: any, index: number) {\n        this.value[index] = this.clonedRowData[rowData.id];\n\n        delete this.clonedRowData[rowData[this.dataKey]];\n        this.onRowEditEvent.emit({event: \"cancel\", data: rowData});\n\n        this.resetEditingMode(event);\n    }\n\n    resetEditingMode(event) {\n        const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');\n\n        editButtons.style.opacity = 0;\n        editButtons.style.backgroundColor = '#0000006b';\n        editButtons.style.display = 'none';\n\n        this.editingRow = false;\n    }\n\n    editarLinhaOver(event) {\n        // if (!this.editingRow && this.editMode == 'row') {\n        //     const top = event.srcElement.closest('tr').offsetTop;\n        //     const height = event.srcElement.closest('tr').offsetHeight;\n        //     const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');\n\n        //     editButtons.style.display = 'flex';\n        //     editButtons.style.top = top + 'px';\n        //     editButtons.style.height = height + 'px';\n        //     editButtons.style.backgroundColor = '#0000006b';\n        //     editButtons.style.opacity = 1;\n        // }\n    }\n\n    editarLinhaOut(event) {\n        // if (!this.editingRow) {\n        //     const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');\n        //     editButtons.style.display = 'none';\n        //     editButtons.style.opacity = 0;\n        // }\n    }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Class DatatableSplitbuttonComponent\n * @class\n */\n@Component( {\n    selector: 'datatable-splitbutton',\n    templateUrl: 'datatable-splitbutton.component.html'\n} )\nexport class DatatableSplitbuttonComponent implements OnInit {\n\n    /**\n     * items property\n     * @type {any[]}\n     */\n    @Input()\n    items: any[];\n\n    /**\n     * label property\n     * @type {string}\n     */\n    @Input()\n    label: string;\n\n    /**\n     * class property\n     * @type {string}\n     */\n    @Input()\n    class: string;\n\n    /**\n     * icon property\n     * @type {string}\n     */\n    @Input()\n    icon: string;\n\n    /**\n     * method propety\n     * @type {any}\n     */\n    @Input()\n    method: any;\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n    }\n}\n","import { DatatableSplitbuttonComponent } from './datatable-splitbutton.component';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { SplitButtonModule } from 'primeng/splitbutton';\n/**\n * Class DatatableSplitbuttonModule\n * @class\n */\n@NgModule({\n  imports: [\n    SplitButtonModule\n  ],\n  declarations: [\n    DatatableSplitbuttonComponent\n  ],\n  providers: [],\n  exports: [\n    DatatableSplitbuttonComponent,\n    SplitButtonModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DatatableSplitbuttonModule {\n}\n","import { Component, EventEmitter, Output, Input, OnChanges, SimpleChange, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'basis-filter-column',\n    templateUrl: './filter-column.component.html'\n})\nexport class FilterColumn implements OnChanges, OnInit {\n\n    @Input() listaOriginal: any[] = [];\n\n    @Input() lista: any[] = [];\n\n    @Input() field: string;\n\n    @Input() header: string;\n\n    @Input() labelDefaultImplementation: boolean = false;\n\n    @Input() labelDefaultName: string;\n\n    @Input() updateFiltro: boolean = false;\n\n    @Input() filterType: string;\n\n    @Input() tableType: string;\n\n    @Input() customFilterOptions: Object = {};\n\n    @Input() template = 'filter_text';\n\n    @Output() outputEvent = new EventEmitter();\n\n    private debouncer: Subject<any> = new Subject<any>();\n\n    filtro: any;\n\n    resultado: any[] = [];\n\n    private listaFields: any[] = [];\n\n    constructor() { }\n\n    ngOnInit() {\n        this.debouncer\n            .pipe(debounceTime((this.tableType === 'memory')? 300 : 1000))\n            .subscribe((value) => this.outputEvent.emit(value));\n\n        this.template = `filter_${this.filterType}`;\n    }\n\n    ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n        if (this.checkChanges(changes, 'listaOriginal')) {\n            this.preencherFields();\n        }\n    }\n\n    checkChanges(changes: { [propName: string]: SimpleChange }, property) {\n        return changes[property] && changes[property].previousValue != changes[property].currentValue;\n    }\n\n    /**\n     * Método para propagar o evento de filtragem\n     * @param event filtro\n     */\n    filtrar(event) {\n        this.debouncer.next(this.filtro);\n    }\n\n    /**\n     * Preenche os itens que serão exibidos no multiselect, removendo duplicidades\n     */\n    preencherFields() {\n        this.listaFields = [];\n        this.listaOriginal.filter(pi => pi[this.field] !== null).forEach(row => {\n            let item = {label: row[this.field], value: row[this.field]};\n            if (!this.verificarSeExisteField(item)) {\n                this.listaFields.push(item);\n            }\n        });\n    }\n\n    /**\n     *\n     * @param field Verifica duplicidade de fields nas opções de seleção\n     */\n    verificarSeExisteField(field) {\n        return this.listaFields.some(item => {\n            return item.value == field.value;\n        });\n    }\n\n    /**\n     * Caso o usuaŕio não forneça uma lista para o options, será criada uma lista com\n     * os valores presentes na tabela\n     */\n    getCustomFilterOptions() {\n        if (this.customFilterOptions.hasOwnProperty(this.field)) {\n            return this.customFilterOptions[this.field];\n        }\n\n        return this.listaFields;\n    }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FilterColumn } from './filter-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MultiSelectModule,\n        ButtonModule,\n        CheckboxModule,\n        DropdownModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InputTextModule\n    ],\n    declarations: [\n        FilterColumn\n    ],\n    exports: [\n        FilterColumn\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FilterColumnModule { }\n","import { Injectable } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { NotificationProvider, ApplicationProblemType } from '@nuvem/angular-base';\n\n/**\n * Class PageNotificationService\n * @class\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class PageNotificationService extends NotificationProvider {\n\n    /**\n     * successSeverity property\n     * @type {string}\n     */\n    private readonly successSeverity = 'success';\n\n    /**\n     * infoSeverity property\n     * @type {string}\n     */\n    private readonly infoSeverity = 'info';\n\n    /**\n     * warnSeverity property\n     * @type {string}\n     */\n    private readonly warnSeverity = 'warn';\n\n    /**\n     * errorSeverity property\n     * @type {string}\n     */\n    private readonly errorSeverity = 'error';\n\n    /**\n     * createMsg property\n     * @type {string}\n     */\n    private readonly createMsg = 'Registro incluído com sucesso!';\n\n    /**\n     * updateMsg property\n     * @type {string}\n     */\n    private readonly updateMsg = 'Registro alterado com sucesso!';\n\n    /**\n     * deleteMsg property\n     * @type {string}\n     */\n    private readonly deleteMsg = 'Registro excluído com sucesso!';\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {MessageService} messageService\n     */\n    constructor(private messageService: MessageService) {\n        super();\n    }\n\n    /**\n     * addCreateMsg method\n     * @param {string} title\n     */\n    addCreateMsg(title?: string) {\n        this.addSuccessMessage(this.createMsg, title);\n    }\n\n    /**\n     * addSuccessMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addSuccessMessage(message: string, title?: string) {\n        this.addMsg(this.successSeverity, message, title);\n    }\n\n    /**\n     * addMsg method\n     * @param {string} severity\n     * @param {string} msg\n     * @param {string} title\n     */\n    private addMsg(severity: string, msg: string, title?: string) {\n        this.messageService.add({\n          severity: severity,\n          summary: title,\n          detail: msg\n        });\n    }\n\n    /**\n     * addUpdateMsg method\n     * @param {string} title\n     */\n    addUpdateMsg(title?: string) {\n        this.addSuccessMessage(this.updateMsg, title);\n    }\n\n    /**\n     * addDeleteMsg method\n     * @param {string} title\n     */\n    addDeleteMsg(title?: string) {\n        this.addSuccessMessage(this.deleteMsg, title);\n    }\n\n    /**\n     * addInfoMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addInfoMessage(message: string, title?: string) {\n        this.addMsg(this.infoSeverity, message, title);\n    }\n\n    /**\n     * addWarnMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addWarnMessage(message: string, title?: string) {\n        this.addMsg(this.warnSeverity, message, title);\n    }\n\n    /**\n     * addErrorMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addErrorMessage(message: string, title?: string) {\n        this.addMsg(this.errorSeverity, message, title);\n    }\n\n    /**\n     * addErrorProblem method\n     * @param {ApplicationProblemType} problem\n     */\n    addErrorProblem(problem: ApplicationProblemType): void {\n        this.addMsg(this.errorSeverity, problem.detail, problem.title);\n    }\n\n}\n","import { Component, Input, OnInit, QueryList, Output, EventEmitter } from '@angular/core';\nimport { PageNotificationService } from './../../page-notification/page-notification.service';\n\n@Component({\n    selector: 'basis-show-column',\n    templateUrl: './show-column.component.html'\n})\nexport class ShowColumn implements OnInit {\n\n    /**\n     * atributo que representa as colunas da tabela\n     * @type {QueryList}\n     */\n    @Input() columns: QueryList<any>;\n\n    /**\n     * lista de colunas disponívels na tabela\n     * @type {Array}\n     */\n    options: any[] = [];\n\n    /**\n     * Valores do select de colunas\n     * @type {Array}\n     */\n    values: any[] = [];\n\n    /**\n     * Último valor válido para o select.\n     * @type {Array}\n     */\n    private lastValue: any[] = [];\n\n    /**\n     * Evento para atualizar a visibilidade das colunas da tabela\n     * @type {EventEmitter}\n     */\n    @Output() updateVisibleColumns: EventEmitter<any> = new EventEmitter();\n\n    constructor(private pageNotificationService: PageNotificationService) {}\n\n    ngOnInit () {\n        this.columns.forEach((column) => {\n            const col = {field: column.field, filterType: column.filterType, header: column.header};\n            this.options.push(col);\n            this.values.push(col)\n            this.lastValue.push(col);\n        });\n    }\n\n    mostrarColunas(event) {\n        if (this.values.length) {\n            this.lastValue = event.value;\n            this.updateVisibleColumns.emit(this.values);\n\t\t} else {\n            this.lastValue.map((item) => this.values.push(item));\n\t\t\tthis.pageNotificationService.addErrorMessage('Não é possível exibir menos de uma coluna');\n        }\n    }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ShowColumn } from './show-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MultiSelectModule,\n        ButtonModule,\n        CheckboxModule,\n        DropdownModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InputTextModule\n    ],\n    declarations: [\n        ShowColumn\n    ],\n    exports: [\n        ShowColumn\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class ShowColumnModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'basis-action-button',\n    templateUrl: './action-button.component.html',\n    styleUrls: ['./action-button.component.scss']\n})\nexport class ActionButtonComponent implements OnInit {\n    \n    action = false;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonModule } from 'primeng/button';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { BlockUIModule } from 'primeng/blockui';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { SplitButtonModule } from 'primeng/splitbutton';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { TableModule } from 'primeng/table';\n\nimport { DataProviderFactory } from './dataprovider-factory';\nimport { DatatableComponent } from './datatable.component';\nimport { DatatableButtonComponent } from './datatable-button.component';\nimport { DatatableService } from './datatable.service';\nimport { DatatableSplitbuttonModule } from '../extra-button/datatable-splitbutton.module';\nimport { FilterColumnModule } from './filter-column/filter-column.module';\nimport { ShowColumnModule } from './show-column/show-column.module';\nimport { Column } from './p-column.directive';\nimport { ActionButtonComponent } from './action-button/action-button.component';\n\n/**\n * Class DatatableModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        ButtonModule,\n        SplitButtonModule,\n        TooltipModule,\n        TableModule,\n        BlockUIModule,\n        ProgressSpinnerModule,\n        DatatableSplitbuttonModule,\n        HttpClientModule,\n        PaginatorModule,\n        FilterColumnModule,\n        ShowColumnModule,\n        InputTextModule\n    ],\n    declarations: [\n        DatatableComponent,\n        DatatableButtonComponent,\n        Column,\n        ActionButtonComponent\n    ],\n    providers: [\n        { provide: DatatableService, useClass: DatatableService, deps: [HttpClient] },\n        DataProviderFactory\n    ],\n    exports: [\n        DatatableComponent,\n        DatatableButtonComponent,\n        FilterColumnModule,\n        ShowColumnModule,\n        Column\n    ]\n})\nexport class DatatableModule {\n}\n","import { BlockUiStatus, BlockUiService } from '@nuvem/angular-base';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/**\n * Class BlockUiComponent\n * @class\n */\n@Component({\n    selector: 'basis-block-ui',\n    templateUrl: './block-ui.component.html',\n    styleUrls: [ './block-ui.component.css' ],\n})\nexport class BlockUiComponent implements OnInit , OnDestroy {\n    /**\n     * status property\n     * @type {boolean}\n     * @public\n     */\n    status = false;\n\n    /**\n     * subscription property\n     * @private\n     * @type {Subscription}\n     */\n    private subscription: Subscription;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {BlockUiService} service\n     */\n    constructor(private service: BlockUiService) { }\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n        this.subscription = this.service.loaderStatus.subscribe((blockui: BlockUiStatus) => {\n            this.status = blockui.status;\n        });\n    }\n\n    /**\n     * ngOnDestroy methods\n     * @returns void\n     */\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    /**\n     * isBlocked method\n     * @returns boolean\n     */\n    isBlocked() {\n        return this.status;\n    }\n\n    /**\n     * show method\n     * @returns false\n     */\n    show() {\n        this.status = true;\n    }\n\n    /**\n     * hide methods\n     * @returns void\n     */\n    hide() {\n        this.status = false;\n    }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BlockUiInterceptor, BlockUiService } from '@nuvem/angular-base';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BlockUIModule } from 'primeng/blockui';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { BlockUiComponent } from './block-ui.component';\n\n/**\n * Class BlockUiModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        BlockUIModule,\n        ProgressSpinnerModule,\n    ],\n    declarations: [\n        BlockUiComponent\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: BlockUiInterceptor,\n            multi: true\n        },\n        BlockUiService\n    ],\n    exports: [\n        BlockUIModule,\n        BlockUiComponent,\n        ProgressSpinnerModule\n    ]\n})\nexport class BlockUiModule {\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * Class PageNotificationComponent\n * @class\n */\n@Component({\n  selector: 'basis-page-notification',\n  templateUrl: './page-notification.component.html'\n})\nexport class PageNotificationComponent {\n\n    /**\n     * duration property\n     * @type {number}\n     */\n    @Input() duration: number = 3000;\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\n\nimport { PageNotificationService } from './page-notification.service';\nimport { PageNotificationComponent } from './page-notification.component';\nimport { NotificationProvider } from '@nuvem/angular-base';\n\n/**\n * Class PageNotificationModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        ToastModule\n    ],\n    declarations: [\n        PageNotificationComponent\n    ],\n    exports: [\n        PageNotificationComponent\n    ],\n    providers: [\n        MessageService,\n        PageNotificationService,\n        {\n            provide: NotificationProvider,\n            useExisting: PageNotificationService\n        }\n    ]\n})\nexport class PageNotificationModule {\n}\n","import { Component } from \"@angular/core\";\nimport { FormNotificationComponentSuperclass } from '@nuvem/angular-base';\n\n@Component({\n    selector: '[form-notification]',\n    templateUrl: 'form-notification.component.html'\n})\nexport class FormNotificationComponent extends FormNotificationComponentSuperclass {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormNotificationBaseModule, FormNotificationComponentSuperclass } from '@nuvem/angular-base';\nimport { FormNotificationComponent } from './form-notification.component';\n\n/**\n * Módulo para adicionar funcionalidade de notificação de erros de formulários.\n * @module\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        FormNotificationBaseModule\n    ],\n    declarations: [\n        FormNotificationComponent\n    ],\n    exports: [\n        FormNotificationComponent\n    ]\n})\nexport class FormNotificationModule { }\n","import { Component, OnInit, OnDestroy, Input, TemplateRef } from '@angular/core';\n\nimport { ErrorStackService, NamedErrorType } from '@nuvem/angular-base';\n\nimport { Subscription } from 'rxjs';\n\n/**\n * Class ErrorStackComponent\n * @class\n */\n@Component({\n    selector: 'basis-error-stack',\n    templateUrl: './error-stack.component.html'\n})\nexport class ErrorStackComponent implements OnInit, OnDestroy {\n\n    /**\n     * title property\n     * @type {string}\n     */\n    @Input() title: string = 'Error Stack';\n\n    /**\n     * template property\n     * @type {TemplateRef}\n     */\n    @Input() template: TemplateRef<any>;\n\n    /**\n     * errors property\n     * @type {NamedErrorType}\n     */\n    errors: NamedErrorType[] = [];\n\n    /**\n     * errorSubscription property\n     * @type {Subscription}\n     */\n    private errorSubscription: Subscription;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {ErrorStackService} errorStack\n     */\n    constructor(private errorStack: ErrorStackService) { }\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n        this.errorSubscription = this.errorStack.errors.subscribe((error: NamedErrorType) => {\n            this.errors = [error, ...this.errors];\n        });\n    }\n\n    /**\n     * ngOnDestroy method\n     * @returns void\n     */\n    ngOnDestroy() {\n        this.errorSubscription.unsubscribe();\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableModule } from 'primeng/table';\nimport { ButtonModule } from 'primeng/button';\nimport { TooltipModule } from 'primeng/tooltip';\n\nimport { ErrorStackComponent } from './error-stack.component';\nimport {\n    ErrorProvider,\n    ErrorStackService,\n    ErrorStackProviderService,\n    ClipboardModule\n} from '@nuvem/angular-base';\n\n/**\n * Class ErrorStackModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        TableModule,\n        ButtonModule,\n        TooltipModule,\n        ClipboardModule\n    ],\n    declarations: [\n        ErrorStackComponent\n    ],\n    providers: [\n        ErrorStackService,\n        {\n            provide: ErrorProvider,\n            useClass: ErrorStackProviderService,\n            multi: true\n        }\n    ],\n    exports: [\n        ErrorStackComponent\n    ]\n})\nexport class ErrorStackModule {\n}\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { CrudService } from \"./crud-service.service\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n    selector: 'nCrudForm',\n    templateUrl: './crud-form.component.html',\n})\nexport class CrudFormComponent implements OnInit {\n\n    @Input() form: FormGroup;\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() disableSave = false;\n\n    action: string;\n\n    listRoute: string = \"../../list\";\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit(): void {\n        this.route.paramMap.subscribe((params) => {\n            this.action = params.get('action');\n\n            if (params.get('id')) {\n                this.route.data.subscribe((data) => {\n                    if (data.value) {\n                        this.form.patchValue(data.value);\n                    }\n                });\n            } else {\n                this.listRoute = \"../list\";\n            }\n            if (this.action === \"view\") {\n                this.form.disable();\n            } else if (this.form.disabled) {\n                this.form.enable();\n            }\n        });\n    }\n\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nexport const CRUD_SERVICE = new InjectionToken<CrudService<any, any>>(\"CRUD_SERVICE\");\n\nexport interface CrudService<I, E> {\n\n    uri: string;\n\n    save(entidade: E): Observable<E>;\n\n    edit(entidade: E): Observable<E>;\n\n    find(id: I): Observable<E>;\n\n    delete(id: I): Observable<E>;\n\n    findAll(entidade: E): Observable<E>;\n\n}\n","import {\n    Component, OnInit, Inject, Input, Output, EventEmitter, AfterContentInit,\n    ViewChild, ContentChildren, QueryList, ChangeDetectorRef\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { CrudService, CRUD_SERVICE } from \"./crud-service.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Column } from '../datatable/p-column.directive';\nimport { DatatableComponent } from '../datatable/datatable.component'\nimport { DatatableClickEvent } from '../datatable/datatable-click-event'\n\nimport { ConfirmationService } from 'primeng/api';\nimport { Url } from 'url';\n\n@Component({\n    selector: 'nCrudList',\n    templateUrl: './crud-list.component.html'\n})\nexport class CrudListComponent implements OnInit, AfterContentInit {\n\n    @Input() form: FormGroup;\n\n    @Input() action: string = \"findAll\";\n\n    @Input() findLabel: string = \"Pesquisar\";\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() url: string;\n\n    @Input() disableSave = false;\n\n    @Input() disableEdit = false;\n\n    @Input() disableView = false;\n\n    @Input() disableDelete = false;\n\n    @Input() datatableExtraParams: any;\n\n    @Output() find: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('datatable', { static: true }) datatable: DatatableComponent;\n\n    @ContentChildren(Column) columns: QueryList<Column>;\n\n    result: any[];\n\n    constructor(\n        @Inject(CRUD_SERVICE)\n        public crudService: CrudService<any, any>,\n        private confirmationService: ConfirmationService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) {  }\n\n    ngOnInit(): void {\n        if (this.service) {\n            this.crudService = this.service;\n        }\n        if (!this.url) {\n            this.url = this.crudService.uri\n        }\n    }\n\n    datatableClick(event: DatatableClickEvent) {\n        if (event.selection) {\n            switch (event.button) {\n                case \"edit\":\n                case \"view\":\n                    this.router.navigate([`../${event.button}`, event.selection.id], { relativeTo: this.route });\n                    break;\n                case \"delete\":\n                    this.confirmationService.confirm({\n                        message: 'Você tem certeza que deseja excluir o registro?',\n                        accept: () => this.crudService.delete(event.selection.id)\n                            .subscribe(() => this.datatable.filter())\n                    });\n                    break;\n            }\n        }\n    }\n\n    findAll(event: any) {\n        if (this.find.observers.length) {\n            this.find.emit(this.form.value);\n        } else {\n            this.datatable.filterParams = {};\n            Object.keys(this.form.value).forEach(element => {\n                let value = this.form.value[element];\n                if (value) {\n                    this.datatable.filterParams[element] =\n                        value instanceof Date ? JSON.stringify(value).replace(/\"/g, \"\") : value;\n                }\n            });\n            this.datatable.filter();\n        }\n    }\n\n    ngAfterContentInit() {\n        const datatableNgAfterContentInit = this.datatable.pDatatableComponent.ngAfterContentInit;\n        this.datatable.pDatatableComponent.ngAfterContentInit = () => {\n            this.datatable.pDatatableComponent.columns = this.columns.toArray();\n            datatableNgAfterContentInit.call(this.datatable.pDatatableComponent);\n        };\n    }\n\n    ngAfterViewInit() {\n        for (let i in this.datatableExtraParams) {\n            this.datatable[i] = this.datatableExtraParams[i];\n        }\n    }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { CrudService, CRUD_SERVICE } from \"./crud-service.service\";\n\n@Injectable()\nexport class CrudResolveGuard implements Resolve<any> {\n\n  constructor(@Inject(CRUD_SERVICE) private crudService: CrudService<any, any>) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.crudService.find(route.paramMap.get('id'));\n  }\n\n}\n","import { Route } from '@angular/router';\n\nimport { CrudResolveGuard } from './crud-resolve.guard';\n\nexport function crudRouteBuilder(route: string, parent: any, list: any, form: any): Route {\n    return   {\n        path: route,\n        component: parent,\n        data: { breadcrumb: route },\n        children: [\n            {\n                path: 'list',\n                component: list,\n                data: { breadcrumb: 'list' },\n            },\n            {\n                path: ':action',\n                component: form,\n                data: { breadcrumb: ':action' },\n            },\n            {\n                path: ':action/:id',\n                component: form,\n                resolve: {\n                    value: CrudResolveGuard\n                },\n                data: { breadcrumb: ':action' },\n            }\n        ]\n    }\n\n\n}\n","import { CrudService } from \"./crud-service.service\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\n\nexport class CrudServiceNuvem<I, E> implements CrudService<I, E> {\n\n    constructor(public uri: string, protected http: HttpClient) {\n    }\n\n    save(entity: E): Observable<E> {\n        return this.http.post<E>(this.uri, entity);\n    }\n\n    edit(entity: E): Observable<E> {\n        return this.http.put<E>(this.uri, entity);\n    }\n\n    find(id: I): Observable<E> {\n        return this.http.get<E>(`${this.uri}/${id}`);\n    }\n\n    delete(id: I): Observable<E> {\n        return this.http.delete<E>(`${this.uri}/${id}`);\n    }\n\n    findAll(entity: E): Observable<E> {\n        let params = new HttpParams();\n\n        for (let field in entity) {\n            params = params.append(field, <any> entity[field]);\n        }\n\n        return this.http.get<E>(`${this.uri}`, { params: params });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS, HttpResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PageNotificationService } from '../page-notification/page-notification.service';\n\nenum STATUS { OK=200, CREATED=201  }\n\n@Injectable({ providedIn: 'root' })\nexport class SuccessMessageHandlerInterceptor implements HttpInterceptor {\n\n  constructor(private notification: PageNotificationService) {\n\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n        tap((event) => {\n          if (event instanceof HttpResponse) {\n            if (event.headers.has(\"X-nuvem-alert\")) {\n              this.notification.addSuccessMessage(event.headers.get(\"X-nuvem-alert\"));\n            } else if ((event.status === STATUS.OK || event.status === STATUS.CREATED) && req.method != \"GET\") {\n              this.notification.addSuccessMessage(\"Operação realizada com sucesso!\");\n            }\n          }\n        })\n    );\n  }\n\n}\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: SuccessMessageHandlerInterceptor, multi: true },\n];\n","import { Injector, Input, OnInit, ViewChild, AfterViewInit, ElementRef, Output, EventEmitter, Directive } from \"@angular/core\";\nimport { WrappedFormControlSuperclass } from \"@nuvem/angular-base\";\nimport { ControlContainer } from \"@angular/forms\";\n\n@Directive({\n    selector: \"[nField]\"\n})\nexport class FieldComponent<OuterType, InnerType = OuterType>\n    extends WrappedFormControlSuperclass<OuterType, InnerType>\n    implements OnInit, AfterViewInit {\n\n    @Input() form: string;\n\n    @Input() formControlName: string;\n\n    @Input() extraParams: any;\n\n    @Input() required: boolean;\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() onSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild(\"input\", { static: false }) input: any;\n\n    private _name: string;\n\n    private _label: string;\n\n    get name(): string {\n        return this._name ? this._name : this.formControlName;\n    }\n\n    @Input()\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get label(): string {\n        return this.required ? `${this._label}*` : this._label;\n    }\n\n    @Input()\n    set label(value: string) {\n        this._label = value;\n    }\n\n    constructor(\n        private controlContainer: ControlContainer,\n        private injector: Injector) {\n        super(injector);\n    }\n\n    ngOnInit() {\n        this.setValidators();\n        this.setRequired();\n    }\n\n    setRequired() {\n        if (this.required) {\n            if (this.input instanceof ElementRef) {\n                this.input.nativeElement.required = true;\n            } else {\n                this.input.required = true;\n            }\n        }\n    }\n\n    setElementRefAttr(attr: string, value: any) {\n        if (value && this.input instanceof ElementRef) {\n            this.input.nativeElement[attr] = value;\n        }\n    }\n\n    setFormControlValidators() {\n        if (this.controlContainer && this.formControlName) {\n            let validator = this.controlContainer.control.get(this.formControlName).validator;\n            if (validator) {\n                this.formControl.setValidators(validator);\n            }\n        }\n    }\n\n\n    setValidators() {\n        if (this.controlContainer && this.formControlName) {\n            let validator = this.controlContainer.control.get(this.formControlName).validator;\n            if (validator) {\n                this.formControl.setValidators(validator);\n            }\n        }\n    }\n\n    ngAfterViewInit() {\n        for (let i in this.extraParams) {\n            this.input[i] = this.extraParams[i];\n        }\n    }\n\n    onBlurEvent(event) {\n        this.onBlur.emit(event);\n    }\n\n    onSelectEvent(event) {\n        this.onSelect.emit(event);\n    }\n\n    onFocusEvent(event) {\n        this.onFocus.emit(event);\n    }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\n\n@Component({\n    selector: \"[nInputText]\",\n    templateUrl: \"./input-text.component.html\",\n    providers: [ provideValueAccessor(InputTextComponent) ],\n})\nexport class InputTextComponent extends FieldComponent<string> implements OnInit {\n\n    @Input() minLength: number;\n\n    @Input() maxLength: number;\n\n    @Input() min: number;\n\n    @Input() max: number;\n\n    @Input() pattern: string | RegExp;\n\n    @Input() type: string = \"text\";\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.setElementRefAttr(\"min\", this.min);\n        this.setElementRefAttr(\"max\", this.max);\n        this.setElementRefAttr(\"minLength\", this.minLength);\n        this.setElementRefAttr(\"maxLength\", this.maxLength);\n        this.setElementRefAttr(\"pattern\", this.pattern);\n    }\n\n}\n","import { LocaleSettings } from 'primeng/calendar';\n\nexport const CALENDAR_LOCALE: LocaleSettings = {\n    firstDayOfWeek: 0,\n    dayNames: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n    dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sab\"],\n    dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\n    monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\n    today: 'Hoje',\n    clear: 'Limpar',\n    dateFormat: 'dd/mm/yy',\n    weekHeader: 'Semana'\n};\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CALENDAR_LOCALE } from './calendar-locale';\n@Component({\n    selector: \"[nCalendar]\",\n    templateUrl: \"./calendar.component.html\",\n    providers: [ provideValueAccessor(CalendarComponent) ],\n})\nexport class CalendarComponent extends FieldComponent<string, Date> {\n\n    @Input()\n    maxDate: Date = null;\n\n    @Input()\n    yearRange: string = null;\n\n    @Input()\n    monthNavigator = false;\n\n    @Input()\n    yearNavigator = false;\n\n    @Input()\n    locale = CALENDAR_LOCALE;\n\n    protected outerToInner(value: string): Date {\n        return value ? new Date(value) : null;\n    }\n\n}\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\"\nimport { FieldComponent } from \"../field.component\";\n\n@Component({\n    selector: \"[nTextArea]\",\n    templateUrl: \"./text-area.component.html\",\n    providers: [ provideValueAccessor(TextAreaComponent) ],\n})\nexport class TextAreaComponent extends FieldComponent<string> {\n\n    @Input() autoResize: boolean = false;\n\n    @Input() rows: string;\n\n    @Input() cols: string;\n\n    @Input() minLength: number;\n\n    @Input() maxLength: number;\n\n}\n","import { Component, Input, AfterViewInit, Output, EventEmitter, OnInit } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CrudService } from \"../../crud-service.service\";\n\n@Component({\n    selector: \"[nDropdown]\",\n    templateUrl: \"./dropdown.component.html\",\n    providers: [provideValueAccessor(DropdownComponent)],\n})\nexport class DropdownComponent extends FieldComponent<any> implements AfterViewInit, OnInit {\n\n    @Input() optionLabel: string;\n\n    @Input() virtualScroll = false;\n\n    @Input() filter = false;\n\n    @Input() itemSize = 30;\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() options: any[] = [];\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter<any>();\n\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        if (this.service) {\n            this.service.findAll(null).subscribe(data => {\n                this.options = data;\n            });\n        }\n    }\n\n    onChangeEvent(event): void {\n        this.onChange.emit(event);\n    }\n\n    protected outerToInner(value: any): any {\n        if (value && value.id) {\n            this.service.find(value.id).subscribe((data) => {\n                this.formControl.setValue(data);\n            });\n        }\n        return value;\n    }\n\n}\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\n\n@Component({\n    selector: \"[nInputMask]\",\n    templateUrl: \"./input-mask.component.html\",\n    providers: [ provideValueAccessor(InputMaskComponent) ],\n})\nexport class InputMaskComponent extends FieldComponent<string> {\n\n    @Input()\n    mask: string;\n\n    @Input()\n    placeholder: string;\n\n}\n","import { Component, Injector } from \"@angular/core\";\n\nimport { Subscription } from \"rxjs\";\n\nimport { provideValueAccessor, FormNotificationService, FormNotification, FieldFormNotification } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { ControlContainer } from '@angular/forms';\n\n@Component({\n    selector: \"[nCheck]\",\n    templateUrl: \"./check.component.html\",\n    providers: [ provideValueAccessor(CheckComponent) ],\n})\nexport class CheckComponent extends FieldComponent<string> {\n\n    private subscription: Subscription;\n\n    message: String;\n\n    /**\n     * Método construtor responsável por carregar o serviço de validação\n     * @param formNotificationService\n     */\n    constructor(\n        controlContainer: ControlContainer,\n        injector: Injector,\n        protected formNotificationService: FormNotificationService) {\n        super(controlContainer, injector);\n    }\n\n    /**\n     * Método Inicial para subscrição no endpoint responsável por validar o formulário\n     */\n    ngOnInit(): void {\n        super.ngOnInit()\n        this.subscription = this.formNotificationService\n            .notifications(this.form, this.name)\n            .subscribe((notification: FormNotification) => {\n                if (notification instanceof FieldFormNotification) {\n                    this.message = notification.message;\n                } else {\n                    this.message = null;\n                }\n            });\n    }\n\n    /**\n     * Método responsável por realizar a saida das subscrições do endpont de validação\n     */\n    ngOnDestroy(): void {\n        super.ngOnDestroy()\n        this.subscription.unsubscribe();\n    }\n\n\n}\n","import { Component, OnInit, Inject, Input, Output, EventEmitter } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { CrudService, CRUD_SERVICE } from \"./crud-service.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n    selector: 'nForm',\n    templateUrl: './form.component.html'\n})\nexport class FormComponent implements OnInit {\n\n    @Input() form: FormGroup;\n\n    @Input() route: [];\n\n    @Input() action: string = \"save\";\n\n    @Input() saveLabel: string = \"Salvar\";\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() disableSave: boolean = false;\n\n    @Output() save: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() reset: EventEmitter<any> = new EventEmitter<any>();\n    constructor(\n        @Inject(CRUD_SERVICE)\n        private crudService: CrudService<any, any>,\n        private activatedRoute: ActivatedRoute,\n        private router: Router\n    ) {}\n\n    ngOnInit(): void {\n        if (this.service) {\n            this.crudService = this.service;\n        }\n    }\n\n    submit() {\n        if (this.save.observers.length) {\n            this.save.emit(this.form.value);\n        } else {\n            this.crudService[this.action](this.form.value)\n            .subscribe(() => {\n                if (this.route) {\n                    this.router.navigate(this.route, { relativeTo: this.activatedRoute });\n                } else if (this.reset.observers.length) {\n                    this.reset.emit(this.form);\n                } else {\n                    this.form.reset();\n                }\n            });\n        }\n    }\n\n}\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n    selector: 'nValidationMessage',\n    templateUrl: './validation-message.component.html'\n})\nexport class ValidationMessageComponent {\n\n    @Input() control: any;\n\n}\n","import { Component, Input, TemplateRef } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CrudService } from \"../../crud-service.service\";\n\n@Component({\n    selector: \"[nAutoComplete]\",\n    templateUrl: \"./auto-complete.component.html\",\n    providers: [provideValueAccessor(AutoCompleteComponent)],\n})\nexport class AutoCompleteComponent extends FieldComponent<any> {\n\n    @Input() field: string;\n\n    @Input() virtualScroll: boolean = false;\n\n    @Input() itemSize: number = 30;\n\n    @Input() service: CrudService<any, any>;\n\n    results: any[];\n\n    selectItem(option) {\n        this.formControl.setValue(option);\n    }\n\n    findAll(event: any) {\n        let query = {};\n        query[this.field] = event.query;\n        this.service.findAll(query).subscribe(data => {\n            this.results = data;\n        });\n    }\n\n    protected outerToInner(value: any): any {\n        if (value && value.id && !value[this.field]) {\n            this.service.find(value.id).subscribe((data) => {\n                this.formControl.setValue(data);\n            });\n        }\n        return value;\n    }\n\n}\n","import { Component, ElementRef, Renderer2, ChangeDetectorRef, IterableDiffers, Input, forwardRef } from '@angular/core';\nimport { AutoComplete as AutoCompletePrimeng } from 'primeng/autocomplete';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutoCompleteCustomComponent),\n    multi: true\n  };\n\n@Component({\n    selector: 'p-autoCompleteCustom',\n    templateUrl: './auto-complete-custom.component.html',\n    styleUrls: ['./auto-complete-custom.component.scss'],\n    providers: [AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class AutoCompleteCustomComponent extends AutoCompletePrimeng {\n\n    @Input() virtualScroll: boolean;\n\n    @Input() itemSize: number;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef, public differs: IterableDiffers) {\n        super(el, renderer, cd, differs)\n    }\n\n}\n","import { Component, Input, Output, TemplateRef, EventEmitter } from \"@angular/core\";\n\n@Component({\n    selector: 'p-autoCompleteItem',\n    template: `\n        <li role=\"option\" [ngClass]=\"{'p-autocomplete-list-item p-corner-all':true,'p-highlight':(highlightOption==option)}\"\n            (mouseenter)=\"highlightOptionChange.emit(option)\" (mouseleave)=\"highlightOptionChange.emit(null)\"\n            [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem($event)\"\n            [ngStyle]=\"{'height': itemSize + 'px', 'display': 'table', 'width': '100%'}\">\n            <span *ngIf=\"!template\">{{resolvedFieldData}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option, index: index}\"></ng-container>\n        </li>\n    `\n})\nexport class AutoCompleteItem {\n\n    @Input() option: any;\n\n    @Input() resolvedFieldData: any;\n\n    @Input() highlightOption: any;\n\n    @Output() highlightOptionChange = new EventEmitter<any>();\n\n    @Input() index: number;\n\n    @Input() itemSize: number;\n\n    @Input() template: TemplateRef<any>;\n\n    @Output() onClick = new EventEmitter();\n\n    selectItem(event: Event): void {\n        this.onClick.emit({\n            originalEvent: event,\n            option: this.option\n        });\n    }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CrudService } from \"../../crud-service.service\";\nimport { forkJoin } from 'rxjs';\n\n@Component({\n    selector: \"[nAutoCompleteMultiple]\",\n    templateUrl: \"./auto-complete-multiple.component.html\",\n    providers: [provideValueAccessor(AutoCompleteMultipleComponent)],\n})\nexport class AutoCompleteMultipleComponent extends FieldComponent<any[]> {\n\n    @Input() field: string;\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() virtualScroll: boolean = false;\n\n    @Input() itemSize: number = 30;\n\n    results: any[];\n\n    findAll(event: any) {\n        let query = {};\n        query[this.field] = event.query;\n        this.service.findAll(query).subscribe(data => {\n            this.results = data;\n        });\n    }\n\n    protected outerToInner(value: any[]): any[] {\n        if (value && value.length > 0 && !value[0][this.field]) {\n            let obs: any[] = [];\n            value.forEach(element => {\n                if (element && element.id) {\n                    obs.push(this.service.find(element.id));\n                }\n            });\n            forkJoin(obs).subscribe((data) => {\n                this.formControl.setValue(data);\n            });\n        }\n        return value;\n    }\n\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n    name: \"check\"\n})\nexport class CheckPipe implements PipeTransform {\n\n    transform(value: any, ...args: any[]): any {\n        return value ? \"Sim\" : \"Não\";\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { httpInterceptorProviders } from './success-message-handler.interceptor';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextComponent } from './components/input-text/input-text.component';\n\nimport { CalendarModule } from 'primeng/calendar';\nimport { CalendarComponent } from './components/calendar/calendar.component';\n\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { TextAreaComponent } from './components/text-area/text-area.component';\n\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\n\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputMaskComponent } from './components/input-mask/input-mask.component';\n\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { CheckComponent } from './components/check/check.component';\n\nimport { FormNotificationModule } from '../form-notification/form-notification.module';\nimport { ButtonModule } from 'primeng/button';\nimport { FormComponent } from './form.component';\n\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\nimport { CrudListComponent } from './crud-list.component';\n\nimport { ValidationMessageComponent } from './components/validation-message/validation-message.component';\n\nimport { CrudFormComponent } from './crud-form.component';\n\nimport { FieldComponent } from './components/field.component';\n\nimport { DatatableModule } from '../datatable/datatable.module';\n\nimport { RouterModule } from '@angular/router';\n\nimport { AutoCompleteComponent } from './components/auto-complete/auto-complete.component';\nimport { AutoCompleteCustomComponent } from './components/auto-complete/auto-complete-custom.component';\nimport { AutoCompleteItem } from './components/auto-complete/auto-complete-item.component';\nimport { AutoCompleteMultipleComponent } from './components/auto-complete-multiple/auto-complete-multiple.component';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { CheckPipe } from './components/check/check.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FormNotificationModule,\n        InputTextModule,\n        InputTextareaModule,\n        CalendarModule,\n        AutoCompleteModule,\n        ButtonModule,\n        DatatableModule,\n        HttpClientModule,\n        RouterModule,\n        ConfirmDialogModule,\n        DropdownModule,\n        ScrollingModule,\n        InputMaskModule,\n        RadioButtonModule,\n    ],\n    declarations: [\n        CalendarComponent,\n        InputTextComponent,\n        TextAreaComponent,\n        FormComponent,\n        AutoCompleteComponent,\n        AutoCompleteMultipleComponent,\n        CrudListComponent,\n        CrudFormComponent,\n        FieldComponent,\n        ValidationMessageComponent,\n        DropdownComponent,\n        AutoCompleteItem,\n        AutoCompleteCustomComponent,\n        CheckComponent,\n        InputMaskComponent,\n        CheckPipe,\n    ],\n    exports: [\n        CalendarComponent,\n        InputTextComponent,\n        TextAreaComponent,\n        FormComponent,\n        AutoCompleteComponent,\n        AutoCompleteMultipleComponent,\n        CrudListComponent,\n        CrudFormComponent,\n        FieldComponent,\n        ValidationMessageComponent,\n        DropdownComponent,\n        CheckComponent,\n        InputMaskComponent,\n        CheckPipe,\n    ],\n    providers: [\n        httpInterceptorProviders,\n        ConfirmationService,\n    ]\n})\nexport class CrudModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuItem } from 'primeng/api';\n\n@Injectable()\nexport class BreadcrumbService {\n\n    private readonly itemsSource = new Subject<MenuItem[]>();\n\n    itemsHandler = this.itemsSource.asObservable();\n\n    setItems(items: MenuItem[]) {\n        this.itemsSource.next(items);\n    }\n\n    reset() {\n        this.itemsSource.next([]);\n    }\n}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MessageService, Message, MenuItem } from 'primeng/api';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { AccessbilityService } from '@nuvem/angular-base';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n    selector: 'breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit, AfterViewInit {\n\n    subscription: Subscription;\n\n    items: MenuItem[];\n\n    highContrastEnabled = false;\n\n    home: MenuItem;\n\n    constructor(\n        private readonly router: Router,\n        private readonly activatedRoute: ActivatedRoute,\n        private readonly breadcrumbService: BreadcrumbService,\n        private readonly messages: MessageService,\n        private readonly accessibilityService: AccessbilityService\n    ) {\n        this.subscription = breadcrumbService.itemsHandler.subscribe(response => {\n            this.items = response;\n        });\n\n        this.home = { icon: 'pi pi-home', routerLink: '/' };\n    }\n\n    ngOnInit() {\n        this.router.events.pipe(filter(\n            (event: any) => event instanceof NavigationEnd),\n            distinctUntilChanged(),\n        ).subscribe((event) => {\n            this.items = this.buildBreadCrumb(this.activatedRoute.root);\n        })\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    enableHighContrast() {\n        this.highContrastEnabled = true;\n        this.accessibilityService.enableHighContrast();\n    }\n\n    disableHighContrast() {\n        this.highContrastEnabled = false;\n        this.accessibilityService.disableHighContrast();\n    }\n\n    increaseFontSize() {\n        this.accessibilityService.increaseFontSize();\n    }\n\n    decreaseFontSize() {\n        this.accessibilityService.decreaseFontSize();\n    }\n\n    ngAfterViewInit() {\n        this.messages.messageObserver.subscribe(\n            (msg: Message) => {\n                this.accessibilityService.addAccessibilityMessages({ severity: msg.severity });\n            }\n        );\n        this.accessibilityService.addAccessibilityIcons();\n    }\n\n    buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: MenuItem[] = []): MenuItem[] {\n\n        let label = (route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '').trim();\n        let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n        const lastRoutePart = path.split('/').pop();\n        const isDynamicRoute = lastRoutePart.startsWith(':');\n\n        if (isDynamicRoute && !!route.snapshot) {\n            for (let key in route.snapshot.params) {\n                path = path.replace(`:${key}`, route.snapshot.params[key]);\n            }\n\n            label = (`${(label != ':action')? label : ''} ${Object.values(route.snapshot.params).join(' ')}`).trim();\n        }\n\n        const nextUrl = path ? `${url}/${path}` : url;\n\n        const menuItem: MenuItem = {\n            \"label\": label.charAt(0).toUpperCase() + label.slice(1),\n            \"routerLink\": nextUrl\n        }\n\n        const newBreadcrumbs = menuItem.label ? [...breadcrumbs, menuItem] : [...breadcrumbs];\n\n        if (route.firstChild) {\n            return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n        }\n\n        return newBreadcrumbs;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbModule as PrimengBreadcrumbModule } from 'primeng/breadcrumb';\nimport { ButtonModule } from 'primeng/button';\n\n\n@NgModule({\n    declarations: [BreadcrumbComponent],\n    imports: [\n        CommonModule,\n        RouterModule,\n        PrimengBreadcrumbModule,\n        ButtonModule\n    ],\n    exports: [\n        BreadcrumbComponent\n    ],\n    providers: [\n        BreadcrumbService\n    ]\n})\nexport class BreadcrumbModule { }\n","import { Injectable } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { Subject } from 'rxjs';\n\nexport enum MenuOrientation {\n    STATIC,\n    OVERLAY,\n    SLIM,\n    HORIZONTAL\n}\n\n/**\n * Class MenuService\n * @class\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class MenusService {\n\n    private menuSource = new Subject<string>();\n\n    private resetSource = new Subject();\n\n    menuSource$ = this.menuSource.asObservable();\n    \n    resetSource$ = this.resetSource.asObservable();\n\n    layoutMode: MenuOrientation = MenuOrientation.STATIC;\n\n    menuHoverActive: boolean;\n\n    itens: MenuItem[] = [];\n\n    resetMenu: boolean;\n\n    isMobile: boolean;\n\n    isTablet: boolean;\n\n    isDesktop: boolean;\n\n    overlayMenuActive: boolean;\n\n    staticMenuMobileActive: boolean;\n\n    staticMenuDesktopInactive: boolean;\n\n    isOverlay() {\n        return this.layoutMode === MenuOrientation.OVERLAY;\n    }\n\n    isHorizontal() {\n        return this.layoutMode === MenuOrientation.HORIZONTAL;\n    }\n\n    isSlim() {\n        return this.layoutMode === MenuOrientation.SLIM;\n    }\n\n    isStatic() {\n        return this.layoutMode === MenuOrientation.STATIC;\n    }\n\n    changeToStaticMenu() {\n        this.layoutMode = MenuOrientation.STATIC;\n    }\n\n    changeToOverlayMenu() {\n        this.layoutMode = MenuOrientation.OVERLAY;\n    }\n\n    changeToHorizontalMenu() {\n        this.layoutMode = MenuOrientation.HORIZONTAL;\n    }\n\n    changeToSlimMenu() {\n        this.layoutMode = MenuOrientation.SLIM;\n    }\n\n    onMenuStateChange(key: string) {\n        this.menuSource.next(key);\n    }\n\n    reset() {\n        this.resetSource.next();\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { MenusService } from './menu.service';\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n})\nexport class MenuComponent {\n\n    constructor(public menuService: MenusService) {}\n\n}\n","import { Component, Input } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { MenuItem } from 'primeng/api';\nimport { MenusService } from './menu.service';\nimport { Subscription } from 'rxjs';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n    selector: '[submenu]',\n    templateUrl: './submenu.component.html',\n    host: {\n        '[class.layout-root-menuitem]': 'root || active',\n        '[class.active-menuitem]': '(active)'\n    },\n    animations: [\n        trigger('children', [\n            state('void', style({\n                height: '0px',\n                padding: '0px'\n            })),\n            state('hiddenAnimated', style({\n                height: '0px',\n                padding: '0px'\n            })),\n            state('visibleAnimated', style({\n                height: '*'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            state('hidden', style({\n                height: '0px',\n                padding: '0px'\n            })),\n            transition('visibleAnimated => hiddenAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n            transition('hiddenAnimated => visibleAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n            transition('void => visibleAnimated, visibleAnimated => void',\n                animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class SubMenuComponent {\n\n    @Input() item: any;\n\n    @Input() root: boolean;\n\n    @Input() visible: boolean;\n\n    @Input() parentKey: string;\n\n    @Input() index: number;\n\n    active = false;\n\n    _reset: boolean;\n\n    _parentActive: boolean;\n\n    activeIndex: number;\n\n    key: string;\n\n    menuSourceSubscription: Subscription;\n\n    menuResetSubscription: Subscription;\n\n    constructor(public menuService: MenusService, public router: Router) { \n\n        this.menuSourceSubscription = this.menuService.menuSource$.subscribe(key => {\n            // deactivate current active menu\n            if (this.active && this.key !== key && key.indexOf(this.key) !== 0) {\n                this.active = false;\n            }\n        });\n\n        this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n            this.active = false;\n        });\n\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(params => {\n                if (this.menuService.isHorizontal() || this.menuService.isSlim()) {\n                    this.active = false;\n                } else {\n                    if (this.item.routerLink) {\n                        this.updateActiveStateFromRoute();\n                    } else {\n                        this.active = false;\n                    }\n                }\n            });\n\n    }\n\n    updateActiveStateFromRoute() {\n        this.active = this.router.isActive(this.item.routerLink[0], this.item.items ? false : true);\n    }\n\n    /**\n     * Alterar o menu root entre aberto e fechado\n     */\n    private rootMenuToggle() {\n        if (this.root) {\n            this.menuService.menuHoverActive = !this.menuService.menuHoverActive;\n        }\n    }\n\n    /**\n     * Activa o menu por index e desativa o item ativo\n     * @param index\n     */\n    private activeMenuByIndex(index: number) {\n        this.activeIndex = (this.activeIndex === index) ? null : index;\n        return this.activeIndex;\n    }\n\n    /**\n     * Verifica se foi informado um comando para o item de menu e executa caso necessário\n     * @param item menu\n     */\n    private execCommand(event: Event, item: MenuItem) {\n        if (item.command) {\n            item.command({ 'originalEvent': event, 'item': item });\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Esconte o menu caso este não possua itens\n     * @param item menu\n     */\n    private hideMenu(item: MenuItem) {\n        if (!item.items) {\n            if (this.menuService.isHorizontal() || this.menuService.isSlim()) {\n                this.menuService.resetMenu = true;\n            } else {\n                this.menuService.resetMenu = false;\n            }\n\n            this.menuService.overlayMenuActive = false;\n            this.menuService.staticMenuMobileActive = false;\n            this.menuService.menuHoverActive = !this.menuService.menuHoverActive;\n\n            return true;\n        }\n\n        return false;\n    }\n\n    itemClick(event: Event) {\n        // avoid processing disabled items\n        if (this.item.disabled) {\n            event.preventDefault();\n            return true;\n        }\n\n        // navigate with hover in horizontal mode\n        if (this.root) {\n            this.menuService.menuHoverActive = !this.menuService.menuHoverActive;\n        }\n\n        // notify other items\n        this.menuService.onMenuStateChange(this.key);\n\n        // execute command\n        if (this.item.command) {\n            this.item.command({originalEvent: event, item: this.item});\n        }\n\n        // toggle active state\n        if (this.item.items) {\n            this.active = !this.active;\n        } else {\n            // activate item\n            this.active = true;\n\n            // reset horizontal and slim menu\n            if (this.menuService.isHorizontal() || this.menuService.isSlim()) {\n                this.menuService.reset();\n                this.menuService.menuHoverActive = false;\n            }\n\n            if (!this.menuService.isStatic()) {\n                this.active = false;\n            }\n        }\n\n        this.removeActiveInk(event);\n    }\n\n    onMouseEnter() {\n        // activate item on hover\n        if (this.root) {\n            this.active = true;\n        }\n    }\n\n    isActive(index: number): boolean {\n        return this.activeIndex === index;\n    }\n\n    @Input() get reset(): boolean {\n        return this._reset;\n    }\n\n    set reset(val: boolean) {\n        this._reset = val;\n\n        if (this._reset && (this.menuService.isHorizontal() || this.menuService.isSlim())) {\n            this.activeIndex = null;\n        }\n    }\n\n    @Input() get parentActive(): boolean {\n        return this._parentActive;\n    }\n\n    set parentActive(val: boolean) {\n        this._parentActive = val;\n\n        if (!this._parentActive) {\n            this.activeIndex = null;\n        }\n    }\n\n    removeActiveInk(event: Event) {\n        let currentTarget = (event.currentTarget as HTMLElement);\n        setTimeout(() => {\n            if (currentTarget) {\n                let activeInk = currentTarget.querySelector('.p-ink-active');\n                if (activeInk) {\n                    if (activeInk.classList)\n                        activeInk.classList.remove('p-ink-active');\n                    else\n                        activeInk.className = activeInk.className.replace(new RegExp('(^|\\\\b)' + 'p-ink-active'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n                }\n            }\n        }, 401);\n    }\n\n    ngOnDestroy() {\n        if (this.menuSourceSubscription) {\n            this.menuSourceSubscription.unsubscribe();\n        }\n\n        if (this.menuResetSubscription) {\n            this.menuResetSubscription.unsubscribe();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuComponent } from './menu.component';\nimport { SubMenuComponent } from './submenu.component';\nimport { RouterModule } from '@angular/router';\nimport { MenusService } from './menu.service';\nimport { TooltipModule } from 'primeng/tooltip';\n\n@NgModule({\n    declarations: [\n        MenuComponent,\n        SubMenuComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        TooltipModule\n    ],\n    exports: [\n        MenuComponent,\n        SubMenuComponent\n    ],\n    providers: [\n        MenusService\n    ]\n})\nexport class MenuModule { }\n","/*\n * Public API Surface of primeng-components\n */\nexport * from './lib/datatable/datatable.module';\nexport * from './lib/datatable/dataprovider-factory';\nexport * from './lib/datatable/dataprovider';\nexport * from './lib/datatable/server-dataprovider';\nexport * from './lib/datatable/memory-dataprovider';\nexport * from './lib/datatable/datatable-button.component';\nexport * from './lib/datatable/datatable.component';\nexport * from './lib/datatable/datatable-click-event';\nexport * from './lib/datatable/datatable-pagination-parameters';\nexport * from './lib/datatable/datatable.service';\nexport * from './lib/datatable/filter-column/filter-column.module';\nexport * from './lib/datatable/filter-column/filter-column.component';\nexport * from './lib/datatable/p-column.directive';\nexport * from './lib/datatable/show-column/show-column.module';\nexport * from './lib/datatable/show-column/show-column.component';\n\nexport * from './lib/block-ui/block-ui.component';\nexport * from './lib/block-ui/block-ui.module';\n\nexport * from './lib/extra-button/datatable-splitbutton.component';\nexport * from './lib/extra-button/datatable-splitbutton.module';\n\nexport * from './lib/page-notification/page-notification.module';\nexport * from './lib/page-notification/page-notification.service';\nexport * from './lib/page-notification/page-notification.component';\n\nexport * from './lib/form-notification/form-notification.component';\nexport * from './lib/form-notification/form-notification.module';\n\nexport * from './lib/error-stack/error-stack.module';\nexport * from './lib/error-stack/error-stack.component';\n\nexport * from './lib/crud/crud-form.component';\nexport * from './lib/crud/crud-list.component';\nexport * from './lib/crud/crud-resolve.guard';\nexport * from './lib/crud/crud-route-builder';\nexport * from './lib/crud/crud-service-nuvem.service';\nexport * from './lib/crud/crud-service.service';\nexport * from './lib/crud/crud.module';\nexport * from './lib/crud/success-message-handler.interceptor';\nexport * from './lib/crud/form.component';\n\nexport * from './lib/crud/components/auto-complete/auto-complete.component';\nexport * from './lib/crud/components/auto-complete-multiple/auto-complete-multiple.component';\nexport * from './lib/crud/components/calendar/calendar.component';\nexport * from './lib/crud/components/dropdown/dropdown.component';\nexport * from './lib/crud/components/input-text/input-text.component';\nexport * from './lib/crud/components/text-area/text-area.component';\nexport * from './lib/crud/components/validation-message/validation-message.component';\nexport * from './lib/crud/components/field.component';\nexport * from './lib/crud/components/check/check.component';\nexport * from './lib/crud/components/check/check.pipe';\nexport * from './lib/crud/components/input-mask/input-mask.component';\n\nexport * from './lib/crud/components/calendar/calendar-locale';\n\nexport * from './lib/breadcrumb/breadcrumb.module';\nexport * from './lib/breadcrumb/breadcrumb.component';\nexport * from './lib/breadcrumb/breadcrumb.service';\n\nexport * from './lib/menu/menu.module';\nexport * from './lib/menu/menu.component';\nexport * from './lib/menu/menu.service';\nexport * from './lib/menu/submenu.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AUTOCOMPLETE_VALUE_ACCESSOR as ɵc,AutoCompleteCustomComponent as ɵd} from './lib/crud/components/auto-complete/auto-complete-custom.component';\nexport {AutoCompleteItem as ɵb} from './lib/crud/components/auto-complete/auto-complete-item.component';\nexport {ActionButtonComponent as ɵa} from './lib/datatable/action-button/action-button.component';"]}