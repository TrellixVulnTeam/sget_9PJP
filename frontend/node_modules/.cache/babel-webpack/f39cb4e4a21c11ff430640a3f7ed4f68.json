{"ast":null,"code":"import _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DomHandler } from 'primeng/dom';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nvar _c1 = function _c1(a1) {\n  return {\n    value: \"open\",\n    params: a1\n  };\n};\n\nfunction ScrollTop_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 1);\n    ɵngcc0.ɵɵlistener(\"@animation.start\", function ScrollTop_button_0_Template_button_animation_animation_start_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.onEnter();\n    })(\"click\", function ScrollTop_button_0_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onClick();\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r0.styleClass);\n    ɵngcc0.ɵɵproperty(\"@animation\", ɵngcc0.ɵɵpureFunction1(11, _c1, ɵngcc0.ɵɵpureFunction2(8, _c0, ctx_r0.showTransitionOptions, ctx_r0.hideTransitionOptions)))(\"ngClass\", ctx_r0.containerClass())(\"ngStyle\", ctx_r0.style);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(ctx_r0.icon);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"p-scrolltop-icon\");\n  }\n}\n\nvar ScrollTop = /*#__PURE__*/function () {\n  function ScrollTop(el, cd) {\n    _classCallCheck(this, ScrollTop);\n\n    this.el = el;\n    this.cd = cd;\n    this.target = \"window\";\n    this.threshold = 400;\n    this.icon = \"pi pi-chevron-up\";\n    this.behavior = \"smooth\";\n    this.showTransitionOptions = '.15s';\n    this.hideTransitionOptions = '.15s';\n    this.visible = false;\n  }\n\n  _createClass(ScrollTop, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.target === 'window') this.bindDocumentScrollListener();else if (this.target === 'parent') this.bindParentScrollListener();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      var scrollElement = this.target === 'window' ? window : this.el.nativeElement.parentElement;\n      scrollElement.scroll({\n        top: 0,\n        behavior: this.behavior\n      });\n    }\n  }, {\n    key: \"onEnter\",\n    value: function onEnter() {\n      this.el.nativeElement.children[0].style.zIndex = DomHandler.generateZIndex();\n    }\n  }, {\n    key: \"checkVisibility\",\n    value: function checkVisibility(scrollY) {\n      if (scrollY > this.threshold) this.visible = true;else this.visible = false;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"bindParentScrollListener\",\n    value: function bindParentScrollListener() {\n      var _this = this;\n\n      this.scrollListener = function () {\n        _this.checkVisibility(_this.el.nativeElement.parentElement.scrollTop);\n      };\n\n      this.el.nativeElement.parentElement.addEventListener('scroll', this.scrollListener);\n    }\n  }, {\n    key: \"bindDocumentScrollListener\",\n    value: function bindDocumentScrollListener() {\n      var _this2 = this;\n\n      this.scrollListener = function () {\n        _this2.checkVisibility(DomHandler.getWindowScrollTop());\n      };\n\n      window.addEventListener('scroll', this.scrollListener);\n    }\n  }, {\n    key: \"unbindParentScrollListener\",\n    value: function unbindParentScrollListener() {\n      if (this.scrollListener) {\n        this.el.nativeElement.parentElement.removeEventListener('scroll', this.scrollListener);\n        this.scrollListener = null;\n      }\n    }\n  }, {\n    key: \"unbindDocumentScrollListener\",\n    value: function unbindDocumentScrollListener() {\n      if (this.scrollListener) {\n        window.removeEventListener('scroll', this.scrollListener);\n        this.scrollListener = null;\n      }\n    }\n  }, {\n    key: \"containerClass\",\n    value: function containerClass() {\n      return {\n        'p-scrolltop p-link p-component': true,\n        'p-scrolltop-sticky': this.target !== 'window'\n      };\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.target === 'window') this.unbindDocumentScrollListener();else if (this.target === 'parent') this.unbindParentScrollListener();\n    }\n  }]);\n\n  return ScrollTop;\n}();\n\nScrollTop.ɵfac = function ScrollTop_Factory(t) {\n  return new (t || ScrollTop)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nScrollTop.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ScrollTop,\n  selectors: [[\"p-scrollTop\"]],\n  inputs: {\n    target: \"target\",\n    threshold: \"threshold\",\n    icon: \"icon\",\n    behavior: \"behavior\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    styleClass: \"styleClass\",\n    style: \"style\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"type\", \"button\", 3, \"ngClass\", \"class\", \"ngStyle\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"ngClass\", \"ngStyle\", \"click\"], [3, \"ngClass\"]],\n  template: function ScrollTop_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, ScrollTop_button_0_Template, 2, 13, \"button\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.visible);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgStyle],\n  styles: [\".p-scrolltop{align-items:center;bottom:20px;display:flex;justify-content:center;position:fixed;right:20px}.p-scrolltop-sticky{position:sticky}.p-scrolltop-sticky.p-link{margin-left:auto}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animation', [state('void', style({\n      opacity: 0\n    })), state('open', style({\n      opacity: 1\n    })), transition('void => open', animate('{{showTransitionParams}}')), transition('open => void', animate('{{hideTransitionParams}}'))])]\n  },\n  changeDetection: 0\n});\n\nScrollTop.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nScrollTop.propDecorators = {\n  styleClass: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  target: [{\n    type: Input\n  }],\n  threshold: [{\n    type: Input\n  }],\n  icon: [{\n    type: Input\n  }],\n  behavior: [{\n    type: Input\n  }],\n  showTransitionOptions: [{\n    type: Input\n  }],\n  hideTransitionOptions: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollTop, [{\n    type: Component,\n    args: [{\n      selector: 'p-scrollTop',\n      template: \"\\n        <button  *ngIf=\\\"visible\\\" [@animation]=\\\"{value: 'open', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\" (@animation.start)=\\\"onEnter()\\\"\\n            [ngClass]=\\\"containerClass()\\\" (click)=\\\"onClick()\\\" [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\" type=\\\"button\\\">\\n            <span [class]=\\\"icon\\\" [ngClass]=\\\"'p-scrolltop-icon'\\\"></span>\\n        </button>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animation', [state('void', style({\n        opacity: 0\n      })), state('open', style({\n        opacity: 1\n      })), transition('void => open', animate('{{showTransitionParams}}')), transition('open => void', animate('{{hideTransitionParams}}'))])],\n      styles: [\".p-scrolltop{align-items:center;bottom:20px;display:flex;justify-content:center;position:fixed;right:20px}.p-scrolltop-sticky{position:sticky}.p-scrolltop-sticky.p-link{margin-left:auto}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    target: [{\n      type: Input\n    }],\n    threshold: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    behavior: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ScrollTopModule = function ScrollTopModule() {\n  _classCallCheck(this, ScrollTopModule);\n};\n\nScrollTopModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ScrollTopModule\n});\nScrollTopModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ScrollTopModule_Factory(t) {\n    return new (t || ScrollTopModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollTopModule, {\n    declarations: function declarations() {\n      return [ScrollTop];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [ScrollTop];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollTopModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [ScrollTop],\n      declarations: [ScrollTop]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ScrollTop, ScrollTopModule };","map":{"version":3,"sources":["../../src/app/components/scrolltop/scrolltop.ts","../../src/app/components/scrolltop/primeng-scrolltop.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6Ba,S;AAsBT,qBAAmB,EAAnB,EAA2C,EAA3C,EAAgE;AAAA;;AAA7C,SAAA,EAAA,GAAA,EAAA;AAAwB,SAAA,EAAA,GAAA,EAAA;AAhBlC,SAAA,MAAA,GAAiB,QAAjB;AAEA,SAAA,SAAA,GAAoB,GAApB;AAEA,SAAA,IAAA,GAAe,kBAAf;AAEA,SAAA,QAAA,GAAmB,QAAnB;AAEA,SAAA,qBAAA,GAAgC,MAAhC;AAEA,SAAA,qBAAA,GAAgC,MAAhC;AAIT,SAAA,OAAA,GAAmB,KAAnB;AAEqE;;;;WAErE,oBAAQ;AACJ,UAAI,KAAK,MAAL,KAAgB,QAApB,EACI,KAAK,0BAAL,GADJ,KAEK,IAAI,KAAK,MAAL,KAAgB,QAApB,EACD,KAAK,wBAAL;AACP;;;WAED,mBAAO;AACH,UAAI,aAAa,GAAG,KAAK,MAAL,KAAgB,QAAhB,GAA2B,MAA3B,GAAoC,KAAK,EAAL,CAAQ,aAAR,CAAsB,aAA9E;AACC,MAAA,aAAa,CAAC,MAAd,CAAqB;AAClB,QAAA,GAAG,EAAE,CADa;AAElB,QAAA,QAAQ,EAAE,KAAK;AAFG,OAArB;AAIJ;;;WAED,mBAAO;AACH,WAAK,EAAL,CAAQ,aAAR,CAAsB,QAAtB,CAA+B,CAA/B,EAAkC,KAAlC,CAAwC,MAAxC,GAAiD,UAAU,CAAC,cAAX,EAAjD;AACH;;;WAED,yBAAgB,OAAhB,EAAuB;AACnB,UAAI,OAAO,GAAG,KAAK,SAAnB,EACI,KAAK,OAAL,GAAe,IAAf,CADJ,KAGI,KAAK,OAAL,GAAe,KAAf;AAEJ,WAAK,EAAL,CAAQ,YAAR;AACH;;;WAED,oCAAwB;AAAA;;AACpB,WAAK,cAAL,GAAsB,YAAA;AAElB,QAAA,KAAI,CAAC,eAAL,CAAqB,KAAI,CAAC,EAAL,CAAQ,aAAR,CAAsB,aAAtB,CAAoC,SAAzD;AACH,OAHD;;AAKA,WAAK,EAAL,CAAQ,aAAR,CAAsB,aAAtB,CAAoC,gBAApC,CAAqD,QAArD,EAA+D,KAAK,cAApE;AACH;;;WAED,sCAA0B;AAAA;;AACtB,WAAK,cAAL,GAAsB,YAAA;AAClB,QAAA,MAAI,CAAC,eAAL,CAAqB,UAAU,CAAC,kBAAX,EAArB;AACH,OAFD;;AAIA,MAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,cAAvC;AACH;;;WAED,sCAA0B;AACtB,UAAI,KAAK,cAAT,EAAyB;AACrB,aAAK,EAAL,CAAQ,aAAR,CAAsB,aAAtB,CAAoC,mBAApC,CAAwD,QAAxD,EAAkE,KAAK,cAAvE;AACA,aAAK,cAAL,GAAsB,IAAtB;AACH;AACJ;;;WAED,wCAA4B;AACxB,UAAI,KAAK,cAAT,EAAyB;AACrB,QAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,cAA1C;AACA,aAAK,cAAL,GAAsB,IAAtB;AACH;AACJ;;;WAED,0BAAc;AACV,aAAO;AACH,0CAAkC,IAD/B;AAEH,8BAAsB,KAAK,MAAL,KAAgB;AAFnC,OAAP;AAIH;;;WAED,uBAAW;AACP,UAAI,KAAK,MAAL,KAAgB,QAApB,EACI,KAAK,4BAAL,GADJ,KAEK,IAAI,KAAK,MAAL,KAAgB,QAApB,EACD,KAAK,0BAAL;AACP;;;;;;0BAvHJ,iB,CAAA,C,EAAS;AAAA,SAAC,KAAA,CAAA,IAAA,SAAA,EACP,MAAU,CAAA,iBAAV,CAAuB,MAAA,CAAA,UAAvB,CADO,EAEC,MAAE,CAAA,iBAAF,CAAE,MAAA,CAAA,iBAAF,CAFD,CAAD;AAEI,C;;;;;;;;;;;;;;;;;YAKT,M,EAAA,Q,EAAA,C,EAAA,S,EACD,O,EAAiB,S,EAAA,O,EAAA,C,EAAwB,M,GAAM,CAAA,MAAA,EAAA,QAAA,EAC/C,CAD+C,EAC/C,SAD+C,EAChC,SADgC,EAChC,OADgC,C,EACV,CAAA,CAAA,EAAA,SAAA,C;AAErC,EAAA,QAAA,EAAU,SAAE,kBAAF,CACN,EADM,EACE,GADF,EACE;AAAA,QAAW,EAAE,GAAA,CAAb,EAAa;aACjB,U,CAAM,C,EAAM,2B,EAAQ,C,EAAA,E,EAAA,Q,EACT,C;;;;AACR,MAAA,MAAA,CAAA,UAAA,CAAA,MAAA,EACH,GAAK,CAAC,OADH;AACiB;AAAA,G;AAAA,EAAA,UAAA,EAAA,CAAA,MAAA,CAAA,IAAA,EAChB,MAAO,CAAA,OADS,EACN,MAAA,CAAA,OADM,C;AACN,EAAA,MACX,EAAA,CAAA,4LAAA,C;AAE4D,EAAA,aACjE,EAAA,C;AAAA,EAAA,IAAA,EACL;AAAA,IAAA,SAAA,EAAA,C;;;;SACJ,UAAA,CAAA,cAAA,EAAA,OAAA,CAAA,0BAAA,CAAA,C,mEADI;AAAA,G;mBAEA;;;AAAC,SAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAmC;AAAA,IAAA,IAAA,EA7B2D;AA6B3D,GAAnC,EA7B4G;AAAA,IAAA,IAAA,EAAF;AAAE,GA6B5G,CAAA;AAAA,CAAA;;AA7BiI,SAAA,CAAA,cAAA,GAAA;AAC5H,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EA8BN;AA9BM,GAAA,CAD4H;AA+BxH,EAAA,KAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA,CA/BwH;AAiCxH,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA,CAjCwH;AAmCxH,EAAA,SAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA,CAnCwH;AAqCxH,EAAA,IAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA,CArCwH;AAuCxH,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA,CAvCwH;AAyCxH,EAAA,qBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA,CAzCwH;AA2CxH,EAAA,qBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA;AA3CwH,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CvH,C;;IAuFH,e;;;;8BALZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACG,eAAU,CAAA,IAAV,GAAU,MAAa,CAAA,gBAAb,CACV;AAAA,EAAA,OAAU,EAAA,SAAU,uBAAV,CACV,CADU,EACE;AAAE,WAAC,KAAU,CAAA,IAAA,eAAV,GAAD;AACjB,GAFG;AAEH,EAAA,OAAA,EAAA,CAAA,CAAA,YAAA,CAAA;AAFG,CADU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;AAIC,C;ACpIL;AACA;AACA;;;AAEA,SAAA,SAAA,EAAA,eAAA","sourcesContent":["import { NgModule, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, OnInit, OnDestroy, ElementRef, ChangeDetectorRef} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { DomHandler } from 'primeng/dom';\n\n@Component({\n    selector: 'p-scrollTop',\n    template: `\n        <button  *ngIf=\"visible\" [@animation]=\"{value: 'open', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@animation.start)=\"onEnter()\"\n            [ngClass]=\"containerClass()\" (click)=\"onClick()\" [class]=\"styleClass\" [ngStyle]=\"style\" type=\"button\">\n            <span [class]=\"icon\" [ngClass]=\"'p-scrolltop-icon'\"></span>\n        </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./scrolltop.css'],\n    animations: [\n        trigger('animation', [\n            state('void', style({\n                opacity: 0\n            })),\n            state('open', style({\n                opacity: 1\n            })),\n            transition('void => open', animate('{{showTransitionParams}}')),\n            transition('open => void', animate('{{hideTransitionParams}}')),\n        ])\n    ]\n})\nexport class ScrollTop implements OnInit, OnDestroy {\n\n    @Input() styleClass: string;\n\n    @Input() style: any;\n\n    @Input() target: string = \"window\";\n    \n    @Input() threshold: number = 400;\n\n    @Input() icon: string = \"pi pi-chevron-up\";\n\n    @Input() behavior: string = \"smooth\";\n    \n    @Input() showTransitionOptions: string = '.15s';\n\n    @Input() hideTransitionOptions: string = '.15s';\n\n    scrollListener: any;\n    \n    visible: boolean = false;\n\n    constructor(public el: ElementRef, private cd: ChangeDetectorRef) { }\n\n    ngOnInit() {\n        if (this.target === 'window')\n            this.bindDocumentScrollListener();\n        else if (this.target === 'parent')\n            this.bindParentScrollListener();\n    }\n\n    onClick() {\n        let scrollElement = this.target === 'window' ? window : this.el.nativeElement.parentElement;\n         scrollElement.scroll({\n            top: 0, \n            behavior: this.behavior\n        });\n    }\n\n    onEnter() {\n        this.el.nativeElement.children[0].style.zIndex = DomHandler.generateZIndex();\n    }\n\n    checkVisibility(scrollY) {\n        if (scrollY > this.threshold)\n            this.visible = true;\n        else\n            this.visible = false;\n\n        this.cd.markForCheck();\n    }\n\n    bindParentScrollListener() {\n        this.scrollListener = () => {\n\n            this.checkVisibility(this.el.nativeElement.parentElement.scrollTop);\n        };\n        \n        this.el.nativeElement.parentElement.addEventListener('scroll', this.scrollListener);\n    }\n\n    bindDocumentScrollListener() {\n        this.scrollListener = () => {\n            this.checkVisibility(DomHandler.getWindowScrollTop());\n        };\n        \n        window.addEventListener('scroll', this.scrollListener);\n    }\n\n    unbindParentScrollListener() {\n        if (this.scrollListener) {\n            this.el.nativeElement.parentElement.removeEventListener('scroll', this.scrollListener);\n            this.scrollListener = null;\n        }\n    }\n\n    unbindDocumentScrollListener() {\n        if (this.scrollListener) {\n            window.removeEventListener('scroll', this.scrollListener);\n            this.scrollListener = null;\n        }\n    }\n\n    containerClass() {\n        return {\n            'p-scrolltop p-link p-component': true,\n            'p-scrolltop-sticky': this.target !== 'window'\n        };\n    }\n\n    ngOnDestroy() {\n        if (this.target === 'window')\n            this.unbindDocumentScrollListener();\n        else if (this.target === 'parent')\n            this.unbindParentScrollListener();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ScrollTop],\n    declarations: [ScrollTop]\n})\nexport class ScrollTopModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}