{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Input, Output, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterService, Header, Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { ObjectUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { RippleModule } from 'primeng/ripple';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'primeng/api';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'primeng/ripple';\nvar _c0 = [\"headerchkbox\"];\n\nfunction Listbox_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Listbox_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵtemplate(2, Listbox_div_1_ng_container_2_Template, 1, 0, \"ng-container\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate);\n  }\n}\n\nvar _c1 = function _c1(a0) {\n  return {\n    \"p-checkbox-disabled\": a0\n  };\n};\n\nvar _c2 = function _c2(a0, a1, a2) {\n  return {\n    \"p-highlight\": a0,\n    \"p-focus\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nvar _c3 = function _c3(a0) {\n  return {\n    \"pi pi-check\": a0\n  };\n};\n\nfunction Listbox_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 11);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 12);\n    ɵngcc0.ɵɵlistener(\"focus\", function Listbox_div_2_div_1_Template_input_focus_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.onHeaderCheckboxFocus();\n    })(\"blur\", function Listbox_div_2_div_1_Template_input_blur_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r13.onHeaderCheckboxBlur();\n    })(\"keydown.space\", function Listbox_div_2_div_1_Template_input_keydown_space_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r14.toggleAll($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"click\", function Listbox_div_2_div_1_Template_div_click_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r15.toggleAll($event);\n    });\n    ɵngcc0.ɵɵelement(5, \"span\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c1, ctx_r8.disabled || ctx_r8.toggleAllDisabled));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r8.allChecked);\n    ɵngcc0.ɵɵattribute(\"disabled\", ctx_r8.disabled || ctx_r8.toggleAllDisabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(7, _c2, ctx_r8.allChecked, ctx_r8.headerCheckboxFocus, ctx_r8.disabled || ctx_r8.toggleAllDisabled));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c3, ctx_r8.allChecked));\n  }\n}\n\nfunction Listbox_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 17);\n    ɵngcc0.ɵɵlistener(\"input\", function Listbox_div_2_div_2_Template_input_input_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r16.onFilter($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(2, \"span\", 18);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r9.filterValue || \"\")(\"disabled\", ctx_r9.disabled);\n    ɵngcc0.ɵɵattribute(\"placeholder\", ctx_r9.filterPlaceHolder)(\"aria-label\", ctx_r9.ariaFilterLabel);\n  }\n}\n\nfunction Listbox_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(1, Listbox_div_2_div_1_Template, 6, 13, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(2, Listbox_div_2_div_2_Template, 3, 4, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.checkbox && ctx_r1.multiple && ctx_r1.showToggleAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.filter);\n  }\n}\n\nfunction Listbox_ng_container_5_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var optgroup_r19 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r20.getOptionGroupLabel(optgroup_r19) || \"empty\");\n  }\n}\n\nfunction Listbox_ng_container_5_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Listbox_ng_container_5_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c4 = function _c4(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Listbox_ng_container_5_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 20);\n    ɵngcc0.ɵɵtemplate(1, Listbox_ng_container_5_ng_template_1_span_1_Template, 2, 1, \"span\", 3);\n    ɵngcc0.ɵɵtemplate(2, Listbox_ng_container_5_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 21);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, Listbox_ng_container_5_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 21);\n  }\n\n  if (rf & 2) {\n    var optgroup_r19 = ctx.$implicit;\n    var ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r4 = ɵngcc0.ɵɵreference(8);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r18.groupTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r18.groupTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(5, _c4, optgroup_r19));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(7, _c4, ctx_r18.getOptionGroupChildren(optgroup_r19)));\n  }\n}\n\nfunction Listbox_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, Listbox_ng_container_5_ng_template_1_Template, 4, 9, \"ng-template\", 19);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.optionsToRender);\n  }\n}\n\nfunction Listbox_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Listbox_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, Listbox_ng_container_6_ng_container_1_Template, 1, 0, \"ng-container\", 21);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n\n    var _r4 = ɵngcc0.ɵɵreference(8);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c4, ctx_r3.optionsToRender));\n  }\n}\n\nvar _c5 = function _c5(a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nfunction Listbox_ng_template_7_li_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 24);\n    ɵngcc0.ɵɵelement(2, \"span\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r27 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c1, ctx_r29.disabled || ctx_r29.isOptionDisabled(option_r27)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c5, ctx_r29.isSelected(option_r27)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c3, ctx_r29.isSelected(option_r27)));\n  }\n}\n\nfunction Listbox_ng_template_7_li_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r27 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r30 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r30.getOptionLabel(option_r27));\n  }\n}\n\nfunction Listbox_ng_template_7_li_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c6 = function _c6(a1, a2) {\n  return {\n    \"p-listbox-item\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nvar _c7 = function _c7(a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction Listbox_ng_template_7_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r35 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function Listbox_ng_template_7_li_0_Template_li_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r35);\n      var option_r27 = ctx.$implicit;\n      var ctx_r34 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r34.onOptionClick($event, option_r27);\n    })(\"dblclick\", function Listbox_ng_template_7_li_0_Template_li_dblclick_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r35);\n      var option_r27 = ctx.$implicit;\n      var ctx_r36 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r36.onOptionDoubleClick($event, option_r27);\n    })(\"touchend\", function Listbox_ng_template_7_li_0_Template_li_touchend_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r35);\n      var option_r27 = ctx.$implicit;\n      var ctx_r37 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r37.onOptionTouchEnd(option_r27);\n    })(\"keydown\", function Listbox_ng_template_7_li_0_Template_li_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r35);\n      var option_r27 = ctx.$implicit;\n      var ctx_r38 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r38.onOptionKeyDown($event, option_r27);\n    });\n    ɵngcc0.ɵɵtemplate(1, Listbox_ng_template_7_li_0_div_1_Template, 3, 9, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(2, Listbox_ng_template_7_li_0_span_2_Template, 2, 1, \"span\", 3);\n    ɵngcc0.ɵɵtemplate(3, Listbox_ng_template_7_li_0_ng_container_3_Template, 1, 0, \"ng-container\", 21);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r27 = ctx.$implicit;\n    var i_r28 = ctx.index;\n    var ctx_r26 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(8, _c6, ctx_r26.isSelected(option_r27), ctx_r26.isOptionDisabled(option_r27)));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r26.disabled || ctx_r26.isOptionDisabled(option_r27) ? null : \"0\")(\"aria-label\", ctx_r26.getOptionLabel(option_r27))(\"aria-selected\", ctx_r26.isSelected(option_r27));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r26.checkbox && ctx_r26.multiple);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r26.itemTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r26.itemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(11, _c7, option_r27, i_r28));\n  }\n}\n\nfunction Listbox_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, Listbox_ng_template_7_li_0_Template, 4, 14, \"li\", 22);\n  }\n\n  if (rf & 2) {\n    var optionsToDisplay_r25 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngForOf\", optionsToDisplay_r25);\n  }\n}\n\nfunction Listbox_div_9_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Listbox_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵtemplate(2, Listbox_div_9_ng_container_2_Template, 1, 0, \"ng-container\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.footerTemplate);\n  }\n}\n\nvar _c8 = [[[\"p-header\"]], [[\"p-footer\"]]];\n\nvar _c9 = function _c9(a1) {\n  return {\n    \"p-listbox p-component\": true,\n    \"p-disabled\": a1\n  };\n};\n\nvar _c10 = [\"p-header\", \"p-footer\"];\nvar LISTBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return Listbox;\n  }),\n  multi: true\n};\n\nvar Listbox = /*#__PURE__*/function () {\n  function Listbox(el, cd, filterService) {\n    _classCallCheck(this, Listbox);\n\n    this.el = el;\n    this.cd = cd;\n    this.filterService = filterService;\n    this.checkbox = false;\n    this.filter = false;\n    this.filterMatchMode = 'contains';\n    this.metaKeySelection = true;\n    this.showToggleAll = true;\n    this.onChange = new EventEmitter();\n    this.onClick = new EventEmitter();\n    this.onDblClick = new EventEmitter();\n\n    this.onModelChange = function () {};\n\n    this.onModelTouched = function () {};\n  }\n\n  _createClass(Listbox, [{\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(val) {\n      this._options = val;\n    }\n  }, {\n    key: \"filterValue\",\n    get: function get() {\n      return this._filterValue;\n    },\n    set: function set(val) {\n      this._filterValue = val;\n      this.activateFilter();\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'item':\n            _this.itemTemplate = item.template;\n            break;\n\n          case 'group':\n            _this.groupTemplate = item.template;\n            break;\n\n          case 'header':\n            _this.headerTemplate = item.template;\n            break;\n\n          case 'footer':\n            _this.footerTemplate = item.template;\n            break;\n\n          default:\n            _this.itemTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"getOptionLabel\",\n    value: function getOptionLabel(option) {\n      return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option.label != undefined ? option.label : option;\n    }\n  }, {\n    key: \"getOptionGroupChildren\",\n    value: function getOptionGroupChildren(optionGroup) {\n      return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n  }, {\n    key: \"getOptionGroupLabel\",\n    value: function getOptionGroupLabel(optionGroup) {\n      return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n    }\n  }, {\n    key: \"getOptionValue\",\n    value: function getOptionValue(option) {\n      return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : this.optionLabel ? option : option.value;\n    }\n  }, {\n    key: \"isOptionDisabled\",\n    value: function isOptionDisabled(option) {\n      return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option.disabled !== undefined ? option.disabled : false;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"onOptionClick\",\n    value: function onOptionClick(event, option) {\n      if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n        return;\n      }\n\n      if (this.multiple) {\n        if (this.checkbox) this.onOptionClickCheckbox(event, option);else this.onOptionClickMultiple(event, option);\n      } else {\n        this.onOptionClickSingle(event, option);\n      }\n\n      this.onClick.emit({\n        originalEvent: event,\n        option: option,\n        value: this.value\n      });\n      this.optionTouched = false;\n    }\n  }, {\n    key: \"onOptionTouchEnd\",\n    value: function onOptionTouchEnd(option) {\n      if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n        return;\n      }\n\n      this.optionTouched = true;\n    }\n  }, {\n    key: \"onOptionDoubleClick\",\n    value: function onOptionDoubleClick(event, option) {\n      if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n        return;\n      }\n\n      this.onDblClick.emit({\n        originalEvent: event,\n        option: option,\n        value: this.value\n      });\n    }\n  }, {\n    key: \"onOptionClickSingle\",\n    value: function onOptionClickSingle(event, option) {\n      var selected = this.isSelected(option);\n      var valueChanged = false;\n      var metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n      if (metaSelection) {\n        var metaKey = event.metaKey || event.ctrlKey;\n\n        if (selected) {\n          if (metaKey) {\n            this.value = null;\n            valueChanged = true;\n          }\n        } else {\n          this.value = this.getOptionValue(option);\n          valueChanged = true;\n        }\n      } else {\n        this.value = selected ? null : this.getOptionValue(option);\n        valueChanged = true;\n      }\n\n      if (valueChanged) {\n        this.onModelChange(this.value);\n        this.onChange.emit({\n          originalEvent: event,\n          value: this.value\n        });\n      }\n    }\n  }, {\n    key: \"onOptionClickMultiple\",\n    value: function onOptionClickMultiple(event, option) {\n      var selected = this.isSelected(option);\n      var valueChanged = false;\n      var metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n      if (metaSelection) {\n        var metaKey = event.metaKey || event.ctrlKey;\n\n        if (selected) {\n          if (metaKey) {\n            this.removeOption(option);\n          } else {\n            this.value = [this.getOptionValue(option)];\n          }\n\n          valueChanged = true;\n        } else {\n          this.value = metaKey ? this.value || [] : [];\n          this.value = [].concat(_toConsumableArray(this.value), [this.getOptionValue(option)]);\n          valueChanged = true;\n        }\n      } else {\n        if (selected) {\n          this.removeOption(option);\n        } else {\n          this.value = [].concat(_toConsumableArray(this.value || []), [this.getOptionValue(option)]);\n        }\n\n        valueChanged = true;\n      }\n\n      if (valueChanged) {\n        this.onModelChange(this.value);\n        this.onChange.emit({\n          originalEvent: event,\n          value: this.value\n        });\n      }\n    }\n  }, {\n    key: \"onOptionClickCheckbox\",\n    value: function onOptionClickCheckbox(event, option) {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      var selected = this.isSelected(option);\n\n      if (selected) {\n        this.removeOption(option);\n      } else {\n        this.value = this.value ? this.value : [];\n        this.value = [].concat(_toConsumableArray(this.value), [this.getOptionValue(option)]);\n      }\n\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value\n      });\n    }\n  }, {\n    key: \"removeOption\",\n    value: function removeOption(option) {\n      var _this2 = this;\n\n      this.value = this.value.filter(function (val) {\n        return !ObjectUtils.equals(val, _this2.getOptionValue(option), _this2.dataKey);\n      });\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(option) {\n      var selected = false;\n      var optionValue = this.getOptionValue(option);\n\n      if (this.multiple) {\n        if (this.value) {\n          var _iterator = _createForOfIteratorHelper(this.value),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var val = _step.value;\n\n              if (ObjectUtils.equals(val, optionValue, this.dataKey)) {\n                selected = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      } else {\n        selected = ObjectUtils.equals(this.value, optionValue, this.dataKey);\n      }\n\n      return selected;\n    }\n  }, {\n    key: \"allChecked\",\n    get: function get() {\n      var optionsToRender = this.optionsToRender;\n\n      if (!optionsToRender || optionsToRender.length === 0) {\n        return false;\n      } else {\n        var selectedDisabledItemsLength = 0;\n        var unselectedDisabledItemsLength = 0;\n        var selectedEnabledItemsLength = 0;\n        var visibleOptionsLength = this.group ? 0 : this.optionsToRender.length;\n\n        var _iterator2 = _createForOfIteratorHelper(optionsToRender),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var option = _step2.value;\n\n            if (!this.group) {\n              var disabled = this.isOptionDisabled(option);\n              var selected = this.isSelected(option);\n\n              if (disabled) {\n                if (selected) selectedDisabledItemsLength++;else unselectedDisabledItemsLength++;\n              } else {\n                if (selected) selectedEnabledItemsLength++;else return false;\n              }\n            } else if (option.items) {\n              var _iterator3 = _createForOfIteratorHelper(option.items),\n                  _step3;\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var opt = _step3.value;\n\n                  var _disabled = this.isOptionDisabled(opt);\n\n                  var _selected = this.isSelected(opt);\n\n                  if (_disabled) {\n                    if (_selected) selectedDisabledItemsLength++;else unselectedDisabledItemsLength++;\n                  } else {\n                    if (_selected) selectedEnabledItemsLength++;else {\n                      return false;\n                    }\n                  }\n\n                  visibleOptionsLength++;\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        return visibleOptionsLength === selectedDisabledItemsLength || visibleOptionsLength === selectedEnabledItemsLength || selectedEnabledItemsLength && visibleOptionsLength === selectedEnabledItemsLength + unselectedDisabledItemsLength + selectedDisabledItemsLength;\n      }\n    }\n  }, {\n    key: \"optionsToRender\",\n    get: function get() {\n      return this._filteredOptions || this.options;\n    }\n  }, {\n    key: \"hasFilter\",\n    value: function hasFilter() {\n      return this._filterValue && this._filterValue.trim().length > 0;\n    }\n  }, {\n    key: \"onFilter\",\n    value: function onFilter(event) {\n      this._filterValue = event.target.value;\n      this.activateFilter();\n    }\n  }, {\n    key: \"activateFilter\",\n    value: function activateFilter() {\n      var _this3 = this;\n\n      if (this.hasFilter() && this._options) {\n        if (this.group) {\n          var searchFields = (this.optionLabel || 'label').split(',');\n          var filteredGroups = [];\n\n          var _iterator4 = _createForOfIteratorHelper(this.options),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var optgroup = _step4.value;\n              var filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n              if (filteredSubOptions && filteredSubOptions.length) {\n                filteredGroups.push({\n                  label: optgroup.label,\n                  value: optgroup.value,\n                  items: filteredSubOptions\n                });\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          this._filteredOptions = filteredGroups;\n        } else {\n          this._filteredOptions = this._options.filter(function (option) {\n            return _this3.filterService.filters[_this3.filterMatchMode](_this3.getOptionLabel(option), _this3._filterValue, _this3.filterLocale);\n          });\n        }\n      } else {\n        this._filteredOptions = null;\n      }\n    }\n  }, {\n    key: \"toggleAllDisabled\",\n    get: function get() {\n      var optionsToRender = this.optionsToRender;\n\n      if (!optionsToRender || optionsToRender.length === 0) {\n        return true;\n      } else {\n        var _iterator5 = _createForOfIteratorHelper(optionsToRender),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var option = _step5.value;\n            if (!this.isOptionDisabled(option)) return false;\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        return true;\n      }\n    }\n  }, {\n    key: \"toggleAll\",\n    value: function toggleAll(event) {\n      if (this.disabled || this.toggleAllDisabled || this.readonly) {\n        return;\n      }\n\n      var allChecked = this.allChecked;\n      if (allChecked) this.uncheckAll();else this.checkAll();\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"checkAll\",\n    value: function checkAll() {\n      var _this4 = this;\n\n      var optionsToRender = this.optionsToRender;\n      var val = [];\n      optionsToRender.forEach(function (opt) {\n        if (!_this4.group) {\n          var optionDisabled = _this4.isOptionDisabled(opt);\n\n          if (!optionDisabled || optionDisabled && _this4.isSelected(opt)) {\n            val.push(_this4.getOptionValue(opt));\n          }\n        } else {\n          if (opt.items) {\n            opt.items.forEach(function (option) {\n              var optionDisabled = _this4.isOptionDisabled(option);\n\n              if (!optionDisabled || optionDisabled && _this4.isSelected(option)) {\n                val.push(_this4.getOptionValue(option));\n              }\n            });\n          }\n        }\n      });\n      this.value = val;\n    }\n  }, {\n    key: \"uncheckAll\",\n    value: function uncheckAll() {\n      var _this5 = this;\n\n      var optionsToRender = this.optionsToRender;\n      var val = [];\n      optionsToRender.forEach(function (opt) {\n        if (!_this5.group) {\n          var optionDisabled = _this5.isOptionDisabled(opt);\n\n          if (optionDisabled && _this5.isSelected(opt)) {\n            val.push(_this5.getOptionValue(opt));\n          }\n        } else {\n          if (opt.items) {\n            opt.items.forEach(function (option) {\n              var optionDisabled = _this5.isOptionDisabled(option);\n\n              if (optionDisabled && _this5.isSelected(option)) {\n                val.push(_this5.getOptionValue(option));\n              }\n            });\n          }\n        }\n      });\n      this.value = val;\n    }\n  }, {\n    key: \"onOptionKeyDown\",\n    value: function onOptionKeyDown(event, option) {\n      if (this.readonly) {\n        return;\n      }\n\n      var item = event.currentTarget;\n\n      switch (event.which) {\n        //down\n        case 40:\n          var nextItem = this.findNextItem(item);\n\n          if (nextItem) {\n            nextItem.focus();\n          }\n\n          event.preventDefault();\n          break;\n        //up\n\n        case 38:\n          var prevItem = this.findPrevItem(item);\n\n          if (prevItem) {\n            prevItem.focus();\n          }\n\n          event.preventDefault();\n          break;\n        //enter\n\n        case 13:\n          this.onOptionClick(event, option);\n          event.preventDefault();\n          break;\n      }\n    }\n  }, {\n    key: \"findNextItem\",\n    value: function findNextItem(item) {\n      var nextItem = item.nextElementSibling;\n      if (nextItem) return DomHandler.hasClass(nextItem, 'p-disabled') || DomHandler.isHidden(nextItem) || DomHandler.hasClass(nextItem, 'p-listbox-item-group') ? this.findNextItem(nextItem) : nextItem;else return null;\n    }\n  }, {\n    key: \"findPrevItem\",\n    value: function findPrevItem(item) {\n      var prevItem = item.previousElementSibling;\n      if (prevItem) return DomHandler.hasClass(prevItem, 'p-disabled') || DomHandler.isHidden(prevItem) || DomHandler.hasClass(prevItem, 'p-listbox-item-group') ? this.findPrevItem(prevItem) : prevItem;else return null;\n    }\n  }, {\n    key: \"onHeaderCheckboxFocus\",\n    value: function onHeaderCheckboxFocus() {\n      this.headerCheckboxFocus = true;\n    }\n  }, {\n    key: \"onHeaderCheckboxBlur\",\n    value: function onHeaderCheckboxBlur() {\n      this.headerCheckboxFocus = false;\n    }\n  }]);\n\n  return Listbox;\n}();\n\nListbox.ɵfac = function Listbox_Factory(t) {\n  return new (t || Listbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FilterService));\n};\n\nListbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Listbox,\n  selectors: [[\"p-listbox\"]],\n  contentQueries: function Listbox_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, Header, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, Footer, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerFacet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerFacet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Listbox_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCheckboxViewChild = _t.first);\n    }\n  },\n  inputs: {\n    checkbox: \"checkbox\",\n    filter: \"filter\",\n    filterMatchMode: \"filterMatchMode\",\n    metaKeySelection: \"metaKeySelection\",\n    showToggleAll: \"showToggleAll\",\n    options: \"options\",\n    filterValue: \"filterValue\",\n    disabled: \"disabled\",\n    multiple: \"multiple\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    listStyle: \"listStyle\",\n    listStyleClass: \"listStyleClass\",\n    readonly: \"readonly\",\n    filterLocale: \"filterLocale\",\n    dataKey: \"dataKey\",\n    optionLabel: \"optionLabel\",\n    optionValue: \"optionValue\",\n    optionGroupChildren: \"optionGroupChildren\",\n    optionGroupLabel: \"optionGroupLabel\",\n    optionDisabled: \"optionDisabled\",\n    ariaFilterLabel: \"ariaFilterLabel\",\n    filterPlaceHolder: \"filterPlaceHolder\",\n    group: \"group\"\n  },\n  outputs: {\n    onChange: \"onChange\",\n    onClick: \"onClick\",\n    onDblClick: \"onDblClick\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([LISTBOX_VALUE_ACCESSOR])],\n  ngContentSelectors: _c10,\n  decls: 10,\n  vars: 15,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"class\", \"p-listbox-header\", 4, \"ngIf\"], [\"role\", \"listbox\", \"aria-multiselectable\", \"multiple\", 1, \"p-listbox-list\"], [4, \"ngIf\"], [\"itemslist\", \"\"], [\"class\", \"p-listbox-footer\", 4, \"ngIf\"], [1, \"p-listbox-header\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-checkbox p-component\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"p-listbox-filter-container\", 4, \"ngIf\"], [1, \"p-checkbox\", \"p-component\", 3, \"ngClass\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", \"readonly\", \"readonly\", 3, \"checked\", \"focus\", \"blur\", \"keydown.space\"], [1, \"p-checkbox-box\", 3, \"ngClass\", \"click\"], [\"headerchkbox\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"], [1, \"p-listbox-filter-container\"], [\"type\", \"text\", 1, \"p-listbox-filter\", \"p-inputtext\", \"p-component\", 3, \"value\", \"disabled\", \"input\"], [1, \"p-listbox-filter-icon\", \"pi\", \"pi-search\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-listbox-item-group\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"pRipple\", \"\", \"role\", \"option\", 3, \"ngClass\", \"click\", \"dblclick\", \"touchend\", \"keydown\", 4, \"ngFor\", \"ngForOf\"], [\"pRipple\", \"\", \"role\", \"option\", 3, \"ngClass\", \"click\", \"dblclick\", \"touchend\", \"keydown\"], [1, \"p-checkbox-box\", 3, \"ngClass\"], [1, \"p-listbox-footer\"]],\n  template: function Listbox_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c8);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, Listbox_div_1_Template, 3, 1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, Listbox_div_2_Template, 3, 2, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(4, \"ul\", 2);\n      ɵngcc0.ɵɵtemplate(5, Listbox_ng_container_5_Template, 2, 1, \"ng-container\", 3);\n      ɵngcc0.ɵɵtemplate(6, Listbox_ng_container_6_Template, 2, 4, \"ng-container\", 3);\n      ɵngcc0.ɵɵtemplate(7, Listbox_ng_template_7_Template, 1, 1, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, Listbox_div_9_Template, 3, 1, \"div\", 5);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(13, _c9, ctx.disabled))(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.headerFacet || ctx.headerTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.checkbox && ctx.multiple && ctx.showToggleAll || ctx.filter);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMap(ctx.listStyleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", \"p-listbox-list-wrapper\")(\"ngStyle\", ctx.listStyle);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.group);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.group);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.footerFacet || ctx.footerTemplate);\n    }\n  },\n  directives: [ɵngcc2.NgClass, ɵngcc2.NgStyle, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgForOf, ɵngcc3.Ripple],\n  styles: [\".p-listbox-list-wrapper{overflow:auto}.p-listbox-list{list-style-type:none;margin:0;padding:0}.p-listbox-item{-ms-user-select:none;-webkit-user-select:none;cursor:pointer;overflow:hidden;position:relative;user-select:none}.p-listbox-header,.p-listbox-item{align-items:center;display:flex}.p-listbox-filter-container{flex:1 1 auto;position:relative}.p-listbox-filter-icon{margin-top:-.5rem;position:absolute;top:50%}.p-listbox-filter{width:100%}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nListbox.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: FilterService\n  }];\n};\n\nListbox.propDecorators = {\n  multiple: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  listStyle: [{\n    type: Input\n  }],\n  listStyleClass: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  checkbox: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  filterMatchMode: [{\n    type: Input\n  }],\n  filterLocale: [{\n    type: Input\n  }],\n  metaKeySelection: [{\n    type: Input\n  }],\n  dataKey: [{\n    type: Input\n  }],\n  showToggleAll: [{\n    type: Input\n  }],\n  optionLabel: [{\n    type: Input\n  }],\n  optionValue: [{\n    type: Input\n  }],\n  optionGroupChildren: [{\n    type: Input\n  }],\n  optionGroupLabel: [{\n    type: Input\n  }],\n  optionDisabled: [{\n    type: Input\n  }],\n  ariaFilterLabel: [{\n    type: Input\n  }],\n  filterPlaceHolder: [{\n    type: Input\n  }],\n  group: [{\n    type: Input\n  }],\n  onChange: [{\n    type: Output\n  }],\n  onClick: [{\n    type: Output\n  }],\n  onDblClick: [{\n    type: Output\n  }],\n  headerCheckboxViewChild: [{\n    type: ViewChild,\n    args: ['headerchkbox']\n  }],\n  headerFacet: [{\n    type: ContentChild,\n    args: [Header]\n  }],\n  footerFacet: [{\n    type: ContentChild,\n    args: [Footer]\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }],\n  options: [{\n    type: Input\n  }],\n  filterValue: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Listbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-listbox',\n      template: \"\\n    <div [ngClass]=\\\"{'p-listbox p-component': true, 'p-disabled': disabled}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n      <div class=\\\"p-listbox-header\\\" *ngIf=\\\"headerFacet || headerTemplate\\\">\\n        <ng-content select=\\\"p-header\\\"></ng-content>\\n        <ng-container *ngTemplateOutlet=\\\"headerTemplate\\\"></ng-container>\\n      </div>\\n      <div class=\\\"p-listbox-header\\\" *ngIf=\\\"(checkbox && multiple && showToggleAll) || filter\\\">\\n        <div class=\\\"p-checkbox p-component\\\" *ngIf=\\\"checkbox && multiple && showToggleAll\\\" [ngClass]=\\\"{'p-checkbox-disabled': disabled || toggleAllDisabled}\\\">\\n          <div class=\\\"p-hidden-accessible\\\">\\n            <input type=\\\"checkbox\\\" readonly=\\\"readonly\\\" [checked]=\\\"allChecked\\\" (focus)=\\\"onHeaderCheckboxFocus()\\\" (blur)=\\\"onHeaderCheckboxBlur()\\\" (keydown.space)=\\\"toggleAll($event)\\\" [attr.disabled]=\\\"disabled || toggleAllDisabled\\\">\\n          </div>\\n          <div #headerchkbox class=\\\"p-checkbox-box\\\" [ngClass]=\\\"{'p-highlight': allChecked, 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled}\\\" (click)=\\\"toggleAll($event)\\\">\\n            <span class=\\\"p-checkbox-icon\\\" [ngClass]=\\\"{'pi pi-check':allChecked}\\\"></span>\\n          </div>\\n        </div>\\n        <div class=\\\"p-listbox-filter-container\\\" *ngIf=\\\"filter\\\">\\n          <input type=\\\"text\\\" [value]=\\\"filterValue||''\\\" (input)=\\\"onFilter($event)\\\" class=\\\"p-listbox-filter p-inputtext p-component\\\" [disabled]=\\\"disabled\\\" [attr.placeholder]=\\\"filterPlaceHolder\\\" [attr.aria-label]=\\\"ariaFilterLabel\\\">\\n          <span class=\\\"p-listbox-filter-icon pi pi-search\\\"></span>\\n        </div>\\n      </div>\\n      <div [ngClass]=\\\"'p-listbox-list-wrapper'\\\" [ngStyle]=\\\"listStyle\\\" [class]=\\\"listStyleClass\\\">\\n        <ul class=\\\"p-listbox-list\\\" role=\\\"listbox\\\" aria-multiselectable=\\\"multiple\\\">\\n            <ng-container *ngIf=\\\"group\\\">\\n                <ng-template ngFor let-optgroup [ngForOf]=\\\"optionsToRender\\\">\\n                    <li class=\\\"p-listbox-item-group\\\">\\n                        <span *ngIf=\\\"!groupTemplate\\\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\\n                        <ng-container *ngTemplateOutlet=\\\"groupTemplate; context: {$implicit: optgroup}\\\"></ng-container>\\n                    </li>\\n                    <ng-container *ngTemplateOutlet=\\\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\\\"></ng-container>\\n                </ng-template>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"!group\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"itemslist; context: {$implicit: optionsToRender}\\\"></ng-container>\\n            </ng-container>\\n            <ng-template #itemslist let-optionsToDisplay>\\n                <li *ngFor=\\\"let option of optionsToDisplay; let i = index;\\\" [attr.tabindex]=\\\"disabled || isOptionDisabled(option) ? null : '0'\\\" pRipple\\n                    [ngClass]=\\\"{'p-listbox-item':true,'p-highlight':isSelected(option), 'p-disabled': this.isOptionDisabled(option)}\\\" role=\\\"option\\\" [attr.aria-label]=\\\"getOptionLabel(option)\\\"\\n                    [attr.aria-selected]=\\\"isSelected(option)\\\" (click)=\\\"onOptionClick($event,option)\\\" (dblclick)=\\\"onOptionDoubleClick($event,option)\\\" (touchend)=\\\"onOptionTouchEnd(option)\\\" (keydown)=\\\"onOptionKeyDown($event,option)\\\">\\n                    <div class=\\\"p-checkbox p-component\\\" *ngIf=\\\"checkbox && multiple\\\" [ngClass]=\\\"{'p-checkbox-disabled': disabled || isOptionDisabled(option)}\\\">\\n                        <div class=\\\"p-checkbox-box\\\" [ngClass]=\\\"{'p-highlight':isSelected(option)}\\\">\\n                            <span class=\\\"p-checkbox-icon\\\" [ngClass]=\\\"{'pi pi-check':isSelected(option)}\\\"></span>\\n                        </div>\\n                    </div>\\n                    <span *ngIf=\\\"!itemTemplate\\\">{{getOptionLabel(option)}}</span>\\n                    <ng-container *ngTemplateOutlet=\\\"itemTemplate; context: {$implicit: option, index: i}\\\"></ng-container>\\n                </li>\\n            </ng-template>\\n        </ul>\\n      </div>\\n      <div class=\\\"p-listbox-footer\\\" *ngIf=\\\"footerFacet || footerTemplate\\\">\\n        <ng-content select=\\\"p-footer\\\"></ng-content>\\n        <ng-container *ngTemplateOutlet=\\\"footerTemplate\\\"></ng-container>\\n      </div>\\n    </div>\\n  \",\n      providers: [LISTBOX_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-listbox-list-wrapper{overflow:auto}.p-listbox-list{list-style-type:none;margin:0;padding:0}.p-listbox-item{-ms-user-select:none;-webkit-user-select:none;cursor:pointer;overflow:hidden;position:relative;user-select:none}.p-listbox-header,.p-listbox-item{align-items:center;display:flex}.p-listbox-filter-container{flex:1 1 auto;position:relative}.p-listbox-filter-icon{margin-top:-.5rem;position:absolute;top:50%}.p-listbox-filter{width:100%}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.FilterService\n    }];\n  }, {\n    checkbox: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    filterMatchMode: [{\n      type: Input\n    }],\n    metaKeySelection: [{\n      type: Input\n    }],\n    showToggleAll: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onDblClick: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    filterValue: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    listStyle: [{\n      type: Input\n    }],\n    listStyleClass: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    optionLabel: [{\n      type: Input\n    }],\n    optionValue: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    optionDisabled: [{\n      type: Input\n    }],\n    ariaFilterLabel: [{\n      type: Input\n    }],\n    filterPlaceHolder: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    headerCheckboxViewChild: [{\n      type: ViewChild,\n      args: ['headerchkbox']\n    }],\n    headerFacet: [{\n      type: ContentChild,\n      args: [Header]\n    }],\n    footerFacet: [{\n      type: ContentChild,\n      args: [Footer]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar ListboxModule = function ListboxModule() {\n  _classCallCheck(this, ListboxModule);\n};\n\nListboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ListboxModule\n});\nListboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ListboxModule_Factory(t) {\n    return new (t || ListboxModule)();\n  },\n  imports: [[CommonModule, SharedModule, RippleModule], SharedModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListboxModule, {\n    declarations: function declarations() {\n      return [Listbox];\n    },\n    imports: function imports() {\n      return [CommonModule, SharedModule, RippleModule];\n    },\n    exports: function exports() {\n      return [Listbox, SharedModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule, RippleModule],\n      exports: [Listbox, SharedModule],\n      declarations: [Listbox]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LISTBOX_VALUE_ACCESSOR, Listbox, ListboxModule };","map":{"version":3,"sources":["../../src/app/components/listbox/listbox.ts","../../src/app/components/listbox/primeng-listbox.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule, Component, ElementRef, Input, Output, EventEmitter, AfterContentInit, ContentChildren, ContentChild, QueryList, TemplateRef,forwardRef, ChangeDetectorRef, ViewChild, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule, PrimeTemplate, Footer, Header, FilterService } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { ObjectUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { RippleModule } from 'primeng/ripple';  \n\nexport const LISTBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Listbox),\n    multi: true\n};\n\n@Component({\n    selector: 'p-listbox',\n    template: `\n    <div [ngClass]=\"{'p-listbox p-component': true, 'p-disabled': disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n      <div class=\"p-listbox-header\" *ngIf=\"headerFacet || headerTemplate\">\n        <ng-content select=\"p-header\"></ng-content>\n        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n      </div>\n      <div class=\"p-listbox-header\" *ngIf=\"(checkbox && multiple && showToggleAll) || filter\">\n        <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple && showToggleAll\" [ngClass]=\"{'p-checkbox-disabled': disabled || toggleAllDisabled}\">\n          <div class=\"p-hidden-accessible\">\n            <input type=\"checkbox\" readonly=\"readonly\" [checked]=\"allChecked\" (focus)=\"onHeaderCheckboxFocus()\" (blur)=\"onHeaderCheckboxBlur()\" (keydown.space)=\"toggleAll($event)\" [attr.disabled]=\"disabled || toggleAllDisabled\">\n          </div>\n          <div #headerchkbox class=\"p-checkbox-box\" [ngClass]=\"{'p-highlight': allChecked, 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled}\" (click)=\"toggleAll($event)\">\n            <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':allChecked}\"></span>\n          </div>\n        </div>\n        <div class=\"p-listbox-filter-container\" *ngIf=\"filter\">\n          <input type=\"text\" [value]=\"filterValue||''\" (input)=\"onFilter($event)\" class=\"p-listbox-filter p-inputtext p-component\" [disabled]=\"disabled\" [attr.placeholder]=\"filterPlaceHolder\" [attr.aria-label]=\"ariaFilterLabel\">\n          <span class=\"p-listbox-filter-icon pi pi-search\"></span>\n        </div>\n      </div>\n      <div [ngClass]=\"'p-listbox-list-wrapper'\" [ngStyle]=\"listStyle\" [class]=\"listStyleClass\">\n        <ul class=\"p-listbox-list\" role=\"listbox\" aria-multiselectable=\"multiple\">\n            <ng-container *ngIf=\"group\">\n                <ng-template ngFor let-optgroup [ngForOf]=\"optionsToRender\">\n                    <li class=\"p-listbox-item-group\">\n                        <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                        <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                    </li>\n                    <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\"></ng-container>\n                </ng-template>\n            </ng-container>\n            <ng-container *ngIf=\"!group\">\n                    <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: optionsToRender}\"></ng-container>\n            </ng-container>\n            <ng-template #itemslist let-optionsToDisplay>\n                <li *ngFor=\"let option of optionsToDisplay; let i = index;\" [attr.tabindex]=\"disabled || isOptionDisabled(option) ? null : '0'\" pRipple\n                    [ngClass]=\"{'p-listbox-item':true,'p-highlight':isSelected(option), 'p-disabled': this.isOptionDisabled(option)}\" role=\"option\" [attr.aria-label]=\"getOptionLabel(option)\"\n                    [attr.aria-selected]=\"isSelected(option)\" (click)=\"onOptionClick($event,option)\" (dblclick)=\"onOptionDoubleClick($event,option)\" (touchend)=\"onOptionTouchEnd(option)\" (keydown)=\"onOptionKeyDown($event,option)\">\n                    <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple\" [ngClass]=\"{'p-checkbox-disabled': disabled || isOptionDisabled(option)}\">\n                        <div class=\"p-checkbox-box\" [ngClass]=\"{'p-highlight':isSelected(option)}\">\n                            <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':isSelected(option)}\"></span>\n                        </div>\n                    </div>\n                    <span *ngIf=\"!itemTemplate\">{{getOptionLabel(option)}}</span>\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                </li>\n            </ng-template>\n        </ul>\n      </div>\n      <div class=\"p-listbox-footer\" *ngIf=\"footerFacet || footerTemplate\">\n        <ng-content select=\"p-footer\"></ng-content>\n        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n      </div>\n    </div>\n  `,\n    providers: [LISTBOX_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./listbox.css']\n})\nexport class Listbox implements AfterContentInit, ControlValueAccessor {\n\n    @Input() multiple: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() listStyle: any;\n\n    @Input() listStyleClass: string;\n\n    @Input() readonly: boolean;\n\n    @Input() disabled: boolean;\n\n    @Input() checkbox: boolean = false;\n\n    @Input() filter: boolean = false;\n\n    @Input() filterMatchMode: string = 'contains';\n\n    @Input() filterLocale: string;\n\n    @Input() metaKeySelection: boolean = true;\n\n    @Input() dataKey: string;\n\n    @Input() showToggleAll: boolean = true;\n\n    @Input() optionLabel: string;\n\n    @Input() optionValue: string;\n\n    @Input() optionGroupChildren: string;\n\n    @Input() optionGroupLabel: string;\n\n    @Input() optionDisabled: string;\n\n    @Input() ariaFilterLabel: string;\n\n    @Input() filterPlaceHolder: string;\n\n    @Input() group: boolean;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onDblClick: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('headerchkbox') headerCheckboxViewChild: ElementRef;\n\n    @ContentChild(Header) headerFacet;\n\n    @ContentChild(Footer) footerFacet;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    public _options: any[];\n\n    public itemTemplate: TemplateRef<any>;\n\n    public groupTemplate: TemplateRef<any>;\n\n    public headerTemplate: TemplateRef<any>;\n\n    public footerTemplate: TemplateRef<any>;\n\n    public _filterValue: string;\n\n    public _filteredOptions: any[];\n\n    public filtered: boolean;\n\n    public value: any;\n\n    public onModelChange: Function = () => { };\n\n    public onModelTouched: Function = () => { };\n\n    public optionTouched: boolean;\n\n    public focus: boolean;\n\n    public headerCheckboxFocus: boolean;\n\n    constructor(public el: ElementRef, public cd: ChangeDetectorRef, public filterService: FilterService) { }\n\n    @Input() get options(): any[] {\n        return this._options;\n    }\n\n    set options(val: any[]) {\n        this._options = val;\n    }\n\n    @Input() get filterValue(): string {\n        return this._filterValue;\n    }\n\n    set filterValue(val: string) {\n        this._filterValue = val;\n        this.activateFilter();\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                break;\n\n                case 'group':\n                    this.groupTemplate = item.template;\n                break;\n\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                default:\n                    this.itemTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    getOptionLabel(option: any) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : (option.label != undefined ? option.label : option);\n    }\n\n    getOptionGroupChildren(optionGroup: any) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n\n    getOptionGroupLabel(optionGroup: any) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : (optionGroup.label != undefined ? optionGroup.label : optionGroup);\n    }\n\n    getOptionValue(option: any) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : (this.optionLabel ? option : option.value);\n    }\n\n    isOptionDisabled(option: any) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : (option.disabled !== undefined ? option.disabled : false);\n    }\n\n    writeValue(value: any): void {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    onOptionClick(event: Event, option: any) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n\n        if (this.multiple) {\n            if (this.checkbox)\n                this.onOptionClickCheckbox(event, option);\n            else\n                this.onOptionClickMultiple(event, option);\n        }\n        else {\n            this.onOptionClickSingle(event, option);\n        }\n        this.onClick.emit({\n            originalEvent: event,\n            option: option,\n            value: this.value\n        });\n        this.optionTouched = false;\n    }\n\n    onOptionTouchEnd(option: any) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n\n        this.optionTouched = true;\n    }\n\n    onOptionDoubleClick(event: Event, option: any): any {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n\n        this.onDblClick.emit({\n            originalEvent: event,\n            option: option,\n            value: this.value\n        })\n    }\n\n    onOptionClickSingle(event, option) {\n        let selected = this.isSelected(option);\n        let valueChanged = false;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n        if (metaSelection) {\n            let metaKey = (event.metaKey || event.ctrlKey);\n\n            if (selected) {\n                if (metaKey) {\n                    this.value = null;\n                    valueChanged = true;\n                }\n            }\n            else {\n                this.value = this.getOptionValue(option);\n                valueChanged = true;\n            }\n        }\n        else {\n            this.value = selected ? null : this.getOptionValue(option);\n            valueChanged = true;\n        }\n\n        if (valueChanged) {\n            this.onModelChange(this.value);\n            this.onChange.emit({\n                originalEvent: event,\n                value: this.value\n            });\n        }\n    }\n\n    onOptionClickMultiple(event, option) {\n        let selected = this.isSelected(option);\n        let valueChanged = false;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n        if (metaSelection) {\n            let metaKey = (event.metaKey || event.ctrlKey);\n\n            if (selected) {\n                if (metaKey) {\n                    this.removeOption(option);\n                }\n                else {\n                    this.value = [this.getOptionValue(option)];\n                }\n                valueChanged = true;\n            }\n            else {\n                this.value = (metaKey) ? this.value || [] : [];\n                this.value = [...this.value, this.getOptionValue(option)];\n                valueChanged = true;\n            }\n        }\n        else {\n            if (selected) {\n                this.removeOption(option);\n            }\n            else {\n                this.value = [...this.value || [], this.getOptionValue(option)];\n            }\n\n            valueChanged = true;\n        }\n\n        if (valueChanged) {\n            this.onModelChange(this.value);\n            this.onChange.emit({\n                originalEvent: event,\n                value: this.value\n            });\n        }\n    }\n\n    onOptionClickCheckbox(event, option) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n\n        let selected = this.isSelected(option);\n\n        if (selected) {\n            this.removeOption(option);\n        }\n        else {\n            this.value = this.value ? this.value : [];\n            this.value = [...this.value, this.getOptionValue(option)];\n        }\n\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n\n    removeOption(option: any): void {\n        this.value = this.value.filter(val => !ObjectUtils.equals(val, this.getOptionValue(option), this.dataKey));\n    }\n\n    isSelected(option: any) {\n        let selected = false;\n        let optionValue = this.getOptionValue(option);\n\n        if (this.multiple) {\n            if (this.value) {\n                for (let val of this.value) {\n                    if (ObjectUtils.equals(val, optionValue, this.dataKey)) {\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            selected = ObjectUtils.equals(this.value, optionValue, this.dataKey);\n        }\n\n        return selected;\n    }\n\n    get allChecked(): boolean {\n        let optionsToRender = this.optionsToRender;\n        if (!optionsToRender || optionsToRender.length === 0) {\n            return false;\n        }\n        else {\n            let selectedDisabledItemsLength = 0;\n            let unselectedDisabledItemsLength = 0;\n            let selectedEnabledItemsLength = 0;\n            let visibleOptionsLength = this.group ? 0 : this.optionsToRender.length;\n            \n            for (let option of optionsToRender) {\n                if (!this.group) {\n                    let disabled = this.isOptionDisabled(option);\n                    let selected = this.isSelected(option);\n    \n                    if (disabled) {\n                        if (selected)\n                            selectedDisabledItemsLength++;\n                        else \n                            unselectedDisabledItemsLength++;\n                    }\n                    else {\n                        if (selected)\n                            selectedEnabledItemsLength++;\n                        else\n                            return false;\n                    }\n                }\n                else if (option.items) {\n                    for (let opt of option.items) {\n                        let disabled = this.isOptionDisabled(opt);\n                        let selected = this.isSelected(opt);\n        \n                        if (disabled) {\n                            if (selected)\n                                selectedDisabledItemsLength++;\n                            else \n                                unselectedDisabledItemsLength++;\n                        }\n                        else {\n                            if (selected)\n                                selectedEnabledItemsLength++;\n                            else {\n                                return false;\n                            }\n                        }\n\n                        visibleOptionsLength++;\n                    }\n                }\n            }\n\n            return (visibleOptionsLength === selectedDisabledItemsLength \n                    || visibleOptionsLength === selectedEnabledItemsLength \n                    || selectedEnabledItemsLength && visibleOptionsLength === (selectedEnabledItemsLength + unselectedDisabledItemsLength + selectedDisabledItemsLength));\n        }\n    }\n\n    get optionsToRender(): any[] {\n        return this._filteredOptions || this.options;\n    }\n\n    hasFilter() {\n        return this._filterValue && this._filterValue.trim().length > 0; \n    }\n\n    onFilter(event: KeyboardEvent) {\n        this._filterValue = (<HTMLInputElement> event.target).value;\n        this.activateFilter();\n    }\n\n    activateFilter() {\n        if (this.hasFilter() && this._options) {\n            if (this.group) {\n                let searchFields: string[] = (this.optionLabel || 'label').split(',');\n\n                let filteredGroups = [];\n                for (let optgroup of this.options) {\n                    let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n                    if (filteredSubOptions && filteredSubOptions.length) {\n                        filteredGroups.push({\n                            label: optgroup.label,\n                            value: optgroup.value,\n                            items: filteredSubOptions\n                        });\n                    }\n                }\n\n                this._filteredOptions = filteredGroups;\n            }\n            else {\n                this._filteredOptions = this._options.filter(option => this.filterService.filters[this.filterMatchMode](this.getOptionLabel(option), this._filterValue, this.filterLocale));\n            }\n        }\n        else {\n            this._filteredOptions = null;\n        }\n    }\n\n    get toggleAllDisabled(): boolean {\n        let optionsToRender = this.optionsToRender;\n        if (!optionsToRender || optionsToRender.length === 0) {\n            return true;\n        }\n        else {\n            for (let option of optionsToRender) {\n                if (!this.isOptionDisabled(option))\n                    return false;\n            }\n\n            return true;\n        }\n    }\n\n    toggleAll(event) {\n        if (this.disabled || this.toggleAllDisabled || this.readonly) {\n            return;\n        }\n        \n        let allChecked = this.allChecked;     \n\n        if (allChecked)\n            this.uncheckAll();\n        else\n            this.checkAll();\n\n        this.onModelChange(this.value);\n        this.onChange.emit({ originalEvent: event, value: this.value });\n        event.preventDefault();\n    }\n\n    checkAll() {\n        let optionsToRender = this.optionsToRender;\n        let val: any[] = [];\n\n        optionsToRender.forEach(opt => {\n            if (!this.group) {\n                let optionDisabled = this.isOptionDisabled(opt); \n                if (!optionDisabled || (optionDisabled && this.isSelected(opt))) {\n                    val.push(this.getOptionValue(opt));\n                }\n            }\n            else {\n                if (opt.items) {\n                    opt.items.forEach(option => {\n                        let optionDisabled = this.isOptionDisabled(option); \n                        if (!optionDisabled || (optionDisabled && this.isSelected(option))) {\n                            val.push(this.getOptionValue(option));\n                        }\n                    });\n                }\n            }\n        });\n\n        this.value = val;\n    }\n\n    uncheckAll() {\n        let optionsToRender = this.optionsToRender;\n        let val: any[] = [];\n\n        optionsToRender.forEach(opt => {\n            if (!this.group) {\n                let optionDisabled = this.isOptionDisabled(opt); \n                if (optionDisabled && this.isSelected(opt)) {\n                    val.push(this.getOptionValue(opt));\n                }\n            }\n            else {\n                if (opt.items) {\n                    opt.items.forEach(option => {\n                        let optionDisabled = this.isOptionDisabled(option); \n                        if (optionDisabled && this.isSelected(option)) {\n                            val.push(this.getOptionValue(option));\n                        }\n                    });\n                }\n            }\n        });\n\n        this.value = val;\n    }\n\n    onOptionKeyDown(event:KeyboardEvent, option) {\n        if (this.readonly) {\n            return;\n        }\n\n        let item = <HTMLLIElement> event.currentTarget;\n\n        switch(event.which) {\n            //down\n            case 40:\n                var nextItem = this.findNextItem(item);\n                if (nextItem) {\n                    nextItem.focus();\n                }\n\n                event.preventDefault();\n            break;\n\n            //up\n            case 38:\n                var prevItem = this.findPrevItem(item);\n                if (prevItem) {\n                    prevItem.focus();\n                }\n\n                event.preventDefault();\n            break;\n\n            //enter\n            case 13:\n                this.onOptionClick(event, option);\n                event.preventDefault();\n            break;\n        }\n    }\n\n    findNextItem(item) {\n        let nextItem = item.nextElementSibling;\n\n        if (nextItem)\n            return DomHandler.hasClass(nextItem, 'p-disabled') || DomHandler.isHidden(nextItem) || DomHandler.hasClass(nextItem, 'p-listbox-item-group') ? this.findNextItem(nextItem) : nextItem;\n        else\n            return null;\n    }\n\n    findPrevItem(item) {\n        let prevItem = item.previousElementSibling;\n\n        if (prevItem)\n            return DomHandler.hasClass(prevItem, 'p-disabled') || DomHandler.isHidden(prevItem) || DomHandler.hasClass(prevItem, 'p-listbox-item-group') ? this.findPrevItem(prevItem) : prevItem;\n        else\n            return null;\n    }\n\n    onHeaderCheckboxFocus() {\n        this.headerCheckboxFocus = true;\n    }\n\n    onHeaderCheckboxBlur() {\n        this.headerCheckboxFocus = false;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, SharedModule, RippleModule],\n    exports: [Listbox, SharedModule],\n    declarations: [Listbox]\n})\nexport class ListboxModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}