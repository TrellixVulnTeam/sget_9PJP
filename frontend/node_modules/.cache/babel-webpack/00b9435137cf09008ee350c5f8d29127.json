{"ast":null,"code":"import _classCallCheck from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nvar _c0 = function _c0(a1, a2, a3) {\n  return {\n    \"p-inputswitch p-component\": true,\n    \"p-inputswitch-checked\": a1,\n    \"p-disabled\": a2,\n    \"p-focus\": a3\n  };\n};\n\nvar INPUTSWITCH_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return InputSwitch;\n  }),\n  multi: true\n};\n\nvar InputSwitch = /*#__PURE__*/function () {\n  function InputSwitch(cd) {\n    _classCallCheck(this, InputSwitch);\n\n    this.cd = cd;\n    this.onChange = new EventEmitter();\n    this.checked = false;\n    this.focused = false;\n\n    this.onModelChange = function () {};\n\n    this.onModelTouched = function () {};\n  }\n\n  _createClass(InputSwitch, [{\n    key: \"onClick\",\n    value: function onClick(event, cb) {\n      if (!this.disabled && !this.readonly) {\n        event.preventDefault();\n        this.toggle(event);\n        cb.focus();\n      }\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(event) {\n      if (!this.readonly) {\n        var inputChecked = event.target.checked;\n        this.updateModel(event, inputChecked);\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      this.updateModel(event, !this.checked);\n    }\n  }, {\n    key: \"updateModel\",\n    value: function updateModel(event, value) {\n      this.checked = value;\n      this.onModelChange(this.checked);\n      this.onChange.emit({\n        originalEvent: event,\n        checked: this.checked\n      });\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(event) {\n      this.focused = true;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      this.focused = false;\n      this.onModelTouched();\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(checked) {\n      this.checked = checked;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n  }]);\n\n  return InputSwitch;\n}();\n\nInputSwitch.ɵfac = function InputSwitch_Factory(t) {\n  return new (t || InputSwitch)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nInputSwitch.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: InputSwitch,\n  selectors: [[\"p-inputSwitch\"]],\n  inputs: {\n    disabled: \"disabled\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    tabindex: \"tabindex\",\n    inputId: \"inputId\",\n    name: \"name\",\n    readonly: \"readonly\",\n    ariaLabelledBy: \"ariaLabelledBy\"\n  },\n  outputs: {\n    onChange: \"onChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([INPUTSWITCH_VALUE_ACCESSOR])],\n  decls: 5,\n  vars: 15,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", \"role\", \"switch\", 3, \"checked\", \"disabled\", \"change\", \"focus\", \"blur\"], [\"cb\", \"\"], [1, \"p-inputswitch-slider\"]],\n  template: function InputSwitch_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r1 = ɵngcc0.ɵɵgetCurrentView();\n\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function InputSwitch_Template_div_click_0_listener($event) {\n        ɵngcc0.ɵɵrestoreView(_r1);\n\n        var _r0 = ɵngcc0.ɵɵreference(3);\n\n        return ctx.onClick($event, _r0);\n      });\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"input\", 2, 3);\n      ɵngcc0.ɵɵlistener(\"change\", function InputSwitch_Template_input_change_2_listener($event) {\n        return ctx.onInputChange($event);\n      })(\"focus\", function InputSwitch_Template_input_focus_2_listener($event) {\n        return ctx.onFocus($event);\n      })(\"blur\", function InputSwitch_Template_input_blur_2_listener($event) {\n        return ctx.onBlur($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(4, \"span\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(11, _c0, ctx.checked, ctx.disabled, ctx.focused))(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"tabindex\", ctx.tabindex)(\"aria-checked\", ctx.checked)(\"aria-labelledby\", ctx.ariaLabelledBy);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle],\n  styles: [\".p-inputswitch{-ms-user-select:none;-webkit-user-select:none;display:inline-block;position:relative;user-select:none}.p-inputswitch-slider{bottom:0;cursor:pointer;left:0;position:absolute;right:0;top:0}.p-inputswitch-slider:before{content:\\\"\\\";position:absolute;top:50%}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nInputSwitch.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\nInputSwitch.propDecorators = {\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  inputId: [{\n    type: Input\n  }],\n  name: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  ariaLabelledBy: [{\n    type: Input\n  }],\n  onChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputSwitch, [{\n    type: Component,\n    args: [{\n      selector: 'p-inputSwitch',\n      template: \"\\n        <div [ngClass]=\\\"{'p-inputswitch p-component': true, 'p-inputswitch-checked': checked, 'p-disabled': disabled, 'p-focus': focused}\\\" \\n            [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" (click)=\\\"onClick($event, cb)\\\">\\n            <div class=\\\"p-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [attr.tabindex]=\\\"tabindex\\\" [checked]=\\\"checked\\\" (change)=\\\"onInputChange($event)\\\"\\n                    (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\" [disabled]=\\\"disabled\\\" role=\\\"switch\\\" [attr.aria-checked]=\\\"checked\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\"/>\\n            </div>\\n            <span class=\\\"p-inputswitch-slider\\\"></span>\\n        </div>\\n    \",\n      providers: [INPUTSWITCH_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-inputswitch{-ms-user-select:none;-webkit-user-select:none;display:inline-block;position:relative;user-select:none}.p-inputswitch-slider{bottom:0;cursor:pointer;left:0;position:absolute;right:0;top:0}.p-inputswitch-slider:before{content:\\\"\\\";position:absolute;top:50%}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    onChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }]\n  });\n})();\n\nvar InputSwitchModule = function InputSwitchModule() {\n  _classCallCheck(this, InputSwitchModule);\n};\n\nInputSwitchModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: InputSwitchModule\n});\nInputSwitchModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function InputSwitchModule_Factory(t) {\n    return new (t || InputSwitchModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputSwitchModule, {\n    declarations: function declarations() {\n      return [InputSwitch];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [InputSwitch];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputSwitchModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [InputSwitch],\n      declarations: [InputSwitch]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { INPUTSWITCH_VALUE_ACCESSOR, InputSwitch, InputSwitchModule };","map":{"version":3,"sources":["../../src/app/components/inputswitch/inputswitch.ts","../../src/app/components/inputswitch/primeng-inputswitch.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,forwardRef,EventEmitter,Output,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR,ControlValueAccessor} from '@angular/forms';\n\nexport const INPUTSWITCH_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputSwitch),\n  multi: true\n};\n\n@Component({\n    selector: 'p-inputSwitch',\n    template: `\n        <div [ngClass]=\"{'p-inputswitch p-component': true, 'p-inputswitch-checked': checked, 'p-disabled': disabled, 'p-focus': focused}\" \n            [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick($event, cb)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.tabindex]=\"tabindex\" [checked]=\"checked\" (change)=\"onInputChange($event)\"\n                    (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" role=\"switch\" [attr.aria-checked]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\"/>\n            </div>\n            <span class=\"p-inputswitch-slider\"></span>\n        </div>\n    `,\n    providers: [INPUTSWITCH_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./inputswitch.css']\n})\nexport class InputSwitch implements ControlValueAccessor {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n\n    @Input() readonly: boolean;\n\n    @Input() ariaLabelledBy: string;\n    \n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    checked: boolean = false;\n\n    focused: boolean = false;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onClick(event: Event, cb: HTMLInputElement) {\n        if (!this.disabled && !this.readonly) {\n            event.preventDefault();\n            this.toggle(event);\n            cb.focus();\n        }\n    }\n\n    onInputChange(event: Event) {\n        if (!this.readonly) {\n            const inputChecked = (<HTMLInputElement> event.target).checked;\n            this.updateModel(event, inputChecked);\n        }\n    }\n\n    toggle(event: Event) {\n        this.updateModel(event, !this.checked);\n    }\n\n    updateModel(event: Event, value: boolean) {\n        this.checked = value;\n        this.onModelChange(this.checked);\n        this.onChange.emit({\n            originalEvent: event,\n            checked: this.checked\n        });\n    }\n\n    onFocus(event: Event) {\n        this.focused = true;\n    }\n\n    onBlur(event: Event) {\n        this.focused = false;\n        this.onModelTouched();\n    }\n\n    writeValue(checked: any) : void {\n        this.checked = checked;\n        this.cd.markForCheck();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputSwitch],\n    declarations: [InputSwitch]\n})\nexport class InputSwitchModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}