import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';
import { Observable } from 'rxjs';
import { PageNotificationService } from '../page-notification/page-notification.service';
import * as ɵngcc0 from '@angular/core';
export declare class SuccessMessageHandlerInterceptor implements HttpInterceptor {
    private notification;
    constructor(notification: PageNotificationService);
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SuccessMessageHandlerInterceptor, never>;
}
export declare const httpInterceptorProviders: {
    provide: import("@angular/core").InjectionToken<HttpInterceptor[]>;
    useClass: typeof SuccessMessageHandlerInterceptor;
    multi: boolean;
}[];

//# sourceMappingURL=success-message-handler.interceptor.d.ts.map