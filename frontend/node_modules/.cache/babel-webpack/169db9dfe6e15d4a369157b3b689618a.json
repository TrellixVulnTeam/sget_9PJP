{"ast":null,"code":"import _toConsumableArray from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"cb\"];\n\nvar _c1 = function _c1(a1, a2, a3) {\n  return {\n    \"p-checkbox-label\": true,\n    \"p-checkbox-label-active\": a1,\n    \"p-disabled\": a2,\n    \"p-checkbox-label-focus\": a3\n  };\n};\n\nfunction Checkbox_label_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function Checkbox_label_6_Template_label_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n      var _r0 = ɵngcc0.ɵɵreference(3);\n\n      return ctx_r2.onClick($event, _r0, true);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r1.labelStyleClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(5, _c1, ctx_r1.checked, ctx_r1.disabled, ctx_r1.focused));\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r1.inputId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.label);\n  }\n}\n\nvar _c2 = function _c2(a1, a2, a3) {\n  return {\n    \"p-checkbox p-component\": true,\n    \"p-checkbox-checked\": a1,\n    \"p-checkbox-disabled\": a2,\n    \"p-checkbox-focused\": a3\n  };\n};\n\nvar _c3 = function _c3(a0, a1, a2) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1,\n    \"p-focus\": a2\n  };\n};\n\nvar CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return Checkbox;\n  }),\n  multi: true\n};\n\nvar Checkbox = /*#__PURE__*/function () {\n  function Checkbox(cd) {\n    _classCallCheck(this, Checkbox);\n\n    this.cd = cd;\n    this.checkboxIcon = 'pi pi-check';\n    this.onChange = new EventEmitter();\n\n    this.onModelChange = function () {};\n\n    this.onModelTouched = function () {};\n\n    this.focused = false;\n    this.checked = false;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"onClick\",\n    value: function onClick(event, checkbox, focus) {\n      event.preventDefault();\n\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      this.checked = !this.checked;\n      this.updateModel(event);\n\n      if (focus) {\n        checkbox.focus();\n      }\n    }\n  }, {\n    key: \"updateModel\",\n    value: function updateModel(event) {\n      if (!this.binary) {\n        if (this.checked) this.addValue();else this.removeValue();\n        this.onModelChange(this.model);\n\n        if (this.formControl) {\n          this.formControl.setValue(this.model);\n        }\n      } else {\n        this.onModelChange(this.checked);\n      }\n\n      this.onChange.emit({\n        checked: this.checked,\n        originalEvent: event\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      if (!this.readonly) {\n        this.checked = event.target.checked;\n        this.updateModel(event);\n      }\n    }\n  }, {\n    key: \"isChecked\",\n    value: function isChecked() {\n      if (this.binary) return this.model;else return this.model && this.model.indexOf(this.value) > -1;\n    }\n  }, {\n    key: \"removeValue\",\n    value: function removeValue() {\n      var _this = this;\n\n      this.model = this.model.filter(function (val) {\n        return val !== _this.value;\n      });\n    }\n  }, {\n    key: \"addValue\",\n    value: function addValue() {\n      if (this.model) this.model = [].concat(_toConsumableArray(this.model), [this.value]);else this.model = [this.value];\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.focused = true;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.focused = false;\n      this.onModelTouched();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.inputViewChild.nativeElement.focus();\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(model) {\n      this.model = model;\n      this.checked = this.isChecked();\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n  }]);\n\n  return Checkbox;\n}();\n\nCheckbox.ɵfac = function Checkbox_Factory(t) {\n  return new (t || Checkbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Checkbox,\n  selectors: [[\"p-checkbox\"]],\n  viewQuery: function Checkbox_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputViewChild = _t.first);\n    }\n  },\n  inputs: {\n    checkboxIcon: \"checkboxIcon\",\n    disabled: \"disabled\",\n    value: \"value\",\n    name: \"name\",\n    binary: \"binary\",\n    label: \"label\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    ariaLabel: \"ariaLabel\",\n    tabindex: \"tabindex\",\n    inputId: \"inputId\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    labelStyleClass: \"labelStyleClass\",\n    formControl: \"formControl\",\n    readonly: \"readonly\",\n    required: \"required\"\n  },\n  outputs: {\n    onChange: \"onChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])],\n  decls: 7,\n  vars: 26,\n  consts: [[3, \"ngStyle\", \"ngClass\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"readonly\", \"value\", \"checked\", \"disabled\", \"focus\", \"blur\", \"change\"], [\"cb\", \"\"], [1, \"p-checkbox-box\", 3, \"ngClass\", \"click\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"], [3, \"class\", \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"]],\n  template: function Checkbox_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"input\", 2, 3);\n      ɵngcc0.ɵɵlistener(\"focus\", function Checkbox_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function Checkbox_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      })(\"change\", function Checkbox_Template_input_change_2_listener($event) {\n        return ctx.handleChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n      ɵngcc0.ɵɵlistener(\"click\", function Checkbox_Template_div_click_4_listener($event) {\n        ɵngcc0.ɵɵrestoreView(_r4);\n\n        var _r0 = ɵngcc0.ɵɵreference(3);\n\n        return ctx.onClick($event, _r0, true);\n      });\n      ɵngcc0.ɵɵelement(5, \"span\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(6, Checkbox_label_6_Template, 2, 9, \"label\", 6);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ɵngcc0.ɵɵpureFunction3(18, _c2, ctx.checked, ctx.disabled, ctx.focused));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"readonly\", ctx.readonly)(\"value\", ctx.value)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"tabindex\", ctx.tabindex)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"aria-checked\", ctx.checked)(\"required\", ctx.required);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(22, _c3, ctx.checked, ctx.disabled, ctx.focused));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.checked ? ctx.checkboxIcon : null);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.label);\n    }\n  },\n  directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass, ɵngcc1.NgIf],\n  styles: [\".p-checkbox{-ms-user-select:none;-webkit-user-select:none;cursor:pointer;display:inline-flex;user-select:none;vertical-align:bottom}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{align-items:center;display:flex;justify-content:center}p-checkbox{align-items:center;display:inline-flex;vertical-align:bottom}.p-checkbox-label{line-height:1}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nCheckbox.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\nCheckbox.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  name: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  binary: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  ariaLabelledBy: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  inputId: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  labelStyleClass: [{\n    type: Input\n  }],\n  formControl: [{\n    type: Input\n  }],\n  checkboxIcon: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  required: [{\n    type: Input\n  }],\n  inputViewChild: [{\n    type: ViewChild,\n    args: ['cb']\n  }],\n  onChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Checkbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-checkbox',\n      template: \"\\n        <div [ngStyle]=\\\"style\\\" [ngClass]=\\\"{'p-checkbox p-component': true, 'p-checkbox-checked': checked, 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused}\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"p-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [readonly]=\\\"readonly\\\" [value]=\\\"value\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\"\\n                (change)=\\\"handleChange($event)\\\" [disabled]=\\\"disabled\\\" [attr.tabindex]=\\\"tabindex\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-checked]=\\\"checked\\\" [attr.required]=\\\"required\\\">\\n            </div>\\n            <div class=\\\"p-checkbox-box\\\" (click)=\\\"onClick($event,cb,true)\\\"\\n                        [ngClass]=\\\"{'p-highlight': checked, 'p-disabled': disabled, 'p-focus': focused}\\\">\\n                <span class=\\\"p-checkbox-icon\\\" [ngClass]=\\\"checked ? checkboxIcon : null\\\"></span>\\n            </div>\\n        </div>\\n        <label (click)=\\\"onClick($event,cb,true)\\\" [class]=\\\"labelStyleClass\\\"\\n                [ngClass]=\\\"{'p-checkbox-label': true, 'p-checkbox-label-active':checked, 'p-disabled':disabled, 'p-checkbox-label-focus':focused}\\\"\\n                *ngIf=\\\"label\\\" [attr.for]=\\\"inputId\\\">{{label}}</label>\\n    \",\n      providers: [CHECKBOX_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-checkbox{-ms-user-select:none;-webkit-user-select:none;cursor:pointer;display:inline-flex;user-select:none;vertical-align:bottom}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{align-items:center;display:flex;justify-content:center}p-checkbox{align-items:center;display:inline-flex;vertical-align:bottom}.p-checkbox-label{line-height:1}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    checkboxIcon: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    binary: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    labelStyleClass: [{\n      type: Input\n    }],\n    formControl: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    inputViewChild: [{\n      type: ViewChild,\n      args: ['cb']\n    }]\n  });\n})();\n\nvar CheckboxModule = function CheckboxModule() {\n  _classCallCheck(this, CheckboxModule);\n};\n\nCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CheckboxModule\n});\nCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CheckboxModule_Factory(t) {\n    return new (t || CheckboxModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CheckboxModule, {\n    declarations: function declarations() {\n      return [Checkbox];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [Checkbox];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Checkbox],\n      declarations: [Checkbox]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CHECKBOX_VALUE_ACCESSOR, Checkbox, CheckboxModule };","map":{"version":3,"sources":["../../src/app/components/checkbox/checkbox.ts","../../src/app/components/checkbox/primeng-checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ViewChild,ElementRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl} from '@angular/forms';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n\n@Component({\n    selector: 'p-checkbox',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'p-checkbox p-component': true, 'p-checkbox-checked': checked, 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused}\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-label]=\"ariaLabel\" [attr.aria-checked]=\"checked\" [attr.required]=\"required\">\n            </div>\n            <div class=\"p-checkbox-box\" (click)=\"onClick($event,cb,true)\"\n                        [ngClass]=\"{'p-highlight': checked, 'p-disabled': disabled, 'p-focus': focused}\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'p-checkbox-label': true, 'p-checkbox-label-active':checked, 'p-disabled':disabled, 'p-checkbox-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./checkbox.css']\n})\nexport class Checkbox implements ControlValueAccessor {\n\n    @Input() value: any;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() binary: boolean;\n    \n    @Input() label: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() ariaLabel: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n    \n    @Input() formControl: FormControl;\n    \n    @Input() checkboxIcon: string = 'pi pi-check';\n    \n    @Input() readonly: boolean;\n\n    @Input() required: boolean;\n\n    @ViewChild('cb') inputViewChild: ElementRef;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    model: any;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n        \n    focused: boolean = false;\n    \n    checked: boolean = false;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onClick(event,checkbox,focus:boolean) {\n        event.preventDefault();\n        \n        if (this.disabled || this.readonly) {\n            return;\n        }\n        \n        this.checked = !this.checked;\n        this.updateModel(event);\n        \n        if (focus) {\n            checkbox.focus();\n        }\n    }\n    \n    updateModel(event) {\n        if (!this.binary) {\n            if (this.checked)\n                this.addValue();\n            else\n                this.removeValue();\n\n            this.onModelChange(this.model);\n            \n            if (this.formControl) {\n                this.formControl.setValue(this.model);\n            }\n        }\n        else {\n            this.onModelChange(this.checked);\n        }\n        \n        this.onChange.emit({checked:this.checked, originalEvent: event});\n    }\n    \n    handleChange(event) {\n        if (!this.readonly) {\n            this.checked = event.target.checked;\n            this.updateModel(event);\n        }\n    }\n\n    isChecked(): boolean {\n        if (this.binary)\n            return this.model;\n        else\n            return this.model && this.model.indexOf(this.value) > -1;\n    }\n\n    removeValue() {\n        this.model = this.model.filter(val => val !== this.value);\n    }\n\n    addValue() {\n        if (this.model)\n            this.model = [...this.model, this.value];\n        else\n            this.model = [this.value];\n    }\n    \n    onFocus() {\n        this.focused = true;\n    }\n\n    onBlur() {\n        this.focused = false;\n        this.onModelTouched();\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n     \n    writeValue(model: any) : void {\n        this.model = model;\n        this.checked = this.isChecked();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Checkbox],\n    declarations: [Checkbox]\n})\nexport class CheckboxModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}