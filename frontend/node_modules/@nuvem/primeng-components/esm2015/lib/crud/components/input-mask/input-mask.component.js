import { Component, Input } from "@angular/core";
import { provideValueAccessor } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../form-notification/form-notification.component';
import * as ɵngcc2 from 'primeng/inputmask';
import * as ɵngcc3 from 'primeng/inputtext';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from '../validation-message/validation-message.component';

const _c0 = ["nInputMask", ""];
function InputMaskComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r2.formControl);
} }
const _c1 = function (a0) { return { "ng-invalid ng-dirty": a0 }; };
const _c2 = ["*"];
export class InputMaskComponent extends FieldComponent {
}
InputMaskComponent.ɵfac = function InputMaskComponent_Factory(t) { return ɵInputMaskComponent_BaseFactory(t || InputMaskComponent); };
InputMaskComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputMaskComponent, selectors: [["", "nInputMask", ""]], inputs: { mask: "mask", placeholder: "placeholder" }, features: [ɵngcc0.ɵɵProvidersFeature([provideValueAccessor(InputMaskComponent)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c2, decls: 7, vars: 12, consts: [["form-notification", "", 1, "p-float-label", 3, "name", "form"], ["notification", ""], ["pInputText", "", 3, "ngClass", "name", "formControl", "mask", "placeholder", "onBlur", "onFocus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function InputMaskComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-inputMask", 2, 3);
        ɵngcc0.ɵɵlistener("onBlur", function InputMaskComponent_Template_p_inputMask_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onFocus", function InputMaskComponent_Template_p_inputMask_onFocus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, InputMaskComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c1, _r0.message))("name", ctx.name)("formControl", ctx.formControl)("mask", ctx.mask)("placeholder", ctx.placeholder);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r0.message);
    } }, directives: [ɵngcc1.FormNotificationComponent, ɵngcc2.InputMask, ɵngcc3.InputText, ɵngcc4.NgClass, ɵngcc5.NgControlStatus, ɵngcc5.FormControlDirective, ɵngcc4.NgIf, ɵngcc6.ValidationMessageComponent], encapsulation: 2 });
InputMaskComponent.propDecorators = {
    mask: [{ type: Input }],
    placeholder: [{ type: Input }]
};
const ɵInputMaskComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(InputMaskComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputMaskComponent, [{
        type: Component,
        args: [{
                selector: "[nInputMask]",
                template: "<span #notification form-notification class=\"p-float-label\" [name]=\"name\" [form]=\"form\">\n    <p-inputMask #input\n        pInputText\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        [name]=\"name\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        [formControl]=\"formControl\"\n        [mask]=\"mask\"\n        [placeholder]=\"placeholder\"></p-inputMask>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [provideValueAccessor(InputMaskComponent)]
            }]
    }], null, { mask: [{
            type: Input
        }], placeholder: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtbWFzay5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3ByaW1lbmctY29tcG9uZW50cy9zcmMvbGliL2NydWQvY29tcG9uZW50cy9pbnB1dC1tYXNrL2lucHV0LW1hc2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzNELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT3BELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxjQUFzQjtBQUM5RDs4Q0FOQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLGNBQWMsa0JBQ3hCO3FvQkFBMEMsa0JBQzFDLFNBQVMsRUFBRSxDQUFFLG9CQUFvQixDQUFDO2VBQWtCLENBQUMsQ0FBRSxjQUMxRDs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NPQUNJO0FBQUM7QUFBc0MsbUJBRXZDLEtBQUs7QUFDUiwwQkFFRyxLQUFLO0FBQ1Q7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgcHJvdmlkZVZhbHVlQWNjZXNzb3IgfSBmcm9tIFwiQG51dmVtL2FuZ3VsYXItYmFzZVwiO1xuaW1wb3J0IHsgRmllbGRDb21wb25lbnQgfSBmcm9tIFwiLi4vZmllbGQuY29tcG9uZW50XCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcIltuSW5wdXRNYXNrXVwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vaW5wdXQtbWFzay5jb21wb25lbnQuaHRtbFwiLFxuICAgIHByb3ZpZGVyczogWyBwcm92aWRlVmFsdWVBY2Nlc3NvcihJbnB1dE1hc2tDb21wb25lbnQpIF0sXG59KVxuZXhwb3J0IGNsYXNzIElucHV0TWFza0NvbXBvbmVudCBleHRlbmRzIEZpZWxkQ29tcG9uZW50PHN0cmluZz4ge1xuXG4gICAgQElucHV0KClcbiAgICBtYXNrOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKVxuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG5cbn1cbiJdfQ==