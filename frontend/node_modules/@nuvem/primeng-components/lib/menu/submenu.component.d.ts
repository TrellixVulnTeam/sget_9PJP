import { MenusService } from './menu.service';
import { Subscription } from 'rxjs';
import { Router } from '@angular/router';
import * as ɵngcc0 from '@angular/core';
export declare class SubMenuComponent {
    menuService: MenusService;
    router: Router;
    item: any;
    root: boolean;
    visible: boolean;
    parentKey: string;
    index: number;
    active: boolean;
    _reset: boolean;
    _parentActive: boolean;
    activeIndex: number;
    key: string;
    menuSourceSubscription: Subscription;
    menuResetSubscription: Subscription;
    constructor(menuService: MenusService, router: Router);
    updateActiveStateFromRoute(): void;
    /**
     * Alterar o menu root entre aberto e fechado
     */
    private rootMenuToggle;
    /**
     * Activa o menu por index e desativa o item ativo
     * @param index
     */
    private activeMenuByIndex;
    /**
     * Verifica se foi informado um comando para o item de menu e executa caso necessário
     * @param item menu
     */
    private execCommand;
    /**
     * Esconte o menu caso este não possua itens
     * @param item menu
     */
    private hideMenu;
    itemClick(event: Event): boolean;
    onMouseEnter(): void;
    isActive(index: number): boolean;
    get reset(): boolean;
    set reset(val: boolean);
    get parentActive(): boolean;
    set parentActive(val: boolean);
    removeActiveInk(event: Event): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SubMenuComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SubMenuComponent, "[submenu]", never, { "reset": "reset"; "parentActive": "parentActive"; "item": "item"; "root": "root"; "visible": "visible"; "parentKey": "parentKey"; "index": "index"; }, {}, never, never>;
}

//# sourceMappingURL=submenu.component.d.ts.map