{"ast":null,"code":"import _classCallCheck from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Directive, ElementRef, Optional, ChangeDetectorRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { NgModel, NgControl } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/forms';\n\nvar InputTextarea = /*#__PURE__*/function () {\n  function InputTextarea(el, ngModel, control, cd) {\n    _classCallCheck(this, InputTextarea);\n\n    this.el = el;\n    this.ngModel = ngModel;\n    this.control = control;\n    this.cd = cd;\n    this.onResize = new EventEmitter();\n  }\n\n  _createClass(InputTextarea, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      if (this.ngModel) {\n        this.ngModelSubscription = this.ngModel.valueChanges.subscribe(function () {\n          _this.updateState();\n        });\n      }\n\n      if (this.control) {\n        this.ngControlSubscription = this.control.valueChanges.subscribe(function () {\n          _this.updateState();\n        });\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.autoResize) this.resize();\n      this.updateFilledState();\n      this.cd.detectChanges();\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(e) {\n      this.updateState();\n    }\n  }, {\n    key: \"updateFilledState\",\n    value: function updateFilledState() {\n      this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(e) {\n      if (this.autoResize) {\n        this.resize(e);\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(e) {\n      if (this.autoResize) {\n        this.resize(e);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(event) {\n      this.el.nativeElement.style.height = 'auto';\n      this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n      if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n        this.el.nativeElement.style.overflowY = \"scroll\";\n        this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n      } else {\n        this.el.nativeElement.style.overflow = \"hidden\";\n      }\n\n      this.onResize.emit(event || {});\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState() {\n      this.updateFilledState();\n\n      if (this.autoResize) {\n        this.resize();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.ngModelSubscription) {\n        this.ngModelSubscription.unsubscribe();\n      }\n\n      if (this.ngControlSubscription) {\n        this.ngControlSubscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return InputTextarea;\n}();\n\nInputTextarea.ɵfac = function InputTextarea_Factory(t) {\n  return new (t || InputTextarea)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgModel, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgControl, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nInputTextarea.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: InputTextarea,\n  selectors: [[\"\", \"pInputTextarea\", \"\"]],\n  hostVars: 10,\n  hostBindings: function InputTextarea_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function InputTextarea_input_HostBindingHandler($event) {\n        return ctx.onInput($event);\n      })(\"focus\", function InputTextarea_focus_HostBindingHandler($event) {\n        return ctx.onFocus($event);\n      })(\"blur\", function InputTextarea_blur_HostBindingHandler($event) {\n        return ctx.onBlur($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"p-inputtextarea\", true)(\"p-inputtext\", true)(\"p-component\", true)(\"p-filled\", ctx.filled)(\"p-inputtextarea-resizable\", ctx.autoResize);\n    }\n  },\n  inputs: {\n    autoResize: \"autoResize\"\n  },\n  outputs: {\n    onResize: \"onResize\"\n  }\n});\n\nInputTextarea.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgModel,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: NgControl,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nInputTextarea.propDecorators = {\n  autoResize: [{\n    type: Input\n  }],\n  onResize: [{\n    type: Output\n  }],\n  onInput: [{\n    type: HostListener,\n    args: ['input', ['$event']]\n  }],\n  onFocus: [{\n    type: HostListener,\n    args: ['focus', ['$event']]\n  }],\n  onBlur: [{\n    type: HostListener,\n    args: ['blur', ['$event']]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputTextarea, [{\n    type: Directive,\n    args: [{\n      selector: '[pInputTextarea]',\n      host: {\n        '[class.p-inputtextarea]': 'true',\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled',\n        '[class.p-inputtextarea-resizable]': 'autoResize'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.NgModel,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc1.NgControl,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    onResize: [{\n      type: Output\n    }],\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focus', ['$event']]\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur', ['$event']]\n    }],\n    autoResize: [{\n      type: Input\n    }]\n  });\n})();\n\nvar InputTextareaModule = function InputTextareaModule() {\n  _classCallCheck(this, InputTextareaModule);\n};\n\nInputTextareaModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: InputTextareaModule\n});\nInputTextareaModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function InputTextareaModule_Factory(t) {\n    return new (t || InputTextareaModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputTextareaModule, {\n    declarations: function declarations() {\n      return [InputTextarea];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [InputTextarea];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputTextareaModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [InputTextarea],\n      declarations: [InputTextarea]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { InputTextarea, InputTextareaModule };","map":{"version":3,"sources":["../../src/app/components/inputtextarea/inputtextarea.ts","../../src/app/components/inputtextarea/primeng-inputtextarea.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output, EventEmitter,Optional, AfterViewInit, OnInit, OnDestroy, ChangeDetectorRef} from '@angular/core';\nimport {NgModel, NgControl} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.p-inputtextarea]': 'true',\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled',\n        '[class.p-inputtextarea-resizable]': 'autoResize'\n    }\n})\nexport class InputTextarea implements OnInit, AfterViewInit, OnDestroy  {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    ngModelSubscription: Subscription;\n\n    ngControlSubscription: Subscription;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel, @Optional() public control : NgControl, private cd: ChangeDetectorRef) {}\n        \n    ngOnInit() {\n        if (this.ngModel) {\n            this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() =>{\n                this.updateState();\n            })\n        }\n\n        if (this.control) {\n            this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.autoResize)\n            this.resize();\n\n        this.updateFilledState();\n        this.cd.detectChanges();\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateState();\n    }\n    \n    updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n\n    updateState() {\n        this.updateFilledState();\n            \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.ngModelSubscription) {\n            this.ngModelSubscription.unsubscribe();\n        }\n\n        if (this.ngControlSubscription) {\n            this.ngControlSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}