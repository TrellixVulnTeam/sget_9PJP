{"ast":null,"code":"import _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Input, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { Subject } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction Terminal_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.welcomeMessage);\n  }\n}\n\nfunction Terminal_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"span\", 8);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"span\", 9);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 10);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var command_r3 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.prompt);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(command_r3.text);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(command_r3.response);\n  }\n}\n\nvar TerminalService = /*#__PURE__*/function () {\n  function TerminalService() {\n    _classCallCheck(this, TerminalService);\n\n    this.commandSource = new Subject();\n    this.responseSource = new Subject();\n    this.commandHandler = this.commandSource.asObservable();\n    this.responseHandler = this.responseSource.asObservable();\n  }\n\n  _createClass(TerminalService, [{\n    key: \"sendCommand\",\n    value: function sendCommand(command) {\n      if (command) {\n        this.commandSource.next(command);\n      }\n    }\n  }, {\n    key: \"sendResponse\",\n    value: function sendResponse(response) {\n      if (response) {\n        this.responseSource.next(response);\n      }\n    }\n  }]);\n\n  return TerminalService;\n}();\n\nTerminalService.ɵfac = function TerminalService_Factory(t) {\n  return new (t || TerminalService)();\n};\n\nTerminalService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TerminalService,\n  factory: TerminalService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TerminalService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar Terminal = /*#__PURE__*/function () {\n  function Terminal(el, terminalService, cd) {\n    var _this = this;\n\n    _classCallCheck(this, Terminal);\n\n    this.el = el;\n    this.terminalService = terminalService;\n    this.cd = cd;\n    this.commands = [];\n    this.subscription = terminalService.responseHandler.subscribe(function (response) {\n      _this.commands[_this.commands.length - 1].response = response;\n      _this.commandProcessed = true;\n    });\n  }\n\n  _createClass(Terminal, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.container = DomHandler.find(this.el.nativeElement, '.p-terminal')[0];\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (this.commandProcessed) {\n        this.container.scrollTop = this.container.scrollHeight;\n        this.commandProcessed = false;\n      }\n    }\n  }, {\n    key: \"response\",\n    set: function set(value) {\n      if (value) {\n        this.commands[this.commands.length - 1].response = value;\n        this.commandProcessed = true;\n      }\n    }\n  }, {\n    key: \"handleCommand\",\n    value: function handleCommand(event) {\n      if (event.keyCode == 13) {\n        this.commands.push({\n          text: this.command\n        });\n        this.terminalService.sendCommand(this.command);\n        this.command = '';\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus(element) {\n      element.focus();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return Terminal;\n}();\n\nTerminal.ɵfac = function Terminal_Factory(t) {\n  return new (t || Terminal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(TerminalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nTerminal.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Terminal,\n  selectors: [[\"p-terminal\"]],\n  inputs: {\n    response: \"response\",\n    welcomeMessage: \"welcomeMessage\",\n    prompt: \"prompt\",\n    style: \"style\",\n    styleClass: \"styleClass\"\n  },\n  decls: 9,\n  vars: 8,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [4, \"ngIf\"], [1, \"p-terminal-content\"], [4, \"ngFor\", \"ngForOf\"], [1, \"p-terminal-prompt-container\"], [1, \"p-terminal-content-prompt\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"autofocus\", \"\", 1, \"p-terminal-input\", 3, \"ngModel\", \"ngModelChange\", \"keydown\"], [\"in\", \"\"], [1, \"p-terminal-prompt\"], [1, \"p-terminal-command\"], [1, \"p-terminal-response\"]],\n  template: function Terminal_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function Terminal_Template_div_click_0_listener() {\n        ɵngcc0.ɵɵrestoreView(_r4);\n\n        var _r2 = ɵngcc0.ɵɵreference(8);\n\n        return ctx.focus(_r2);\n      });\n      ɵngcc0.ɵɵtemplate(1, Terminal_div_1_Template, 2, 1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, Terminal_div_3_Template, 7, 3, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n      ɵngcc0.ɵɵelementStart(5, \"span\", 5);\n      ɵngcc0.ɵɵtext(6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(7, \"input\", 6, 7);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function Terminal_Template_input_ngModelChange_7_listener($event) {\n        return ctx.command = $event;\n      })(\"keydown\", function Terminal_Template_input_keydown_7_listener($event) {\n        return ctx.handleCommand($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", \"p-terminal p-component\")(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.welcomeMessage);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.commands);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵtextInterpolate(ctx.prompt);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngModel\", ctx.command);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel],\n  styles: [\".p-terminal{height:18rem;overflow:auto}.p-terminal-prompt-container{align-items:center;display:flex}.p-terminal-input{background-color:transparent;border:0;color:inherit;flex:1 1 auto;outline:0 none;padding:0}.p-terminal-input::-ms-clear{display:none}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nTerminal.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: TerminalService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nTerminal.propDecorators = {\n  welcomeMessage: [{\n    type: Input\n  }],\n  prompt: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  response: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Terminal, [{\n    type: Component,\n    args: [{\n      selector: 'p-terminal',\n      template: \"\\n        <div [ngClass]=\\\"'p-terminal p-component'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" (click)=\\\"focus(in)\\\">\\n            <div *ngIf=\\\"welcomeMessage\\\">{{welcomeMessage}}</div>\\n            <div class=\\\"p-terminal-content\\\">\\n                <div *ngFor=\\\"let command of commands\\\">\\n                    <span class=\\\"p-terminal-prompt\\\">{{prompt}}</span>\\n                    <span class=\\\"p-terminal-command\\\">{{command.text}}</span>\\n                    <div class=\\\"p-terminal-response\\\">{{command.response}}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"p-terminal-prompt-container\\\">\\n                <span class=\\\"p-terminal-content-prompt\\\">{{prompt}}</span>\\n                <input #in type=\\\"text\\\" [(ngModel)]=\\\"command\\\" class=\\\"p-terminal-input\\\" autocomplete=\\\"off\\\" (keydown)=\\\"handleCommand($event)\\\" autofocus>\\n            </div>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-terminal{height:18rem;overflow:auto}.p-terminal-prompt-container{align-items:center;display:flex}.p-terminal-input{background-color:transparent;border:0;color:inherit;flex:1 1 auto;outline:0 none;padding:0}.p-terminal-input::-ms-clear{display:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: TerminalService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    response: [{\n      type: Input\n    }],\n    welcomeMessage: [{\n      type: Input\n    }],\n    prompt: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TerminalModule = function TerminalModule() {\n  _classCallCheck(this, TerminalModule);\n};\n\nTerminalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TerminalModule\n});\nTerminalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function TerminalModule_Factory(t) {\n    return new (t || TerminalModule)();\n  },\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TerminalModule, {\n    declarations: function declarations() {\n      return [Terminal];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule];\n    },\n    exports: function exports() {\n      return [Terminal];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TerminalModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule],\n      exports: [Terminal],\n      declarations: [Terminal]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Terminal, TerminalModule, TerminalService };","map":{"version":3,"sources":["../../src/app/components/terminal/terminalservice.ts","../../src/app/components/terminal/terminal.ts","../../src/app/components/terminal/primeng-terminal.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TerminalService {\n    \n    private commandSource = new Subject<string>();\n    private responseSource = new Subject<string>();\n    \n    commandHandler = this.commandSource.asObservable();\n    responseHandler = this.responseSource.asObservable();\n    \n    sendCommand(command: string) {\n        if (command) {\n            this.commandSource.next(command);\n        }\n    }\n    \n    sendResponse(response: string) {\n        if (response) {\n            this.responseSource.next(response);\n        }\n    }\n}","import {NgModule,Component,AfterViewInit,AfterViewChecked,OnDestroy,Input,ElementRef,ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {TerminalService} from './terminalservice';\nimport {Subscription}   from 'rxjs';\n\n@Component({\n    selector: 'p-terminal',\n    template: `\n        <div [ngClass]=\"'p-terminal p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"focus(in)\">\n            <div *ngIf=\"welcomeMessage\">{{welcomeMessage}}</div>\n            <div class=\"p-terminal-content\">\n                <div *ngFor=\"let command of commands\">\n                    <span class=\"p-terminal-prompt\">{{prompt}}</span>\n                    <span class=\"p-terminal-command\">{{command.text}}</span>\n                    <div class=\"p-terminal-response\">{{command.response}}</div>\n                </div>\n            </div>\n            <div class=\"p-terminal-prompt-container\">\n                <span class=\"p-terminal-content-prompt\">{{prompt}}</span>\n                <input #in type=\"text\" [(ngModel)]=\"command\" class=\"p-terminal-input\" autocomplete=\"off\" (keydown)=\"handleCommand($event)\" autofocus>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./terminal.css']\n})\nexport class Terminal implements AfterViewInit,AfterViewChecked,OnDestroy {\n\n    @Input() welcomeMessage: string;\n\n    @Input() prompt: string;\n        \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n            \n    commands: any[] = [];\n    \n    command: string;\n    \n    container: Element;\n    \n    commandProcessed: boolean;\n    \n    subscription: Subscription;\n    \n    constructor(public el: ElementRef, public terminalService: TerminalService, public cd: ChangeDetectorRef) {\n        this.subscription = terminalService.responseHandler.subscribe(response => {\n            this.commands[this.commands.length - 1].response = response;\n            this.commandProcessed = true;\n        });\n    }\n    \n    ngAfterViewInit() {\n        this.container = DomHandler.find(this.el.nativeElement, '.p-terminal')[0];\n    }\n    \n    ngAfterViewChecked() {\n        if (this.commandProcessed) {\n            this.container.scrollTop = this.container.scrollHeight;\n            this.commandProcessed = false;\n        }\n    }\n                \n    @Input()\n    set response(value: string) {\n        if (value) {\n            this.commands[this.commands.length - 1].response = value;\n            this.commandProcessed = true;\n        }\n    }\n    \n    handleCommand(event: KeyboardEvent) {\n        if (event.keyCode == 13) {\n            this.commands.push({text: this.command});\n            this.terminalService.sendCommand(this.command);\n            this.command = '';\n        }\n    }\n    \n    focus(element: HTMLElement) {\n        element.focus();\n    }\n    \n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    \n}\n\n@NgModule({\n    imports: [CommonModule,FormsModule],\n    exports: [Terminal],\n    declarations: [Terminal]\n})\nexport class TerminalModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}