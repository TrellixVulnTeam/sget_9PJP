import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from "@angular/common/http";
import { Observable } from "rxjs";
import { FormNotificationService } from "../services/form-notification.service";
/**
 * Implementação de classe para interceptar e tratar requisições http/https
 * @class
 */
import * as ɵngcc0 from '@angular/core';
export declare class FormNotificationInterceptor implements HttpInterceptor {
    private formNotificationService;
    /**
     * Método construtor
     * @constructor
     * @param {AbstractAuthentication} auth
     */
    constructor(formNotificationService: FormNotificationService);
    /**
     * Método responsável por interceptar requisições HTTP/HTTPS
     * @public
     * @param {HttpRequest<any>} request
     * @param {HttpHandler} next
     * @returns Observable<HttpEvent<any>>
     */
    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FormNotificationInterceptor, never>;
}

//# sourceMappingURL=form-notification.interceptor.d.ts.map