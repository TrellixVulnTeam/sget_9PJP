{"version":3,"file":"authorization.service.d.ts","sources":["authorization.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Authorization } from './authorization';\nimport { Authentication } from '../authentication';\nimport { User } from '../user';\n/**\n * Serviço de autorização\n * @class\n */\nexport declare class AuthorizationService extends Authorization {\n    private authenticationService;\n    /**\n     * Método construtor para a injeção do serviço de configuração AuthConfig\n     * @constructor\n     * @param {AuthConfig} config\n     */\n    constructor(authenticationService: Authentication<User>);\n    /**\n     * Método responsável por identificar as regras de acesso\n     * @public\n     * @param {any} role\n     * @returns boolean\n     */\n    hasRole(role: any): boolean;\n}\n"]}