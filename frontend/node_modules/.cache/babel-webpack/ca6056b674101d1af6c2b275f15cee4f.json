{"ast":null,"code":"import _classCallCheck from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Renderer2, ChangeDetectorRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslationKeys, ConfirmationService, PrimeNGConfig } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'primeng/api';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'primeng/button';\n\nfunction ConfirmPopup_div_0_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMap(ctx_r2.confirmation.icon);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"p-confirm-popup-icon\");\n  }\n}\n\nfunction ConfirmPopup_div_0_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function ConfirmPopup_div_0_button_7_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r5.reject();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMap(ctx_r3.confirmation.rejectButtonStyleClass || \"p-button-text\");\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r3.confirmation.rejectIcon)(\"label\", ctx_r3.rejectButtonLabel)(\"ngClass\", \"p-confirm-popup-reject p-button-sm\");\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r3.rejectButtonLabel);\n  }\n}\n\nfunction ConfirmPopup_div_0_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function ConfirmPopup_div_0_button_8_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.accept();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMap(ctx_r4.confirmation.acceptButtonStyleClass);\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r4.confirmation.acceptIcon)(\"label\", ctx_r4.acceptButtonLabel)(\"ngClass\", \"p-confirm-popup-accept p-button-sm\");\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r4.acceptButtonLabel);\n  }\n}\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nvar _c1 = function _c1(a1) {\n  return {\n    value: \"open\",\n    params: a1\n  };\n};\n\nfunction ConfirmPopup_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵlistener(\"@animation.start\", function ConfirmPopup_div_0_Template_div_animation_animation_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onAnimationStart($event);\n    })(\"@animation.done\", function ConfirmPopup_div_0_Template_div_animation_animation_done_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onAnimationEnd($event);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2, 3);\n    ɵngcc0.ɵɵtemplate(3, ConfirmPopup_div_0_i_3_Template, 1, 3, \"i\", 4);\n    ɵngcc0.ɵɵelementStart(4, \"span\", 5);\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(7, ConfirmPopup_div_0_button_7_Template, 1, 6, \"button\", 7);\n    ɵngcc0.ɵɵtemplate(8, ConfirmPopup_div_0_button_8_Template, 1, 6, \"button\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r0.styleClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"p-confirm-popup p-component\")(\"ngStyle\", ctx_r0.style)(\"@animation\", ɵngcc0.ɵɵpureFunction1(12, _c1, ɵngcc0.ɵɵpureFunction2(9, _c0, ctx_r0.showTransitionOptions, ctx_r0.hideTransitionOptions)));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.confirmation.icon);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.confirmation.message);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.confirmation.rejectVisible !== false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.confirmation.acceptVisible !== false);\n  }\n}\n\nvar ConfirmPopup = /*#__PURE__*/function () {\n  function ConfirmPopup(el, confirmationService, renderer, cd, config) {\n    var _this = this;\n\n    _classCallCheck(this, ConfirmPopup);\n\n    this.el = el;\n    this.confirmationService = confirmationService;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.config = config;\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.subscription = this.confirmationService.requireConfirmation$.subscribe(function (confirmation) {\n      if (!confirmation) {\n        _this.hide();\n\n        return;\n      }\n\n      if (confirmation.key === _this.key) {\n        _this.confirmation = confirmation;\n\n        if (_this.confirmation.accept) {\n          _this.confirmation.acceptEvent = new EventEmitter();\n\n          _this.confirmation.acceptEvent.subscribe(_this.confirmation.accept);\n        }\n\n        if (_this.confirmation.reject) {\n          _this.confirmation.rejectEvent = new EventEmitter();\n\n          _this.confirmation.rejectEvent.subscribe(_this.confirmation.reject);\n        }\n\n        _this.visible = true;\n      }\n    });\n  }\n\n  _createClass(ConfirmPopup, [{\n    key: \"visible\",\n    get: function get() {\n      return this._visible;\n    },\n    set: function set(value) {\n      this._visible = value;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"onAnimationStart\",\n    value: function onAnimationStart(event) {\n      if (event.toState === 'open') {\n        this.container = event.element;\n        document.body.appendChild(this.container);\n        this.align();\n        this.bindListeners();\n      }\n    }\n  }, {\n    key: \"onAnimationEnd\",\n    value: function onAnimationEnd(event) {\n      switch (event.toState) {\n        case 'void':\n          this.onContainerDestroy();\n          break;\n      }\n    }\n  }, {\n    key: \"align\",\n    value: function align() {\n      if (this.autoZIndex) {\n        this.container.style.zIndex = String(this.baseZIndex + ++DomHandler.zindex);\n      }\n\n      DomHandler.absolutePosition(this.container, this.confirmation.target);\n      var containerOffset = DomHandler.getOffset(this.container);\n      var targetOffset = DomHandler.getOffset(this.confirmation.target);\n      var arrowLeft = 0;\n\n      if (containerOffset.left < targetOffset.left) {\n        arrowLeft = targetOffset.left - containerOffset.left;\n      }\n\n      this.container.style.setProperty('--overlayArrowLeft', \"\".concat(arrowLeft, \"px\"));\n\n      if (containerOffset.top < targetOffset.top) {\n        DomHandler.addClass(this.container, 'p-confirm-popup-flipped');\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.visible = false;\n    }\n  }, {\n    key: \"accept\",\n    value: function accept() {\n      if (this.confirmation.acceptEvent) {\n        this.confirmation.acceptEvent.emit();\n      }\n\n      this.hide();\n    }\n  }, {\n    key: \"reject\",\n    value: function reject() {\n      if (this.confirmation.rejectEvent) {\n        this.confirmation.rejectEvent.emit();\n      }\n\n      this.hide();\n    }\n  }, {\n    key: \"bindListeners\",\n    value: function bindListeners() {\n      this.bindDocumentClickListener();\n      this.bindDocumentResizeListener();\n      this.bindScrollListener();\n    }\n  }, {\n    key: \"unbindListeners\",\n    value: function unbindListeners() {\n      this.unbindDocumentClickListener();\n      this.unbindDocumentResizeListener();\n      this.unbindScrollListener();\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this2 = this;\n\n      if (!this.documentClickListener) {\n        var documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\n        var documentTarget = this.el ? this.el.nativeElement.ownerDocument : document;\n        this.documentClickListener = this.renderer.listen(documentTarget, documentEvent, function (event) {\n          var targetElement = _this2.confirmation.target;\n\n          if (_this2.container !== event.target && !_this2.container.contains(event.target) && targetElement !== event.target && !targetElement.contains(event.target)) {\n            _this2.hide();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize() {\n      this.hide();\n    }\n  }, {\n    key: \"bindDocumentResizeListener\",\n    value: function bindDocumentResizeListener() {\n      this.documentResizeListener = this.onWindowResize.bind(this);\n      window.addEventListener('resize', this.documentResizeListener);\n    }\n  }, {\n    key: \"unbindDocumentResizeListener\",\n    value: function unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this3 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.confirmation.target, function () {\n          if (_this3.visible) {\n            _this3.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"unsubscribeConfirmationSubscriptions\",\n    value: function unsubscribeConfirmationSubscriptions() {\n      if (this.confirmation) {\n        if (this.confirmation.acceptEvent) {\n          this.confirmation.acceptEvent.unsubscribe();\n        }\n\n        if (this.confirmation.rejectEvent) {\n          this.confirmation.rejectEvent.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"onContainerDestroy\",\n    value: function onContainerDestroy() {\n      this.unbindListeners();\n      this.unsubscribeConfirmationSubscriptions();\n      this.confirmation = null;\n      this.container = null;\n    }\n  }, {\n    key: \"restoreAppend\",\n    value: function restoreAppend() {\n      if (this.container) {\n        document.body.removeChild(this.container);\n      }\n\n      this.onContainerDestroy();\n    }\n  }, {\n    key: \"acceptButtonLabel\",\n    get: function get() {\n      return this.confirmation.acceptLabel || this.config.getTranslation(TranslationKeys.ACCEPT);\n    }\n  }, {\n    key: \"rejectButtonLabel\",\n    get: function get() {\n      return this.confirmation.rejectLabel || this.config.getTranslation(TranslationKeys.REJECT);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.restoreAppend();\n\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return ConfirmPopup;\n}();\n\nConfirmPopup.ɵfac = function ConfirmPopup_Factory(t) {\n  return new (t || ConfirmPopup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ConfirmationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.PrimeNGConfig));\n};\n\nConfirmPopup.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ConfirmPopup,\n  selectors: [[\"p-confirmPopup\"]],\n  inputs: {\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    visible: \"visible\",\n    key: \"key\",\n    style: \"style\",\n    styleClass: \"styleClass\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"class\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [1, \"p-confirm-popup-content\"], [\"content\", \"\"], [3, \"ngClass\", \"class\", 4, \"ngIf\"], [1, \"p-confirm-popup-message\"], [1, \"p-confirm-popup-footer\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"icon\", \"label\", \"ngClass\", \"class\", \"click\", 4, \"ngIf\"], [3, \"ngClass\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"icon\", \"label\", \"ngClass\", \"click\"]],\n  template: function ConfirmPopup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, ConfirmPopup_div_0_Template, 9, 14, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.visible);\n    }\n  },\n  directives: [ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc2.NgStyle, ɵngcc3.ButtonDirective],\n  styles: [\".p-confirm-popup{margin-top:10px;position:absolute}.p-confirm-popup-flipped{margin-bottom:10px;margin-top:0}.p-confirm-popup:after,.p-confirm-popup:before{bottom:100%;content:\\\" \\\";height:0;left:calc(var(--overlayArrowLeft, 0) + 1.25rem);pointer-events:none;position:absolute;width:0}.p-confirm-popup:after{border-width:8px;margin-left:-8px}.p-confirm-popup:before{border-width:10px;margin-left:-10px}.p-confirm-popup-flipped:after,.p-confirm-popup-flipped:before{bottom:auto;top:100%}.p-confirm-popup.p-confirm-popup-flipped:after,.p-confirm-popup.p-confirm-popup-flipped:before{border-bottom-color:transparent}.p-confirm-popup .p-confirm-popup-content{align-items:center;display:flex}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animation', [state('void', style({\n      transform: 'scaleY(0.8)',\n      opacity: 0\n    })), state('open', style({\n      transform: 'translateY(0)',\n      opacity: 1\n    })), transition('void => open', animate('{{showTransitionParams}}')), transition('open => void', animate('{{hideTransitionParams}}'))])]\n  },\n  changeDetection: 0\n});\n\nConfirmPopup.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ConfirmationService\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: PrimeNGConfig\n  }];\n};\n\nConfirmPopup.propDecorators = {\n  key: [{\n    type: Input\n  }],\n  showTransitionOptions: [{\n    type: Input\n  }],\n  hideTransitionOptions: [{\n    type: Input\n  }],\n  autoZIndex: [{\n    type: Input\n  }],\n  baseZIndex: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  visible: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmPopup, [{\n    type: Component,\n    args: [{\n      selector: 'p-confirmPopup',\n      template: \"\\n        <div *ngIf=\\\"visible\\\" [ngClass]=\\\"'p-confirm-popup p-component'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\"\\n            [@animation]=\\\"{value: 'open', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\"\\n            (@animation.start)=\\\"onAnimationStart($event)\\\" (@animation.done)=\\\"onAnimationEnd($event)\\\">\\n            <div #content class=\\\"p-confirm-popup-content\\\">\\n                <i [ngClass]=\\\"'p-confirm-popup-icon'\\\" [class]=\\\"confirmation.icon\\\" *ngIf=\\\"confirmation.icon\\\"></i>\\n                <span class=\\\"p-confirm-popup-message\\\">{{confirmation.message}}</span>\\n            </div>\\n            <div class=\\\"p-confirm-popup-footer\\\">\\n                <button type=\\\"button\\\" pButton [icon]=\\\"confirmation.rejectIcon\\\" [label]=\\\"rejectButtonLabel\\\" (click)=\\\"reject()\\\" [ngClass]=\\\"'p-confirm-popup-reject p-button-sm'\\\"\\n                    [class]=\\\"confirmation.rejectButtonStyleClass || 'p-button-text'\\\" *ngIf=\\\"confirmation.rejectVisible !== false\\\" [attr.aria-label]=\\\"rejectButtonLabel\\\"></button>\\n                <button type=\\\"button\\\" pButton [icon]=\\\"confirmation.acceptIcon\\\" [label]=\\\"acceptButtonLabel\\\" (click)=\\\"accept()\\\" [ngClass]=\\\"'p-confirm-popup-accept p-button-sm'\\\"\\n                    [class]=\\\"confirmation.acceptButtonStyleClass\\\" *ngIf=\\\"confirmation.acceptVisible !== false\\\" [attr.aria-label]=\\\"acceptButtonLabel\\\"></button>\\n            </div>\\n        </div>\\n    \",\n      animations: [trigger('animation', [state('void', style({\n        transform: 'scaleY(0.8)',\n        opacity: 0\n      })), state('open', style({\n        transform: 'translateY(0)',\n        opacity: 1\n      })), transition('void => open', animate('{{showTransitionParams}}')), transition('open => void', animate('{{hideTransitionParams}}'))])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-confirm-popup{margin-top:10px;position:absolute}.p-confirm-popup-flipped{margin-bottom:10px;margin-top:0}.p-confirm-popup:after,.p-confirm-popup:before{bottom:100%;content:\\\" \\\";height:0;left:calc(var(--overlayArrowLeft, 0) + 1.25rem);pointer-events:none;position:absolute;width:0}.p-confirm-popup:after{border-width:8px;margin-left:-8px}.p-confirm-popup:before{border-width:10px;margin-left:-10px}.p-confirm-popup-flipped:after,.p-confirm-popup-flipped:before{bottom:auto;top:100%}.p-confirm-popup.p-confirm-popup-flipped:after,.p-confirm-popup.p-confirm-popup-flipped:before{border-bottom-color:transparent}.p-confirm-popup .p-confirm-popup-content{align-items:center;display:flex}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ConfirmationService\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.PrimeNGConfig\n    }];\n  }, {\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    key: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ConfirmPopupModule = function ConfirmPopupModule() {\n  _classCallCheck(this, ConfirmPopupModule);\n};\n\nConfirmPopupModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ConfirmPopupModule\n});\nConfirmPopupModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ConfirmPopupModule_Factory(t) {\n    return new (t || ConfirmPopupModule)();\n  },\n  imports: [[CommonModule, ButtonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ConfirmPopupModule, {\n    declarations: function declarations() {\n      return [ConfirmPopup];\n    },\n    imports: function imports() {\n      return [CommonModule, ButtonModule];\n    },\n    exports: function exports() {\n      return [ConfirmPopup];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmPopupModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ButtonModule],\n      exports: [ConfirmPopup],\n      declarations: [ConfirmPopup]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ConfirmPopup, ConfirmPopupModule };","map":{"version":3,"sources":["../../src/app/components/confirmpopup/confirmpopup.ts","../../src/app/components/confirmpopup/primeng-confirmpopup.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule ,Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, OnDestroy, Input, EventEmitter, Renderer2} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Confirmation, ConfirmationService, PrimeNGConfig, TranslationKeys} from 'primeng/api';\nimport {Subscription} from 'rxjs';\nimport {ButtonModule} from 'primeng/button';\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\nimport {DomHandler, ConnectedOverlayScrollHandler} from 'primeng/dom';\n\n@Component({\n    selector: 'p-confirmPopup',\n    template: `\n        <div *ngIf=\"visible\" [ngClass]=\"'p-confirm-popup p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\"\n            [@animation]=\"{value: 'open', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n            (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\">\n            <div #content class=\"p-confirm-popup-content\">\n                <i [ngClass]=\"'p-confirm-popup-icon'\" [class]=\"confirmation.icon\" *ngIf=\"confirmation.icon\"></i>\n                <span class=\"p-confirm-popup-message\">{{confirmation.message}}</span>\n            </div>\n            <div class=\"p-confirm-popup-footer\">\n                <button type=\"button\" pButton [icon]=\"confirmation.rejectIcon\" [label]=\"rejectButtonLabel\" (click)=\"reject()\" [ngClass]=\"'p-confirm-popup-reject p-button-sm'\"\n                    [class]=\"confirmation.rejectButtonStyleClass || 'p-button-text'\" *ngIf=\"confirmation.rejectVisible !== false\" [attr.aria-label]=\"rejectButtonLabel\"></button>\n                <button type=\"button\" pButton [icon]=\"confirmation.acceptIcon\" [label]=\"acceptButtonLabel\" (click)=\"accept()\" [ngClass]=\"'p-confirm-popup-accept p-button-sm'\"\n                    [class]=\"confirmation.acceptButtonStyleClass\" *ngIf=\"confirmation.acceptVisible !== false\" [attr.aria-label]=\"acceptButtonLabel\"></button>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('animation', [\n            state('void', style({\n                transform: 'scaleY(0.8)',\n                opacity: 0\n            })),\n            state('open', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => open', animate('{{showTransitionParams}}')),\n            transition('open => void', animate('{{hideTransitionParams}}')),\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./confirmpopup.css']\n})\nexport class ConfirmPopup implements OnDestroy {\n\n    @Input() key: string;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    container: HTMLDivElement;\n\n    subscription: Subscription;\n\n    confirmation: Confirmation;\n\n    _visible: boolean;\n\n    documentClickListener: any;\n\n    documentResizeListener: any;\n\n    scrollHandler: any;\n\n    @Input() get visible(): any {\n        return this._visible;\n    }\n    set visible(value:any) {\n        this._visible = value;\n        this.cd.markForCheck();\n    }\n\n    constructor(public el: ElementRef, private confirmationService: ConfirmationService, public renderer: Renderer2, private cd: ChangeDetectorRef, public config: PrimeNGConfig) {\n        this.subscription = this.confirmationService.requireConfirmation$.subscribe(confirmation => {\n            if (!confirmation) {\n                this.hide();\n                return;\n            }\n\n            if (confirmation.key === this.key) {\n                this.confirmation = confirmation;\n                if (this.confirmation.accept) {\n                    this.confirmation.acceptEvent = new EventEmitter();\n                    this.confirmation.acceptEvent.subscribe(this.confirmation.accept);\n                }\n\n                if (this.confirmation.reject) {\n                    this.confirmation.rejectEvent = new EventEmitter();\n                    this.confirmation.rejectEvent.subscribe(this.confirmation.reject);\n                }\n\n                this.visible = true;\n            }\n        });\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        if (event.toState === 'open') {\n            this.container = event.element;\n            document.body.appendChild(this.container);\n            this.align();\n            this.bindListeners();\n        }\n    }\n\n    onAnimationEnd(event: AnimationEvent) {\n        switch (event.toState) {\n            case 'void':\n                this.onContainerDestroy();\n            break;\n        }\n    }\n\n    align() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n\n        DomHandler.absolutePosition(this.container, this.confirmation.target);\n\n        const containerOffset = DomHandler.getOffset(this.container);\n        const targetOffset = DomHandler.getOffset(this.confirmation.target);\n        let arrowLeft = 0;\n\n        if (containerOffset.left < targetOffset.left) {\n            arrowLeft = targetOffset.left - containerOffset.left;\n        }\n        this.container.style.setProperty('--overlayArrowLeft', `${arrowLeft}px`);\n\n        if (containerOffset.top < targetOffset.top) {\n            DomHandler.addClass(this.container, 'p-confirm-popup-flipped');\n        }\n    }\n\n    hide() {\n        this.visible = false;\n    }\n\n    accept() {\n        if (this.confirmation.acceptEvent) {\n            this.confirmation.acceptEvent.emit();\n        }\n\n        this.hide();\n    }\n\n    reject() {\n        if (this.confirmation.rejectEvent) {\n            this.confirmation.rejectEvent.emit();\n        }\n\n        this.hide();\n    }\n\n    bindListeners() {\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n    }\n\n    unbindListeners() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            let documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : document;\n\n            this.documentClickListener = this.renderer.listen(documentTarget, documentEvent, (event) => {\n                let targetElement = <HTMLElement> this.confirmation.target;\n                if (this.container !== event.target && !this.container.contains(event.target) &&\n                    targetElement !== event.target && !targetElement.contains(event.target)) {\n                    this.hide();\n                }\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    onWindowResize() {\n        this.hide();\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.confirmation.target, () => {\n                if (this.visible) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    unsubscribeConfirmationSubscriptions() {\n        if (this.confirmation) {\n            if (this.confirmation.acceptEvent) {\n                this.confirmation.acceptEvent.unsubscribe();\n            }\n\n            if (this.confirmation.rejectEvent) {\n                this.confirmation.rejectEvent.unsubscribe();\n            }\n        }\n    }\n\n    onContainerDestroy() {\n        this.unbindListeners();\n        this.unsubscribeConfirmationSubscriptions();\n        this.confirmation = null;\n        this.container = null;\n    }\n\n    restoreAppend() {\n        if (this.container) {\n            document.body.removeChild(this.container);\n        }\n\n        this.onContainerDestroy();\n    }\n\n    get acceptButtonLabel(): string {\n        return this.confirmation.acceptLabel || this.config.getTranslation(TranslationKeys.ACCEPT);\n    }\n\n    get rejectButtonLabel(): string {\n        return this.confirmation.rejectLabel || this.config.getTranslation(TranslationKeys.REJECT);\n    }\n\n    ngOnDestroy() {\n        this.restoreAppend();\n\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,ButtonModule],\n    exports: [ConfirmPopup],\n    declarations: [ConfirmPopup]\n})\nexport class ConfirmPopupModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}