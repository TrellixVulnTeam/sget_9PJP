{"ast":null,"code":"import _classCallCheck from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as Chart from 'chart.js';\nimport * as ɵngcc0 from '@angular/core';\n\nvar UIChart = /*#__PURE__*/function () {\n  function UIChart(el) {\n    _classCallCheck(this, UIChart);\n\n    this.el = el;\n    this.plugins = [];\n    this.responsive = true;\n    this.onDataSelect = new EventEmitter();\n    this._options = {};\n  }\n\n  _createClass(UIChart, [{\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    },\n    set: function set(val) {\n      this._data = val;\n      this.reinit();\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(val) {\n      this._options = val;\n      this.reinit();\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.initChart();\n      this.initialized = true;\n    }\n  }, {\n    key: \"onCanvasClick\",\n    value: function onCanvasClick(event) {\n      if (this.chart) {\n        var element = this.chart.getElementAtEvent(event);\n        var dataset = this.chart.getDatasetAtEvent(event);\n\n        if (element && element[0] && dataset) {\n          this.onDataSelect.emit({\n            originalEvent: event,\n            element: element[0],\n            dataset: dataset\n          });\n        }\n      }\n    }\n  }, {\n    key: \"initChart\",\n    value: function initChart() {\n      var opts = this.options || {};\n      opts.responsive = this.responsive; // allows chart to resize in responsive mode\n\n      if (opts.responsive && (this.height || this.width)) {\n        opts.maintainAspectRatio = false;\n      }\n\n      this.chart = new Chart(this.el.nativeElement.children[0].children[0], {\n        type: this.type,\n        data: this.data,\n        options: this.options,\n        plugins: this.plugins\n      });\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.el.nativeElement.children[0].children[0];\n    }\n  }, {\n    key: \"getBase64Image\",\n    value: function getBase64Image() {\n      return this.chart.toBase64Image();\n    }\n  }, {\n    key: \"generateLegend\",\n    value: function generateLegend() {\n      if (this.chart) {\n        return this.chart.generateLegend();\n      }\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      if (this.chart) {\n        this.chart.update();\n      }\n    }\n  }, {\n    key: \"reinit\",\n    value: function reinit() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.initChart();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.initialized = false;\n        this.chart = null;\n      }\n    }\n  }]);\n\n  return UIChart;\n}();\n\nUIChart.ɵfac = function UIChart_Factory(t) {\n  return new (t || UIChart)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nUIChart.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: UIChart,\n  selectors: [[\"p-chart\"]],\n  inputs: {\n    plugins: \"plugins\",\n    responsive: \"responsive\",\n    data: \"data\",\n    options: \"options\",\n    type: \"type\",\n    width: \"width\",\n    height: \"height\"\n  },\n  outputs: {\n    onDataSelect: \"onDataSelect\"\n  },\n  decls: 2,\n  vars: 6,\n  consts: [[2, \"position\", \"relative\"], [3, \"click\"]],\n  template: function UIChart_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"canvas\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function UIChart_Template_canvas_click_1_listener($event) {\n        return ctx.onCanvasClick($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.responsive && !ctx.width ? null : ctx.width)(\"height\", ctx.responsive && !ctx.height ? null : ctx.height);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵattribute(\"width\", ctx.responsive && !ctx.width ? null : ctx.width)(\"height\", ctx.responsive && !ctx.height ? null : ctx.height);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nUIChart.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nUIChart.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  plugins: [{\n    type: Input\n  }],\n  width: [{\n    type: Input\n  }],\n  height: [{\n    type: Input\n  }],\n  responsive: [{\n    type: Input\n  }],\n  onDataSelect: [{\n    type: Output\n  }],\n  data: [{\n    type: Input\n  }],\n  options: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UIChart, [{\n    type: Component,\n    args: [{\n      selector: 'p-chart',\n      template: \"\\n        <div style=\\\"position:relative\\\" [style.width]=\\\"responsive && !width ? null : width\\\" [style.height]=\\\"responsive && !height ? null : height\\\">\\n            <canvas [attr.width]=\\\"responsive && !width ? null : width\\\" [attr.height]=\\\"responsive && !height ? null : height\\\" (click)=\\\"onCanvasClick($event)\\\"></canvas>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    plugins: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    onDataSelect: [{\n      type: Output\n    }],\n    data: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ChartModule = function ChartModule() {\n  _classCallCheck(this, ChartModule);\n};\n\nChartModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ChartModule\n});\nChartModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ChartModule_Factory(t) {\n    return new (t || ChartModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartModule, {\n    declarations: function declarations() {\n      return [UIChart];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [UIChart];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [UIChart],\n      declarations: [UIChart]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ChartModule, UIChart };","map":{"version":3,"sources":["../../src/app/components/chart/chart.ts","../../src/app/components/chart/primeng-chart.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewInit,OnDestroy,Input,Output,EventEmitter,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport * as Chart from 'chart.js';\n\n@Component({\n    selector: 'p-chart',\n    template: `\n        <div style=\"position:relative\" [style.width]=\"responsive && !width ? null : width\" [style.height]=\"responsive && !height ? null : height\">\n            <canvas [attr.width]=\"responsive && !width ? null : width\" [attr.height]=\"responsive && !height ? null : height\" (click)=\"onCanvasClick($event)\"></canvas>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UIChart implements AfterViewInit, OnDestroy {\n\n    @Input() type: string;\n\n    @Input() plugins: any[] = [];\n    \n    @Input() width: string;\n    \n    @Input() height: string;\n\n    @Input() responsive: boolean = true;\n    \n    @Output() onDataSelect: EventEmitter<any> = new EventEmitter();\n\n    initialized: boolean;\n    \n    _data: any;\n\n    _options: any = {};\n\n    chart: any;\n\n    constructor(public el: ElementRef) {}\n    \n    @Input() get data(): any {\n        return this._data;\n    }\n\n    set data(val:any) {\n        this._data = val;\n        this.reinit();\n    }\n\n    @Input() get options(): any {\n        return this._options;\n    }\n\n    set options(val:any) {\n        this._options = val;\n        this.reinit();\n    }\n\n    ngAfterViewInit() {\n        this.initChart();\n        this.initialized = true;\n    }\n\n    onCanvasClick(event) {\n        if (this.chart) {\n            let element = this.chart.getElementAtEvent(event);\n            let dataset = this.chart.getDatasetAtEvent(event);\n            if (element && element[0] && dataset) {\n                this.onDataSelect.emit({originalEvent: event, element: element[0], dataset: dataset});\n            }\n        }\n    }\n\n    initChart() {\n        let opts = this.options||{};\n        opts.responsive = this.responsive;\n\n        // allows chart to resize in responsive mode\n        if (opts.responsive&&(this.height||this.width)) {\n            opts.maintainAspectRatio = false;\n        }\n\n        this.chart = new Chart(this.el.nativeElement.children[0].children[0], {\n            type: this.type,\n            data: this.data,\n            options: this.options,\n            plugins: this.plugins\n        });\n    }\n    \n    getCanvas() {\n        return this.el.nativeElement.children[0].children[0];\n    }\n    \n    getBase64Image() {\n        return this.chart.toBase64Image();\n    }\n    \n    generateLegend() {\n        if (this.chart) {\n            return this.chart.generateLegend();\n        }\n    }\n    \n    refresh() {\n        if (this.chart) {\n            this.chart.update();\n        }\n    }\n    \n    reinit() {\n        if (this.chart) {\n            this.chart.destroy();\n            this.initChart();\n        }\n    }\n    \n    ngOnDestroy() {\n        if (this.chart) {\n            this.chart.destroy();\n            this.initialized = false;\n            this.chart = null;\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [UIChart],\n    declarations: [UIChart]\n})\nexport class ChartModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}