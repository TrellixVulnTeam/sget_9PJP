import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { BlockUiInterceptor, BlockUiService } from '@nuvem/angular-base';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BlockUIModule } from 'primeng/blockui';
import { ProgressSpinnerModule } from 'primeng/progressspinner';
import { BlockUiComponent } from './block-ui.component';
/**
 * Class BlockUiModule
 * @class
 */
import * as ɵngcc0 from '@angular/core';
export class BlockUiModule {
}
BlockUiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BlockUiModule });
BlockUiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BlockUiModule_Factory(t) { return new (t || BlockUiModule)(); }, providers: [
        {
            provide: HTTP_INTERCEPTORS,
            useClass: BlockUiInterceptor,
            multi: true
        },
        BlockUiService
    ], imports: [[
            CommonModule,
            BlockUIModule,
            ProgressSpinnerModule,
        ], BlockUIModule,
        ProgressSpinnerModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BlockUiModule, { declarations: function () { return [BlockUiComponent]; }, imports: function () { return [CommonModule,
        BlockUIModule,
        ProgressSpinnerModule]; }, exports: function () { return [BlockUIModule,
        BlockUiComponent,
        ProgressSpinnerModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BlockUiModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    BlockUIModule,
                    ProgressSpinnerModule,
                ],
                declarations: [
                    BlockUiComponent
                ],
                providers: [
                    {
                        provide: HTTP_INTERCEPTORS,
                        useClass: BlockUiInterceptor,
                        multi: true
                    },
                    BlockUiService
                ],
                exports: [
                    BlockUIModule,
                    BlockUiComponent,
                    ProgressSpinnerModule
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2stdWkubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wcmltZW5nLWNvbXBvbmVudHMvc3JjL2xpYi9ibG9jay11aS9ibG9jay11aS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUV4RDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQXdCSCxNQUFNLE9BQU8sYUFBYTtBQUMxQjt5Q0F4QkMsUUFBUSxTQUFDO0tBQ04sT0FBTyxFQUFFLHNCQUNMLFlBQVksc0JBQ1osYUFBYSxzQkFDYixxQkFBcUI7RUFDeEI7VUFDRCxZQUFZLEVBQUU7TUFDVixnQkFBZ0Isa0JBQ25CO2dCQUNEO0NBQVMsRUFBRTtjQUNQO2lCQUNJO0tBQU8sRUFBRSxpQkFBaUI7d0JBQzFCO0tBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLEtBQUssRUFBRTtDQUFJLHNCQUNkO1VBQ0QsY0FBYyxrQkFDakIsa0JBQ0QsT0FBTyxFQUFFLHNCQUNMLGFBQWEsc0JBQ2IsZ0JBQWdCLHNCQUNoQixxQkFBcUIsa0JBQ3hCO0tBQ0o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIVFRQX0lOVEVSQ0VQVE9SUyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IEJsb2NrVWlJbnRlcmNlcHRvciwgQmxvY2tVaVNlcnZpY2UgfSBmcm9tICdAbnV2ZW0vYW5ndWxhci1iYXNlJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQmxvY2tVSU1vZHVsZSB9IGZyb20gJ3ByaW1lbmcvYmxvY2t1aSc7XG5pbXBvcnQgeyBQcm9ncmVzc1NwaW5uZXJNb2R1bGUgfSBmcm9tICdwcmltZW5nL3Byb2dyZXNzc3Bpbm5lcic7XG5pbXBvcnQgeyBCbG9ja1VpQ29tcG9uZW50IH0gZnJvbSAnLi9ibG9jay11aS5jb21wb25lbnQnO1xuXG4vKipcbiAqIENsYXNzIEJsb2NrVWlNb2R1bGVcbiAqIEBjbGFzc1xuICovXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBCbG9ja1VJTW9kdWxlLFxuICAgICAgICBQcm9ncmVzc1NwaW5uZXJNb2R1bGUsXG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgQmxvY2tVaUNvbXBvbmVudFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IEhUVFBfSU5URVJDRVBUT1JTLFxuICAgICAgICAgICAgdXNlQ2xhc3M6IEJsb2NrVWlJbnRlcmNlcHRvcixcbiAgICAgICAgICAgIG11bHRpOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIEJsb2NrVWlTZXJ2aWNlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIEJsb2NrVUlNb2R1bGUsXG4gICAgICAgIEJsb2NrVWlDb21wb25lbnQsXG4gICAgICAgIFByb2dyZXNzU3Bpbm5lck1vZHVsZVxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgQmxvY2tVaU1vZHVsZSB7XG59XG4iXX0=