{"version":3,"file":"block-ui.interceptor.d.ts","sources":["block-ui.interceptor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Observable } from 'rxjs';\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { BlockUiService } from './block-ui.service';\n/**\n * Class BlockUiInterceptor\n * @class\n */\nexport declare class BlockUiInterceptor implements HttpInterceptor {\n    private service;\n    /**\n     * constructor method\n     * @constructor\n     * @param {BlockUiService} service\n     */\n    constructor(service: BlockUiService);\n    /**\n     * intercept method\n     * @public\n     * @param {HttpRequest<any>} req\n     * @param {HttpHandler} next\n     * @return Observable<HttpEvent<any>>\n     */\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\n    /**\n     * isMutation method\n     * @private\n     * @param {string} method\n     * @return boolean\n     */\n    private isMutation;\n}\n"]}