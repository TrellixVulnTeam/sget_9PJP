{"version":3,"file":"block-ui-content.component.d.ts","sources":["block-ui-content.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, AfterViewInit, AfterViewChecked, OnDestroy, ComponentRef, TemplateRef, ComponentFactoryResolver, ViewContainerRef, ChangeDetectorRef } from '@angular/core';\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nexport declare class BlockUIContentComponent implements OnInit, AfterViewInit, AfterViewChecked, OnDestroy {\n    private blockUI;\n    private resolver;\n    private changeDetectionRef;\n    name: string;\n    delayStart: number;\n    delayStop: number;\n    defaultMessage: string;\n    templateCmp: any;\n    templateOutlet: ViewContainerRef;\n    state: any;\n    className: string;\n    active: boolean;\n    templateCompRef: ComponentRef<{\n        message?: any;\n    }> | TemplateRef<{}>;\n    message: any;\n    private blockUISubscription;\n    private settings;\n    constructor(blockUI: BlockUIInstanceService, resolver: ComponentFactoryResolver, changeDetectionRef: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngAfterViewInit(): boolean;\n    ngAfterViewChecked(): void;\n    private subscribeToBlockUI(blockUI$);\n    private onDispatchedEvent(event);\n    private onStart({name, message});\n    private onStop({name});\n    private onReset();\n    private onUpdate({name, message});\n    updateMessage(message: string): void;\n    private showBlock(message);\n    private hideBlock();\n    private clearState();\n    private updateBlockTemplate(msg);\n    private onUnsubscribe(name);\n    private updateInstanceBlockCount();\n    private detectChanges();\n    ngOnDestroy(): void;\n}\n"]}