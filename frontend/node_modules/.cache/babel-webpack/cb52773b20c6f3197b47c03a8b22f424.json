{"ast":null,"code":"import _toConsumableArray from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"container\"];\n\nfunction Splitter_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Splitter_ng_template_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function Splitter_ng_template_2_div_2_Template_div_mousedown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var i_r3 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.onGutterMouseDown($event, i_r3);\n    })(\"touchstart\", function Splitter_ng_template_2_div_2_Template_div_touchstart_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var i_r3 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onGutterTouchStart($event, i_r3);\n    })(\"touchmove\", function Splitter_ng_template_2_div_2_Template_div_touchmove_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var i_r3 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onGutterTouchMove($event, i_r3);\n    })(\"touchend\", function Splitter_ng_template_2_div_2_Template_div_touchend_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var i_r3 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.onGutterTouchEnd($event, i_r3);\n    });\n    ɵngcc0.ɵɵelement(1, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r5.gutterStyle());\n  }\n}\n\nfunction Splitter_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(1, Splitter_ng_template_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, Splitter_ng_template_2_div_2_Template, 2, 1, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    var panel_r2 = ctx.$implicit;\n    var i_r3 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r1.panelStyleClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.panelContainerClass());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", panel_r2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r3 !== ctx_r1.panels.length - 1);\n  }\n}\n\nvar Splitter = /*#__PURE__*/function () {\n  function Splitter(cd, el) {\n    _classCallCheck(this, Splitter);\n\n    this.cd = cd;\n    this.el = el;\n    this.stateStorage = \"session\";\n    this.stateKey = null;\n    this.layout = \"horizontal\";\n    this.gutterSize = 4;\n    this.panelSizes = [];\n    this.minSizes = [];\n    this.onResizeEnd = new EventEmitter();\n    this.nested = false;\n    this.panels = [];\n    this.dragging = false;\n    this.mouseMoveListener = null;\n    this.mouseUpListener = null;\n    this.size = null;\n    this.gutterElement = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.nextPanelSize = null;\n    this.prevPanelSize = null;\n    this._panelSizes = null;\n    this.prevPanelIndex = null;\n  }\n\n  _createClass(Splitter, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.nested = this.isNested();\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'panel':\n            _this.panels.push(item.template);\n\n            break;\n\n          default:\n            _this.panels.push(item.template);\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      if (this.panels && this.panels.length) {\n        var initialized = false;\n\n        if (this.isStateful()) {\n          initialized = this.restoreState();\n        }\n\n        if (!initialized) {\n          var children = _toConsumableArray(this.el.nativeElement.children[0].children).filter(function (child) {\n            return DomHandler.hasClass(child, 'p-splitter-panel');\n          });\n\n          var _panelSizes = [];\n          this.panels.map(function (panel, i) {\n            var panelInitialSize = _this2.panelSizes.length - 1 >= i ? _this2.panelSizes[i] : null;\n            var panelSize = panelInitialSize || 100 / _this2.panels.length;\n            _panelSizes[i] = panelSize;\n            children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (_this2.panels.length - 1) * _this2.gutterSize + 'px)';\n          });\n          this._panelSizes = _panelSizes;\n        }\n      }\n    }\n  }, {\n    key: \"onResizeStart\",\n    value: function onResizeStart(event, index) {\n      this.gutterElement = event.currentTarget;\n      this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n      this.dragging = true;\n      this.startPos = this.horizontal() ? event.pageX : event.pageY;\n      this.prevPanelElement = this.gutterElement.previousElementSibling;\n      this.nextPanelElement = this.gutterElement.nextElementSibling;\n      this.prevPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\n      this.nextPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\n      this.prevPanelIndex = index;\n      DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n      DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(event) {\n      var newPos;\n      if (this.horizontal()) newPos = event.pageX * 100 / this.size - this.startPos * 100 / this.size;else newPos = event.pageY * 100 / this.size - this.startPos * 100 / this.size;\n      var newPrevPanelSize = this.prevPanelSize + newPos;\n      var newNextPanelSize = this.nextPanelSize - newPos;\n\n      if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n        this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n        this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n        this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n        this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n      }\n    }\n  }, {\n    key: \"resizeEnd\",\n    value: function resizeEnd(event) {\n      if (this.isStateful()) {\n        this.saveState();\n      }\n\n      this.onResizeEnd.emit({\n        originalEvent: event,\n        sizes: this._panelSizes\n      });\n      DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n      DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n      this.clear();\n    }\n  }, {\n    key: \"onGutterMouseDown\",\n    value: function onGutterMouseDown(event, index) {\n      this.onResizeStart(event, index);\n      this.bindMouseListeners();\n    }\n  }, {\n    key: \"onGutterTouchStart\",\n    value: function onGutterTouchStart(event, index) {\n      this.onResizeStart(event, index);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onGutterTouchMove\",\n    value: function onGutterTouchMove(event) {\n      this.onResize(event);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onGutterTouchEnd\",\n    value: function onGutterTouchEnd(event) {\n      this.resizeEnd(event);\n      event.preventDefault();\n    }\n  }, {\n    key: \"validateResize\",\n    value: function validateResize(newPrevPanelSize, newNextPanelSize) {\n      if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n        return false;\n      }\n\n      if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"bindMouseListeners\",\n    value: function bindMouseListeners() {\n      var _this3 = this;\n\n      if (!this.mouseMoveListener) {\n        this.mouseMoveListener = function (event) {\n          return _this3.onResize(event);\n        };\n\n        document.addEventListener('mousemove', this.mouseMoveListener);\n      }\n\n      if (!this.mouseUpListener) {\n        this.mouseUpListener = function (event) {\n          _this3.resizeEnd(event);\n\n          _this3.unbindMouseListeners();\n        };\n\n        document.addEventListener('mouseup', this.mouseUpListener);\n      }\n    }\n  }, {\n    key: \"unbindMouseListeners\",\n    value: function unbindMouseListeners() {\n      if (this.mouseMoveListener) {\n        document.removeEventListener('mousemove', this.mouseMoveListener);\n        this.mouseMoveListener = null;\n      }\n\n      if (this.mouseUpListener) {\n        document.removeEventListener('mouseup', this.mouseUpListener);\n        this.mouseUpListener = null;\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.dragging = false;\n      this.size = null;\n      this.startPos = null;\n      this.prevPanelElement = null;\n      this.nextPanelElement = null;\n      this.prevPanelSize = null;\n      this.nextPanelSize = null;\n      this.gutterElement = null;\n      this.prevPanelIndex = null;\n    }\n  }, {\n    key: \"isNested\",\n    value: function isNested() {\n      if (this.el.nativeElement) {\n        var parent = this.el.nativeElement.parentElement;\n\n        while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n          parent = parent.parentElement;\n        }\n\n        return parent !== null;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"isStateful\",\n    value: function isStateful() {\n      return this.stateKey != null;\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage() {\n      switch (this.stateStorage) {\n        case 'local':\n          return window.localStorage;\n\n        case 'session':\n          return window.sessionStorage;\n\n        default:\n          throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n      }\n    }\n  }, {\n    key: \"saveState\",\n    value: function saveState() {\n      this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n    }\n  }, {\n    key: \"restoreState\",\n    value: function restoreState() {\n      var _this4 = this;\n\n      var storage = this.getStorage();\n      var stateString = storage.getItem(this.stateKey);\n\n      if (stateString) {\n        this._panelSizes = JSON.parse(stateString);\n\n        var children = _toConsumableArray(this.containerViewChild.nativeElement.children).filter(function (child) {\n          return DomHandler.hasClass(child, 'p-splitter-panel');\n        });\n\n        children.forEach(function (child, i) {\n          child.style.flexBasis = 'calc(' + _this4._panelSizes[i] + '% - ' + (_this4.panels.length - 1) * _this4.gutterSize + 'px)';\n        });\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"containerClass\",\n    value: function containerClass() {\n      return {\n        'p-splitter p-component': true,\n        'p-splitter-horizontal': this.layout === \"horizontal\",\n        'p-splitter-vertical': this.layout === \"vertical\"\n      };\n    }\n  }, {\n    key: \"panelContainerClass\",\n    value: function panelContainerClass() {\n      return {\n        'p-splitter-panel': true,\n        'p-splitter-panel-nested': true\n      };\n    }\n  }, {\n    key: \"gutterStyle\",\n    value: function gutterStyle() {\n      if (this.horizontal()) return {\n        width: this.gutterSize + 'px'\n      };else return {\n        height: this.gutterSize + 'px'\n      };\n    }\n  }, {\n    key: \"horizontal\",\n    value: function horizontal() {\n      return this.layout === 'horizontal';\n    }\n  }]);\n\n  return Splitter;\n}();\n\nSplitter.ɵfac = function Splitter_Factory(t) {\n  return new (t || Splitter)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nSplitter.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Splitter,\n  selectors: [[\"p-splitter\"]],\n  contentQueries: function Splitter_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Splitter_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function Splitter_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"p-splitter-panel-nested\", ctx.nested);\n    }\n  },\n  inputs: {\n    stateStorage: \"stateStorage\",\n    stateKey: \"stateKey\",\n    layout: \"layout\",\n    gutterSize: \"gutterSize\",\n    panelSizes: \"panelSizes\",\n    minSizes: \"minSizes\",\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    style: \"style\"\n  },\n  outputs: {\n    onResizeEnd: \"onResizeEnd\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"ngClass\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-splitter-gutter\", 3, \"ngStyle\", \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\", 4, \"ngIf\"], [1, \"p-splitter-gutter\", 3, \"ngStyle\", \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\"], [1, \"p-splitter-gutter-handle\"]],\n  template: function Splitter_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵtemplate(2, Splitter_ng_template_2_Template, 3, 5, \"ng-template\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf],\n  styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{border:0;flex-grow:1}.p-splitter-gutter{align-items:center;cursor:col-resize;display:flex;flex-grow:0;flex-shrink:0;justify-content:center}.p-splitter-horizontal.p-splitter-resizing{-ms-user-select:none;-webkit-user-select:none;cursor:col-resize;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{-ms-user-select:none;-webkit-user-select:none;cursor:row-resize;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{height:100%;width:24px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nSplitter.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }];\n};\n\nSplitter.propDecorators = {\n  styleClass: [{\n    type: Input\n  }],\n  panelStyleClass: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  stateStorage: [{\n    type: Input\n  }],\n  stateKey: [{\n    type: Input\n  }],\n  layout: [{\n    type: Input\n  }],\n  gutterSize: [{\n    type: Input\n  }],\n  panelSizes: [{\n    type: Input\n  }],\n  minSizes: [{\n    type: Input\n  }],\n  onResizeEnd: [{\n    type: Output\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }],\n  containerViewChild: [{\n    type: ViewChild,\n    args: ['container', {\n      static: false\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Splitter, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitter',\n      template: \"\\n        <div #container [ngClass]=\\\"containerClass()\\\" [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\">\\n            <ng-template ngFor let-panel let-i=\\\"index\\\" [ngForOf]=\\\"panels\\\">\\n                <div [ngClass]=\\\"panelContainerClass()\\\" [class]=\\\"panelStyleClass\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"panel\\\"></ng-container>\\n                </div>\\n                <div class=\\\"p-splitter-gutter\\\" *ngIf=\\\"i !== (panels.length - 1)\\\" [ngStyle]=\\\"gutterStyle()\\\" \\n                    (mousedown)=\\\"onGutterMouseDown($event, i)\\\" (touchstart)=\\\"onGutterTouchStart($event, i)\\\" (touchmove)=\\\"onGutterTouchMove($event, i)\\\" (touchend)=\\\"onGutterTouchEnd($event, i)\\\">\\n                    <div class=\\\"p-splitter-gutter-handle\\\"></div>\\n                </div>\\n            </ng-template>\\n        </div>\\n    \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.p-splitter-panel-nested]': 'nested'\n      },\n      styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{border:0;flex-grow:1}.p-splitter-gutter{align-items:center;cursor:col-resize;display:flex;flex-grow:0;flex-shrink:0;justify-content:center}.p-splitter-horizontal.p-splitter-resizing{-ms-user-select:none;-webkit-user-select:none;cursor:col-resize;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{-ms-user-select:none;-webkit-user-select:none;cursor:row-resize;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{height:100%;width:24px}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    stateStorage: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    gutterSize: [{\n      type: Input\n    }],\n    panelSizes: [{\n      type: Input\n    }],\n    minSizes: [{\n      type: Input\n    }],\n    onResizeEnd: [{\n      type: Output\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container', {\n        static: false\n      }]\n    }]\n  });\n})();\n\nvar SplitterModule = function SplitterModule() {\n  _classCallCheck(this, SplitterModule);\n};\n\nSplitterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: SplitterModule\n});\nSplitterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function SplitterModule_Factory(t) {\n    return new (t || SplitterModule)();\n  },\n  imports: [[CommonModule], SharedModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SplitterModule, {\n    declarations: function declarations() {\n      return [Splitter];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [Splitter, SharedModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SplitterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Splitter, SharedModule],\n      declarations: [Splitter]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Splitter, SplitterModule };","map":{"version":3,"sources":["../../src/app/components/splitter/splitter.ts","../../src/app/components/splitter/primeng-splitter.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChildren, QueryList, ElementRef, ChangeDetectorRef, TemplateRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\n\n@Component({\n    selector: 'p-splitter',\n    template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== (panels.length - 1)\" [ngStyle]=\"gutterStyle()\" \n                    (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\" (touchmove)=\"onGutterTouchMove($event, i)\" (touchend)=\"onGutterTouchEnd($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./splitter.css'],\n    host: {\n        '[class.p-splitter-panel-nested]': 'nested'\n    }\n})\nexport class Splitter {\n\n    @Input() styleClass: string;\n\n    @Input() panelStyleClass: string;\n\n    @Input() style: any;\n\n    @Input() stateStorage: string = \"session\";\n\n    @Input() stateKey: string = null;\n\n    @Input() layout: string = \"horizontal\";\n\n    @Input() gutterSize: number = 4;\n\n    @Input() panelSizes: number[] = [];\n\n    @Input() minSizes: number[] = [];\n\n    @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n    \n    @ViewChild('container', { static: false }) containerViewChild: ElementRef;\n\n    nested = false;\n\n    panels = [];\n\n    dragging = false;\n\n    mouseMoveListener = null;\n\n    mouseUpListener = null;\n\n    size = null;\n\n    gutterElement = null;\n\n    startPos = null;\n\n    prevPanelElement = null;\n\n    nextPanelElement = null;\n\n    nextPanelSize = null;\n\n    prevPanelSize = null;\n\n    _panelSizes = null;\n\n    prevPanelIndex = null;\n\n    constructor(public cd: ChangeDetectorRef, private el: ElementRef) { }\n\n    ngOnInit() {\n        this.nested = this.isNested();\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'panel':\n                    this.panels.push(item.template);\n                break;\n                default: \n                    this.panels.push(item.template);\n                break;\n            }\n        })\n    }\n\n    ngAfterViewInit() {\n        if (this.panels && this.panels.length) {\n            let initialized = false;\n            if (this.isStateful()) {\n                initialized = this.restoreState();\n            }\n\n            if (!initialized) {\n                let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n                let _panelSizes = [];\n                \n                this.panels.map((panel, i) => {\n                    let panelInitialSize = this.panelSizes.length -1 >= i ? this.panelSizes[i]: null;\n                    let panelSize = panelInitialSize || (100 / this.panels.length);\n                    _panelSizes[i] = panelSize;\n                    children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\n                });\n\n                this._panelSizes = _panelSizes;\n            }\n        }\n    }\n\n    onResizeStart(event, index) {\n        this.gutterElement = event.currentTarget;\n        this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n        this.dragging = true;\n        this.startPos = this.horizontal() ? event.pageX : event.pageY;\n        this.prevPanelElement = this.gutterElement.previousElementSibling;\n        this.nextPanelElement = this.gutterElement.nextElementSibling;\n        this.prevPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true): DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\n        this.nextPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true): DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\n        this.prevPanelIndex = index;\n        DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    }\n\n    onResize(event) {\n        let newPos;\n        if (this.horizontal())\n            newPos = (event.pageX * 100 / this.size) - (this.startPos * 100 / this.size);\n        else\n            newPos = (event.pageY * 100 / this.size) - (this.startPos * 100 / this.size);\n\n        let newPrevPanelSize = this.prevPanelSize + newPos;\n        let newNextPanelSize = this.nextPanelSize - newPos;\n        \n        if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n            this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\n            this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\n            this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n            this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n        }\n    }\n\n    resizeEnd(event) {\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        \n        this.onResizeEnd.emit({originalEvent: event, sizes: this._panelSizes})\n        DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.clear();\n    }\n\n    onGutterMouseDown(event, index) {\n        this.onResizeStart(event, index);\n        this.bindMouseListeners();\n    }\n\n    onGutterTouchStart(event, index) {\n        this.onResizeStart(event, index);\n        event.preventDefault();\n    }\n\n    onGutterTouchMove(event) {\n        this.onResize(event);\n        event.preventDefault();\n    }\n\n    onGutterTouchEnd(event) {\n        this.resizeEnd(event);\n        event.preventDefault();\n    }\n\n    validateResize(newPrevPanelSize, newNextPanelSize) {\n        if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n            return false;\n        }\n\n        if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n            return false;\n        }\n\n        return true;\n    }\n\n    bindMouseListeners() {\n        if (!this.mouseMoveListener) {\n            this.mouseMoveListener = event => this.onResize(event)\n            document.addEventListener('mousemove', this.mouseMoveListener);\n        }\n\n        if (!this.mouseUpListener) {\n            this.mouseUpListener = event => {\n                this.resizeEnd(event);\n                this.unbindMouseListeners();\n            }\n            document.addEventListener('mouseup', this.mouseUpListener);\n        }\n    }\n\n    unbindMouseListeners() {\n        if (this.mouseMoveListener) {\n            document.removeEventListener('mousemove', this.mouseMoveListener);\n            this.mouseMoveListener = null;\n        }\n\n        if (this.mouseUpListener) {\n            document.removeEventListener('mouseup', this.mouseUpListener);\n            this.mouseUpListener = null;\n        }\n    }\n\n    clear() {\n        this.dragging = false;\n        this.size = null;\n        this.startPos = null;\n        this.prevPanelElement = null;\n        this.nextPanelElement = null;\n        this.prevPanelSize = null;\n        this.nextPanelSize = null;\n        this.gutterElement = null;\n        this.prevPanelIndex = null;\n    }\n\n    isNested() {\n        if (this.el.nativeElement) {\n            let parent = this.el.nativeElement.parentElement;\n            while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n                parent = parent.parentElement;\n            }\n\n            return parent !== null;\n        }\n        else {\n            return false;\n        }\n    }\n    \n    isStateful() {\n        return this.stateKey != null;\n    }\n\n    getStorage() {\n        switch(this.stateStorage) {\n            case 'local':\n                return window.localStorage;\n\n            case 'session':\n                return window.sessionStorage;\n\n            default:\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n        }\n    }\n\n    saveState() {\n        this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n    }\n\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n\n        if (stateString) {\n            this._panelSizes = JSON.parse(stateString);\n            let children = [...this.containerViewChild.nativeElement.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n            children.forEach((child, i) => {\n                child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    containerClass() {\n        return {\n            'p-splitter p-component': true,\n            'p-splitter-horizontal': this.layout === \"horizontal\",\n            'p-splitter-vertical': this.layout === \"vertical\"\n        };\n    }\n\n    panelContainerClass() {\n        return {\n            'p-splitter-panel': true,\n            'p-splitter-panel-nested': true\n        };\n    }\n\n    gutterStyle() {\n        if (this.horizontal())\n            return {width: this.gutterSize + 'px'};\n        else\n            return {height: this.gutterSize + 'px'};\n    }\n\n    horizontal() {\n        return this.layout === 'horizontal';\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Splitter, SharedModule],\n    declarations: [Splitter]\n})\nexport class SplitterModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}