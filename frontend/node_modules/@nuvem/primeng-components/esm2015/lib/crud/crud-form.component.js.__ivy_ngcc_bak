import { Component, Input } from "@angular/core";
import { ActivatedRoute } from "@angular/router";
export class CrudFormComponent {
    constructor(route) {
        this.route = route;
        this.disableSave = false;
        this.listRoute = "../../list";
    }
    ngOnInit() {
        this.route.paramMap.subscribe((params) => {
            this.action = params.get('action');
            if (params.get('id')) {
                this.route.data.subscribe((data) => {
                    if (data.value) {
                        this.form.patchValue(data.value);
                    }
                });
            }
            else {
                this.listRoute = "../list";
            }
            if (this.action === "view") {
                this.form.disable();
            }
            else if (this.form.disabled) {
                this.form.enable();
            }
        });
    }
}
CrudFormComponent.decorators = [
    { type: Component, args: [{
                selector: 'nCrudForm',
                template: "<nForm [form]=\"form\" [action]=\"action\" [route]=\"[listRoute]\" [disableSave]=\"disableSave\">\n    <ng-content></ng-content>\n    <button nButton pButton type=\"button\" [routerLink]=\"[listRoute]\" label=\"Voltar\" class=\"p-mr-2 p-mb-2\"></button>\n</nForm>\n"
            },] }
];
CrudFormComponent.ctorParameters = () => [
    { type: ActivatedRoute }
];
CrudFormComponent.propDecorators = {
    form: [{ type: Input }],
    service: [{ type: Input }],
    disableSave: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J1ZC1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3ByaW1lbmctY29tcG9uZW50cy9zcmMvbGliL2NydWQvY3J1ZC1mb3JtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUd6RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFNakQsTUFBTSxPQUFPLGlCQUFpQjtJQVkxQixZQUFvQixLQUFxQjtRQUFyQixVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQU5oQyxnQkFBVyxHQUFHLEtBQUssQ0FBQztRQUk3QixjQUFTLEdBQVcsWUFBWSxDQUFDO0lBRVksQ0FBQztJQUU5QyxRQUFRO1FBQ0osSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBRW5DLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7b0JBQy9CLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTt3QkFDWixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7cUJBQ3BDO2dCQUNMLENBQUMsQ0FBQyxDQUFDO2FBQ047aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7YUFDOUI7WUFDRCxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssTUFBTSxFQUFFO2dCQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO2FBQ3ZCO2lCQUFNLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7Z0JBQzNCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7YUFDdEI7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7OztZQXJDSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLFdBQVc7Z0JBQ3JCLHFSQUF5QzthQUM1Qzs7O1lBTFEsY0FBYzs7O21CQVFsQixLQUFLO3NCQUVMLEtBQUs7MEJBRUwsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IENydWRTZXJ2aWNlIH0gZnJvbSBcIi4vY3J1ZC1zZXJ2aWNlLnNlcnZpY2VcIjtcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ25DcnVkRm9ybScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2NydWQtZm9ybS5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIENydWRGb3JtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIEBJbnB1dCgpIGZvcm06IEZvcm1Hcm91cDtcblxuICAgIEBJbnB1dCgpIHNlcnZpY2U6IENydWRTZXJ2aWNlPGFueSwgYW55PjtcblxuICAgIEBJbnB1dCgpIGRpc2FibGVTYXZlID0gZmFsc2U7XG5cbiAgICBhY3Rpb246IHN0cmluZztcblxuICAgIGxpc3RSb3V0ZTogc3RyaW5nID0gXCIuLi8uLi9saXN0XCI7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSkgeyB9XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5yb3V0ZS5wYXJhbU1hcC5zdWJzY3JpYmUoKHBhcmFtcykgPT4ge1xuICAgICAgICAgICAgdGhpcy5hY3Rpb24gPSBwYXJhbXMuZ2V0KCdhY3Rpb24nKTtcblxuICAgICAgICAgICAgaWYgKHBhcmFtcy5nZXQoJ2lkJykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJvdXRlLmRhdGEuc3Vic2NyaWJlKChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZvcm0ucGF0Y2hWYWx1ZShkYXRhLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxpc3RSb3V0ZSA9IFwiLi4vbGlzdFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuYWN0aW9uID09PSBcInZpZXdcIikge1xuICAgICAgICAgICAgICAgIHRoaXMuZm9ybS5kaXNhYmxlKCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZm9ybS5kaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZm9ybS5lbmFibGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG59XG4iXX0=