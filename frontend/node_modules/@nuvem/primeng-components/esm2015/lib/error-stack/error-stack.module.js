import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TableModule } from 'primeng/table';
import { ButtonModule } from 'primeng/button';
import { TooltipModule } from 'primeng/tooltip';
import { ErrorStackComponent } from './error-stack.component';
import { ErrorProvider, ErrorStackService, ErrorStackProviderService, ClipboardModule } from '@nuvem/angular-base';
/**
 * Class ErrorStackModule
 * @class
 */
import * as ɵngcc0 from '@angular/core';
export class ErrorStackModule {
}
ErrorStackModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ErrorStackModule });
ErrorStackModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ErrorStackModule_Factory(t) { return new (t || ErrorStackModule)(); }, providers: [
        ErrorStackService,
        {
            provide: ErrorProvider,
            useClass: ErrorStackProviderService,
            multi: true
        }
    ], imports: [[
            CommonModule,
            TableModule,
            ButtonModule,
            TooltipModule,
            ClipboardModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ErrorStackModule, { declarations: function () { return [ErrorStackComponent]; }, imports: function () { return [CommonModule,
        TableModule,
        ButtonModule,
        TooltipModule,
        ClipboardModule]; }, exports: function () { return [ErrorStackComponent]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStackModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    TableModule,
                    ButtonModule,
                    TooltipModule,
                    ClipboardModule
                ],
                declarations: [
                    ErrorStackComponent
                ],
                providers: [
                    ErrorStackService,
                    {
                        provide: ErrorProvider,
                        useClass: ErrorStackProviderService,
                        multi: true
                    }
                ],
                exports: [
                    ErrorStackComponent
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3Itc3RhY2subW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wcmltZW5nLWNvbXBvbmVudHMvc3JjL2xpYi9lcnJvci1zdGFjay9lcnJvci1zdGFjay5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVoRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQ0gsYUFBYSxFQUNiLGlCQUFpQixFQUNqQix5QkFBeUIsRUFDekIsZUFBZSxFQUNsQixNQUFNLHFCQUFxQixDQUFDO0FBRTdCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBd0JILE1BQU0sT0FBTyxnQkFBZ0I7QUFDN0I7NENBeEJDLFFBQVEsU0FBQztFQUNOLE9BQU8sRUFBRSxzQkFDTCxZQUFZLHNCQUNaLFdBQVcsc0JBQ1gsWUFBWSxzQkFDWixhQUFhO2lCQUNiO0tBQWU7YUFDbEIsa0JBQ0Q7T0FBWSxFQUFFLHNCQUNWO0NBQW1CLGtCQUN0Qjs7R0FDRCxTQUFTLEVBQUU7aUJBQ1A7UUFBaUI7S0FDakI7S0FDSSxPQUFPLEVBQUU7QUFBYSwwQkFDdEI7TUFBUSxFQUFFO2tCQUF5QiwwQkFDbkMsS0FBSyxFQUFFLElBQUksc0JBQ2Qsa0JBQ0osa0JBQ0QsT0FBTyxFQUFFLHNCQUNMLG1CQUFtQixrQkFDdEIsY0FDSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFRhYmxlTW9kdWxlIH0gZnJvbSAncHJpbWVuZy90YWJsZSc7XG5pbXBvcnQgeyBCdXR0b25Nb2R1bGUgfSBmcm9tICdwcmltZW5nL2J1dHRvbic7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAncHJpbWVuZy90b29sdGlwJztcblxuaW1wb3J0IHsgRXJyb3JTdGFja0NvbXBvbmVudCB9IGZyb20gJy4vZXJyb3Itc3RhY2suY29tcG9uZW50JztcbmltcG9ydCB7XG4gICAgRXJyb3JQcm92aWRlcixcbiAgICBFcnJvclN0YWNrU2VydmljZSxcbiAgICBFcnJvclN0YWNrUHJvdmlkZXJTZXJ2aWNlLFxuICAgIENsaXBib2FyZE1vZHVsZVxufSBmcm9tICdAbnV2ZW0vYW5ndWxhci1iYXNlJztcblxuLyoqXG4gKiBDbGFzcyBFcnJvclN0YWNrTW9kdWxlXG4gKiBAY2xhc3NcbiAqL1xuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgVGFibGVNb2R1bGUsXG4gICAgICAgIEJ1dHRvbk1vZHVsZSxcbiAgICAgICAgVG9vbHRpcE1vZHVsZSxcbiAgICAgICAgQ2xpcGJvYXJkTW9kdWxlXG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgRXJyb3JTdGFja0NvbXBvbmVudFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIEVycm9yU3RhY2tTZXJ2aWNlLFxuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBFcnJvclByb3ZpZGVyLFxuICAgICAgICAgICAgdXNlQ2xhc3M6IEVycm9yU3RhY2tQcm92aWRlclNlcnZpY2UsXG4gICAgICAgICAgICBtdWx0aTogdHJ1ZVxuICAgICAgICB9XG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIEVycm9yU3RhY2tDb21wb25lbnRcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIEVycm9yU3RhY2tNb2R1bGUge1xufVxuIl19