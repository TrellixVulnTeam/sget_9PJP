{"ast":null,"code":"import _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, ElementRef, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction Knob__svg_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"text\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"x\", 50)(\"y\", 57)(\"fill\", ctx_r0.textColor)(\"name\", ctx_r0.name);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.valueToDisplay());\n  }\n}\n\nvar KNOB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return Knob;\n  }),\n  multi: true\n};\n\nvar Knob = /*#__PURE__*/function () {\n  function Knob(cd, el) {\n    _classCallCheck(this, Knob);\n\n    this.cd = cd;\n    this.el = el;\n    this.valueColor = \"var(--primary-color, Black)\";\n    this.rangeColor = \"var(--surface-d, LightGray)\";\n    this.textColor = \"var(--text-color-secondary, Black)\";\n    this.valueTemplate = \"{value}\";\n    this.size = 100;\n    this.step = 1;\n    this.min = 0;\n    this.max = 100;\n    this.strokeWidth = 14;\n    this.showValue = true;\n    this.readonly = false;\n    this.onChange = new EventEmitter();\n    this.radius = 40;\n    this.midX = 50;\n    this.midY = 50;\n    this.minRadians = 4 * Math.PI / 3;\n    this.maxRadians = -Math.PI / 3;\n    this.value = null;\n\n    this.onModelChange = function () {};\n\n    this.onModelTouched = function () {};\n  }\n\n  _createClass(Knob, [{\n    key: \"mapRange\",\n    value: function mapRange(x, inMin, inMax, outMin, outMax) {\n      return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (!this.disabled && !this.readonly) {\n        this.updateValue(event.offsetX, event.offsetY);\n      }\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(offsetX, offsetY) {\n      var dx = offsetX - this.size / 2;\n      var dy = this.size / 2 - offsetY;\n      var angle = Math.atan2(dy, dx);\n      var start = -Math.PI / 2 - Math.PI / 6;\n      this.updateModel(angle, start);\n    }\n  }, {\n    key: \"updateModel\",\n    value: function updateModel(angle, start) {\n      var mappedValue;\n      if (angle > this.maxRadians) mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);else if (angle < start) mappedValue = this.mapRange(angle + 2 * Math.PI, this.minRadians, this.maxRadians, this.min, this.max);else return;\n      var newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n      this.value = newValue;\n      this.onModelChange(this.value);\n      this.onChange.emit(this.value);\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (!this.disabled && !this.readonly) {\n        this.windowMouseMoveListener = this.onMouseMove.bind(this);\n        this.windowMouseUpListener = this.onMouseUp.bind(this);\n        window.addEventListener('mousemove', this.windowMouseMoveListener);\n        window.addEventListener('mouseup', this.windowMouseUpListener);\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp(event) {\n      if (!this.disabled && !this.readonly) {\n        window.removeEventListener('mousemove', this.windowMouseMoveListener);\n        window.removeEventListener('mouseup', this.windowMouseUpListener);\n        this.windowMouseUpListener = null;\n        this.windowMouseMoveListener = null;\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(event) {\n      if (!this.disabled && !this.readonly) {\n        this.windowTouchMoveListener = this.onTouchMove.bind(this);\n        this.windowTouchEndListener = this.onTouchEnd.bind(this);\n        window.addEventListener('touchmove', this.windowTouchMoveListener);\n        window.addEventListener('touchend', this.windowTouchEndListener);\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd(event) {\n      if (!this.disabled && !this.readonly) {\n        window.removeEventListener('touchmove', this.windowTouchMoveListener);\n        window.removeEventListener('touchend', this.windowTouchEndListener);\n        this.windowTouchMoveListener = null;\n        this.windowTouchEndListener = null;\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      if (!this.disabled && !this.readonly) {\n        this.updateValue(event.offsetX, event.offsetY);\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onTouchMove\",\n    value: function onTouchMove(event) {\n      if (!this.disabled && !this.readonly && event.touches.length == 1) {\n        var rect = this.el.nativeElement.children[0].getBoundingClientRect();\n        var touch = event.targetTouches.item(0);\n        var offsetX = touch.clientX - rect.left;\n        var offsetY = touch.clientY - rect.top;\n        this.updateValue(offsetX, offsetY);\n      }\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"containerClass\",\n    value: function containerClass() {\n      return {\n        'p-knob p-component': true,\n        'p-disabled': this.disabled\n      };\n    }\n  }, {\n    key: \"rangePath\",\n    value: function rangePath() {\n      return \"M \".concat(this.minX(), \" \").concat(this.minY(), \" A \").concat(this.radius, \" \").concat(this.radius, \" 0 1 1 \").concat(this.maxX(), \" \").concat(this.maxY());\n    }\n  }, {\n    key: \"valuePath\",\n    value: function valuePath() {\n      return \"M \".concat(this.zeroX(), \" \").concat(this.zeroY(), \" A \").concat(this.radius, \" \").concat(this.radius, \" 0 \").concat(this.largeArc(), \" \").concat(this.sweep(), \" \").concat(this.valueX(), \" \").concat(this.valueY());\n    }\n  }, {\n    key: \"zeroRadians\",\n    value: function zeroRadians() {\n      if (this.min > 0 && this.max > 0) return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);else return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n    }\n  }, {\n    key: \"valueRadians\",\n    value: function valueRadians() {\n      return this.mapRange(this._value, this.min, this.max, this.minRadians, this.maxRadians);\n    }\n  }, {\n    key: \"minX\",\n    value: function minX() {\n      return this.midX + Math.cos(this.minRadians) * this.radius;\n    }\n  }, {\n    key: \"minY\",\n    value: function minY() {\n      return this.midY - Math.sin(this.minRadians) * this.radius;\n    }\n  }, {\n    key: \"maxX\",\n    value: function maxX() {\n      return this.midX + Math.cos(this.maxRadians) * this.radius;\n    }\n  }, {\n    key: \"maxY\",\n    value: function maxY() {\n      return this.midY - Math.sin(this.maxRadians) * this.radius;\n    }\n  }, {\n    key: \"zeroX\",\n    value: function zeroX() {\n      return this.midX + Math.cos(this.zeroRadians()) * this.radius;\n    }\n  }, {\n    key: \"zeroY\",\n    value: function zeroY() {\n      return this.midY - Math.sin(this.zeroRadians()) * this.radius;\n    }\n  }, {\n    key: \"valueX\",\n    value: function valueX() {\n      return this.midX + Math.cos(this.valueRadians()) * this.radius;\n    }\n  }, {\n    key: \"valueY\",\n    value: function valueY() {\n      return this.midY - Math.sin(this.valueRadians()) * this.radius;\n    }\n  }, {\n    key: \"largeArc\",\n    value: function largeArc() {\n      return Math.abs(this.zeroRadians() - this.valueRadians()) < Math.PI ? 0 : 1;\n    }\n  }, {\n    key: \"sweep\",\n    value: function sweep() {\n      return this.valueRadians() > this.zeroRadians() ? 0 : 1;\n    }\n  }, {\n    key: \"valueToDisplay\",\n    value: function valueToDisplay() {\n      return this.valueTemplate.replace(\"{value}\", this._value.toString());\n    }\n  }, {\n    key: \"_value\",\n    get: function get() {\n      return this.value != null ? this.value : this.min;\n    }\n  }]);\n\n  return Knob;\n}();\n\nKnob.ɵfac = function Knob_Factory(t) {\n  return new (t || Knob)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nKnob.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Knob,\n  selectors: [[\"p-knob\"]],\n  inputs: {\n    valueColor: \"valueColor\",\n    rangeColor: \"rangeColor\",\n    textColor: \"textColor\",\n    valueTemplate: \"valueTemplate\",\n    size: \"size\",\n    step: \"step\",\n    min: \"min\",\n    max: \"max\",\n    strokeWidth: \"strokeWidth\",\n    showValue: \"showValue\",\n    readonly: \"readonly\",\n    disabled: \"disabled\",\n    styleClass: \"styleClass\",\n    style: \"style\",\n    severity: \"severity\",\n    name: \"name\"\n  },\n  outputs: {\n    onChange: \"onChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([KNOB_VALUE_ACCESSOR])],\n  decls: 5,\n  vars: 15,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"viewBox\", \"0 0 100 100\", 3, \"click\", \"mousedown\", \"mouseup\", \"touchstart\", \"touchend\"], [1, \"p-knob-range\"], [1, \"p-knob-value\"], [\"text-anchor\", \"middle\", \"class\", \"p-knob-text\", 4, \"ngIf\"], [\"text-anchor\", \"middle\", 1, \"p-knob-text\"]],\n  template: function Knob_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵnamespaceSVG();\n      ɵngcc0.ɵɵelementStart(1, \"svg\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function Knob_Template__svg_svg_click_1_listener($event) {\n        return ctx.onClick($event);\n      })(\"mousedown\", function Knob_Template__svg_svg_mousedown_1_listener($event) {\n        return ctx.onMouseDown($event);\n      })(\"mouseup\", function Knob_Template__svg_svg_mouseup_1_listener($event) {\n        return ctx.onMouseUp($event);\n      })(\"touchstart\", function Knob_Template__svg_svg_touchstart_1_listener($event) {\n        return ctx.onTouchStart($event);\n      })(\"touchend\", function Knob_Template__svg_svg_touchend_1_listener($event) {\n        return ctx.onTouchEnd($event);\n      });\n      ɵngcc0.ɵɵelement(2, \"path\", 2);\n      ɵngcc0.ɵɵelement(3, \"path\", 3);\n      ɵngcc0.ɵɵtemplate(4, Knob__svg_text_4_Template, 2, 5, \"text\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.size + \"px\")(\"height\", ctx.size + \"px\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵattribute(\"d\", ctx.rangePath())(\"stroke-width\", ctx.strokeWidth)(\"stroke\", ctx.rangeColor);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵattribute(\"d\", ctx.valuePath())(\"stroke-width\", ctx.strokeWidth)(\"stroke\", ctx.valueColor);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgIf],\n  styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-fill-mode:forwards;animation-name:dash-frame;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nKnob.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }];\n};\n\nKnob.propDecorators = {\n  styleClass: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  severity: [{\n    type: Input\n  }],\n  valueColor: [{\n    type: Input\n  }],\n  rangeColor: [{\n    type: Input\n  }],\n  textColor: [{\n    type: Input\n  }],\n  valueTemplate: [{\n    type: Input\n  }],\n  name: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  step: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  strokeWidth: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  showValue: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  onChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Knob, [{\n    type: Component,\n    args: [{\n      selector: 'p-knob',\n      template: \"\\n        <div [ngClass]=\\\"containerClass()\\\" [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\">\\n        <svg viewBox=\\\"0 0 100 100\\\" [style.width]=\\\"size + 'px'\\\" [style.height]=\\\"size + 'px'\\\" (click)=\\\"onClick($event)\\\" (mousedown)=\\\"onMouseDown($event)\\\" (mouseup)=\\\"onMouseUp($event)\\\"\\n            (touchstart)=\\\"onTouchStart($event)\\\" (touchend)=\\\"onTouchEnd($event)\\\">\\n            <path [attr.d]=\\\"rangePath()\\\" [attr.stroke-width]=\\\"strokeWidth\\\" [attr.stroke]=\\\"rangeColor\\\" class=\\\"p-knob-range\\\"></path>\\n            <path [attr.d]=\\\"valuePath()\\\" [attr.stroke-width]=\\\"strokeWidth\\\" [attr.stroke]=\\\"valueColor\\\" class=\\\"p-knob-value\\\"></path>\\n            <text *ngIf=\\\"showValue\\\" [attr.x]=\\\"50\\\" [attr.y]=\\\"57\\\" text-anchor=\\\"middle\\\" [attr.fill]=\\\"textColor\\\" class=\\\"p-knob-text\\\" [attr.name]=\\\"name\\\">{{valueToDisplay()}}</text>\\n        </svg>\\n        </div>\\n    \",\n      providers: [KNOB_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-fill-mode:forwards;animation-name:dash-frame;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    valueColor: [{\n      type: Input\n    }],\n    rangeColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueTemplate: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    severity: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }]\n  });\n})();\n\nvar KnobModule = function KnobModule() {\n  _classCallCheck(this, KnobModule);\n};\n\nKnobModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: KnobModule\n});\nKnobModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function KnobModule_Factory(t) {\n    return new (t || KnobModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(KnobModule, {\n    declarations: function declarations() {\n      return [Knob];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [Knob];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KnobModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Knob],\n      declarations: [Knob]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { KNOB_VALUE_ACCESSOR, Knob, KnobModule };","map":{"version":3,"sources":["../../src/app/components/knob/knob.ts","../../src/app/components/knob/primeng-knob.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, forwardRef, ChangeDetectorRef, ElementRef, Output, EventEmitter} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const KNOB_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Knob),\n    multi: true\n};\n\n@Component({\n    selector: 'p-knob',\n    template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n        <svg viewBox=\"0 0 100 100\" [style.width]=\"size + 'px'\" [style.height]=\"size + 'px'\" (click)=\"onClick($event)\" (mousedown)=\"onMouseDown($event)\" (mouseup)=\"onMouseUp($event)\"\n            (touchstart)=\"onTouchStart($event)\" (touchend)=\"onTouchEnd($event)\">\n            <path [attr.d]=\"rangePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"rangeColor\" class=\"p-knob-range\"></path>\n            <path [attr.d]=\"valuePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"valueColor\" class=\"p-knob-value\"></path>\n            <text *ngIf=\"showValue\" [attr.x]=\"50\" [attr.y]=\"57\" text-anchor=\"middle\" [attr.fill]=\"textColor\" class=\"p-knob-text\" [attr.name]=\"name\">{{valueToDisplay()}}</text>\n        </svg>\n        </div>\n    `,\n    providers: [KNOB_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./knob.css']\n})\nexport class Knob {\n\n    @Input() styleClass: string;\n\n    @Input() style: any;\n\n    @Input() severity: string;\n\n    @Input() valueColor: string = \"var(--primary-color, Black)\";\n\n    @Input() rangeColor: string = \"var(--surface-d, LightGray)\";\n\n    @Input() textColor: string = \"var(--text-color-secondary, Black)\";\n\n    @Input() valueTemplate: string = \"{value}\";\n\n    @Input() name: string;\n\n    @Input() size: number = 100;\n\n    @Input() step: number = 1;\n\n    @Input() min: number = 0;\n\n    @Input() max: number = 100;\n\n    @Input() strokeWidth: number = 14;\n\n    @Input() disabled: boolean;\n\n    @Input() showValue: boolean = true;\n\n    @Input() readonly: boolean = false;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    radius: number = 40;\n\n    midX: number = 50;\n\n    midY: number = 50;\n\n    minRadians: number = 4 * Math.PI / 3;\n\n    maxRadians: number = -Math.PI / 3;\n    \n    value: number = null;\n\n    windowMouseMoveListener: any;\n\n    windowMouseUpListener: any;\n\n    windowTouchMoveListener: any;\n\n    windowTouchEndListener: any;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    constructor(private cd: ChangeDetectorRef, private el: ElementRef) { }\n\n    mapRange(x, inMin, inMax, outMin, outMax) {\n        return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n    }\n\n    onClick(event) {\n        if (!this.disabled && !this.readonly) {\n            this.updateValue(event.offsetX, event.offsetY);\n        }\n    }\n\n    updateValue(offsetX, offsetY) {\n        let dx = offsetX - this.size / 2;\n        let dy =  this.size / 2 - offsetY;\n        let angle = Math.atan2(dy, dx);\n        let start = -Math.PI / 2 - Math.PI / 6;\n        this.updateModel(angle, start);\n    }\n\n    updateModel(angle, start) {\n        let mappedValue;\n        if (angle > this.maxRadians)\n            mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);\n        else if (angle < start)\n            mappedValue = this.mapRange(angle + 2 * Math.PI, this.minRadians, this.maxRadians, this.min, this.max);\n        else\n            return;\n\n        let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n        this.value = newValue;\n        this.onModelChange(this.value);\n        this.onChange.emit(this.value);\n    }\n\n    onMouseDown(event) {\n        if (!this.disabled && !this.readonly) {\n            this.windowMouseMoveListener = this.onMouseMove.bind(this)\n            this.windowMouseUpListener = this.onMouseUp.bind(this)\n            window.addEventListener('mousemove', this.windowMouseMoveListener);\n            window.addEventListener('mouseup', this.windowMouseUpListener);\n            event.preventDefault();\n        }\n    }\n\n    onMouseUp(event) {\n        if (!this.disabled && !this.readonly) {\n            window.removeEventListener('mousemove', this.windowMouseMoveListener);\n            window.removeEventListener('mouseup', this.windowMouseUpListener);\n            this.windowMouseUpListener = null;\n            this.windowMouseMoveListener = null;\n            event.preventDefault();\n        }\n    }\n\n    onTouchStart(event) {\n        if (!this.disabled && !this.readonly) {\n            this.windowTouchMoveListener = this.onTouchMove.bind(this);\n            this.windowTouchEndListener = this.onTouchEnd.bind(this);\n            window.addEventListener('touchmove', this.windowTouchMoveListener);\n            window.addEventListener('touchend', this.windowTouchEndListener);\n            event.preventDefault();\n        }\n    }\n\n    onTouchEnd(event) {\n        if (!this.disabled && !this.readonly) {\n            window.removeEventListener('touchmove', this.windowTouchMoveListener);\n            window.removeEventListener('touchend', this.windowTouchEndListener);\n            this.windowTouchMoveListener = null;\n            this.windowTouchEndListener = null;\n            event.preventDefault();\n        }\n    }\n\n    onMouseMove(event) {\n        if (!this.disabled && !this.readonly) {\n            this.updateValue(event.offsetX, event.offsetY);\n            event.preventDefault();\n        }\n    }\n\n    onTouchMove(event) {\n        if (!this.disabled && !this.readonly && event.touches.length == 1) {\n            const rect = this.el.nativeElement.children[0].getBoundingClientRect();\n            const touch = event.targetTouches.item(0);\n            const offsetX = touch.clientX - rect.left;\n            const offsetY = touch.clientY - rect.top;\n            this.updateValue(offsetX, offsetY);\n        }\n    }\n\n    writeValue(value: any) : void {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    containerClass() {\n        return {\n            'p-knob p-component': true,\n            'p-disabled': this.disabled\n        };\n    }\n\n    rangePath() {\n        return `M ${this.minX()} ${this.minY()} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX()} ${this.maxY()}`;\n    }\n\n    valuePath() {\n        return `M ${this.zeroX()} ${this.zeroY()} A ${this.radius} ${this.radius} 0 ${this.largeArc()} ${this.sweep()} ${this.valueX()} ${this.valueY()}`;\n    }\n\n    zeroRadians() {\n        if (this.min > 0 && this.max > 0)\n            return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);\n        else\n            return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n    }\n\n    valueRadians() {\n        return this.mapRange(this._value, this.min, this.max, this.minRadians, this.maxRadians);\n    }\n\n    minX() {\n        return this.midX + Math.cos(this.minRadians) * this.radius;\n    }\n\n    minY() {\n        return this.midY - Math.sin(this.minRadians) * this.radius;\n    }\n\n    maxX() {\n        return this.midX + Math.cos(this.maxRadians) * this.radius;\n    }\n\n    maxY() {\n        return this.midY - Math.sin(this.maxRadians) * this.radius;\n    }\n\n    zeroX() {\n        return this.midX + Math.cos(this.zeroRadians()) * this.radius;\n    }\n\n    zeroY() {\n        return this.midY - Math.sin(this.zeroRadians()) * this.radius;\n    }\n\n    valueX() {\n        return this.midX + Math.cos(this.valueRadians()) * this.radius;\n    }\n\n    valueY() {\n        return this.midY - Math.sin(this.valueRadians()) * this.radius;\n    }\n\n    largeArc() {\n        return Math.abs(this.zeroRadians() - this.valueRadians()) < Math.PI ? 0 : 1;\n    }\n\n    sweep() {\n        return this.valueRadians() > this.zeroRadians() ? 0 : 1;\n    }\n\n    valueToDisplay() {\n        return this.valueTemplate.replace(\"{value}\", this._value.toString());\n    }\n\n    get _value(): number {\n        return this.value != null ? this.value : this.min;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Knob],\n    declarations: [Knob]\n})\nexport class KnobModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}