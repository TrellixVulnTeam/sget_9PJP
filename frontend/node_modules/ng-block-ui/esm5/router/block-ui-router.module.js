/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from '@angular/core';
import { BlockUIModule } from 'ng-block-ui';
import { BlockUIPreventNavigation } from './block-ui-prevent-navigation.service';
import * as ɵngcc0 from '@angular/core';
var BlockUIRouterModule = /** @class */ (function () {
    function BlockUIRouterModule() {
    }
    /**
     * @return {?}
     */
    BlockUIRouterModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: BlockUIRouterModule,
            providers: [
                BlockUIPreventNavigation
            ]
        };
    };
BlockUIRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BlockUIRouterModule });
BlockUIRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BlockUIRouterModule_Factory(t) { return new (t || BlockUIRouterModule)(); }, imports: [[
            BlockUIModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BlockUIRouterModule, { imports: function () { return [BlockUIModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BlockUIRouterModule, [{
        type: NgModule,
        args: [{
                imports: [
                    BlockUIModule
                ]
            }]
    }], function () { return []; }, null); })();
    return BlockUIRouterModule;
}());
export { BlockUIRouterModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2stdWktcm91dGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmctYmxvY2stdWkvcm91dGVyL2Jsb2NrLXVpLXJvdXRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDNUMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7O0FBQ2pGO0FBT0c7QUFDRTtBQUFNO0FBQVE7QUFBbUI7QUFBUSxJQUE5QiwyQkFBTztBQUFPO0FBQzlCO0FBQVE7QUFDSyxRQURULE1BQU0sQ0FBQztBQUNYLFlBQU0sUUFBUSxFQUFFLG1CQUFtQjtBQUNuQyxZQUFNLFNBQVMsRUFBRTtBQUNqQixnQkFBUSx3QkFBd0I7QUFDaEMsYUFBTztBQUNQLFNBQUssQ0FBQztBQUNOO3VEQWJDLFFBQVEsU0FBQztXQUNSLE9BQU8sRUFBRSwwQkFDUCxhQUFhLHNCQUNkLGtCQUNGOzs7Ozs7Ozs7OztnREFDUTtBQUFDLDhCQVhWO0FBQUU7QUFBTSxTQVdLLG1CQUFtQjs7QUFYQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFTQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBWkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFWQSxBQVdBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBCbG9ja1VJTW9kdWxlIH0gZnJvbSAnbmctYmxvY2stdWknO1xuaW1wb3J0IHsgQmxvY2tVSVByZXZlbnROYXZpZ2F0aW9uIH0gZnJvbSAnLi9ibG9jay11aS1wcmV2ZW50LW5hdmlnYXRpb24uc2VydmljZSc7XG5cblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIEJsb2NrVUlNb2R1bGVcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBCbG9ja1VJUm91dGVyTW9kdWxlIHtcbiAgcHVibGljIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQmxvY2tVSVJvdXRlck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICBCbG9ja1VJUHJldmVudE5hdmlnYXRpb25cbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=