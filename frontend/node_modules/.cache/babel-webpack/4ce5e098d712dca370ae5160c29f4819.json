{"ast":null,"code":"import _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n/*\n    Port of jQuery MaskedInput by DigitalBush as a Native Angular2 Component in Typescript without jQuery\n    https://github.com/digitalBush/jquery.maskedinput/\n\n    Copyright (c) 2007-2014 Josh Bush (digitalbush.com)\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'primeng/inputtext';\nimport * as ɵngcc2 from '@angular/common';\nvar _c0 = [\"input\"];\nvar INPUTMASK_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return InputMask;\n  }),\n  multi: true\n};\n\nvar InputMask = /*#__PURE__*/function () {\n  function InputMask(el, cd) {\n    _classCallCheck(this, InputMask);\n\n    this.el = el;\n    this.cd = cd;\n    this.type = 'text';\n    this.slotChar = '_';\n    this.autoClear = true;\n    this.characterPattern = '[A-Za-z]';\n    this.onComplete = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onInput = new EventEmitter();\n    this.onKeydown = new EventEmitter();\n\n    this.onModelChange = function () {};\n\n    this.onModelTouched = function () {};\n  }\n\n  _createClass(InputMask, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var ua = DomHandler.getUserAgent();\n      this.androidChrome = /chrome/i.test(ua) && /android/i.test(ua);\n      this.initMask();\n    }\n  }, {\n    key: \"mask\",\n    get: function get() {\n      return this._mask;\n    },\n    set: function set(val) {\n      this._mask = val;\n      this.initMask();\n      this.writeValue('');\n      this.onModelChange(this.value);\n    }\n  }, {\n    key: \"initMask\",\n    value: function initMask() {\n      this.tests = [];\n      this.partialPosition = this.mask.length;\n      this.len = this.mask.length;\n      this.firstNonMaskPos = null;\n      this.defs = {\n        '9': '[0-9]',\n        'a': this.characterPattern,\n        '*': \"\".concat(this.characterPattern, \"|[0-9]\")\n      };\n      var maskTokens = this.mask.split('');\n\n      for (var i = 0; i < maskTokens.length; i++) {\n        var c = maskTokens[i];\n\n        if (c == '?') {\n          this.len--;\n          this.partialPosition = i;\n        } else if (this.defs[c]) {\n          this.tests.push(new RegExp(this.defs[c]));\n\n          if (this.firstNonMaskPos === null) {\n            this.firstNonMaskPos = this.tests.length - 1;\n          }\n\n          if (i < this.partialPosition) {\n            this.lastRequiredNonMaskPos = this.tests.length - 1;\n          }\n        } else {\n          this.tests.push(null);\n        }\n      }\n\n      this.buffer = [];\n\n      for (var _i = 0; _i < maskTokens.length; _i++) {\n        var _c = maskTokens[_i];\n\n        if (_c != '?') {\n          if (this.defs[_c]) this.buffer.push(this.getPlaceholder(_i));else this.buffer.push(_c);\n        }\n      }\n\n      this.defaultBuffer = this.buffer.join('');\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n\n      if (this.inputViewChild && this.inputViewChild.nativeElement) {\n        if (this.value == undefined || this.value == null) this.inputViewChild.nativeElement.value = '';else this.inputViewChild.nativeElement.value = this.value;\n        this.checkVal();\n        this.focusText = this.inputViewChild.nativeElement.value;\n        this.updateFilledState();\n      }\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"caret\",\n    value: function caret(first, last) {\n      var range, begin, end;\n\n      if (!this.inputViewChild.nativeElement.offsetParent || this.inputViewChild.nativeElement !== this.inputViewChild.nativeElement.ownerDocument.activeElement) {\n        return;\n      }\n\n      if (typeof first == 'number') {\n        begin = first;\n        end = typeof last === 'number' ? last : begin;\n\n        if (this.inputViewChild.nativeElement.setSelectionRange) {\n          this.inputViewChild.nativeElement.setSelectionRange(begin, end);\n        } else if (this.inputViewChild.nativeElement['createTextRange']) {\n          range = this.inputViewChild.nativeElement['createTextRange']();\n          range.collapse(true);\n          range.moveEnd('character', end);\n          range.moveStart('character', begin);\n          range.select();\n        }\n      } else {\n        if (this.inputViewChild.nativeElement.setSelectionRange) {\n          begin = this.inputViewChild.nativeElement.selectionStart;\n          end = this.inputViewChild.nativeElement.selectionEnd;\n        } else if (document['selection'] && document['selection'].createRange) {\n          range = document['selection'].createRange();\n          begin = 0 - range.duplicate().moveStart('character', -100000);\n          end = begin + range.text.length;\n        }\n\n        return {\n          begin: begin,\n          end: end\n        };\n      }\n    }\n  }, {\n    key: \"isCompleted\",\n    value: function isCompleted() {\n      var completed;\n\n      for (var i = this.firstNonMaskPos; i <= this.lastRequiredNonMaskPos; i++) {\n        if (this.tests[i] && this.buffer[i] === this.getPlaceholder(i)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getPlaceholder\",\n    value: function getPlaceholder(i) {\n      if (i < this.slotChar.length) {\n        return this.slotChar.charAt(i);\n      }\n\n      return this.slotChar.charAt(0);\n    }\n  }, {\n    key: \"seekNext\",\n    value: function seekNext(pos) {\n      while (++pos < this.len && !this.tests[pos]) {\n        ;\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"seekPrev\",\n    value: function seekPrev(pos) {\n      while (--pos >= 0 && !this.tests[pos]) {\n        ;\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"shiftL\",\n    value: function shiftL(begin, end) {\n      var i, j;\n\n      if (begin < 0) {\n        return;\n      }\n\n      for (i = begin, j = this.seekNext(end); i < this.len; i++) {\n        if (this.tests[i]) {\n          if (j < this.len && this.tests[i].test(this.buffer[j])) {\n            this.buffer[i] = this.buffer[j];\n            this.buffer[j] = this.getPlaceholder(j);\n          } else {\n            break;\n          }\n\n          j = this.seekNext(j);\n        }\n      }\n\n      this.writeBuffer();\n      this.caret(Math.max(this.firstNonMaskPos, begin));\n    }\n  }, {\n    key: \"shiftR\",\n    value: function shiftR(pos) {\n      var i, c, j, t;\n\n      for (i = pos, c = this.getPlaceholder(pos); i < this.len; i++) {\n        if (this.tests[i]) {\n          j = this.seekNext(i);\n          t = this.buffer[i];\n          this.buffer[i] = c;\n\n          if (j < this.len && this.tests[j].test(t)) {\n            c = t;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleAndroidInput\",\n    value: function handleAndroidInput(e) {\n      var _this = this;\n\n      var curVal = this.inputViewChild.nativeElement.value;\n      var pos = this.caret();\n\n      if (this.oldVal && this.oldVal.length && this.oldVal.length > curVal.length) {\n        // a deletion or backspace happened\n        this.checkVal(true);\n\n        while (pos.begin > 0 && !this.tests[pos.begin - 1]) {\n          pos.begin--;\n        }\n\n        if (pos.begin === 0) {\n          while (pos.begin < this.firstNonMaskPos && !this.tests[pos.begin]) {\n            pos.begin++;\n          }\n        }\n\n        setTimeout(function () {\n          _this.caret(pos.begin, pos.begin);\n\n          _this.updateModel(e);\n\n          if (_this.isCompleted()) {\n            _this.onComplete.emit();\n          }\n        }, 0);\n      } else {\n        this.checkVal(true);\n\n        while (pos.begin < this.len && !this.tests[pos.begin]) {\n          pos.begin++;\n        }\n\n        setTimeout(function () {\n          _this.caret(pos.begin, pos.begin);\n\n          _this.updateModel(e);\n\n          if (_this.isCompleted()) {\n            _this.onComplete.emit();\n          }\n        }, 0);\n      }\n    }\n  }, {\n    key: \"onInputBlur\",\n    value: function onInputBlur(e) {\n      this.focused = false;\n      this.onModelTouched();\n      this.checkVal();\n      this.updateFilledState();\n      this.onBlur.emit(e);\n\n      if (this.inputViewChild.nativeElement.value != this.focusText || this.inputViewChild.nativeElement.value != this.value) {\n        this.updateModel(e);\n        var event = document.createEvent('HTMLEvents');\n        event.initEvent('change', true, false);\n        this.inputViewChild.nativeElement.dispatchEvent(event);\n      }\n    }\n  }, {\n    key: \"onInputKeydown\",\n    value: function onInputKeydown(e) {\n      if (this.readonly) {\n        return;\n      }\n\n      var k = e.which || e.keyCode,\n          pos,\n          begin,\n          end;\n      var iPhone = /iphone/i.test(DomHandler.getUserAgent());\n      this.oldVal = this.inputViewChild.nativeElement.value;\n      this.onKeydown.emit(e); //backspace, delete, and escape get special treatment\n\n      if (k === 8 || k === 46 || iPhone && k === 127) {\n        pos = this.caret();\n        begin = pos.begin;\n        end = pos.end;\n\n        if (end - begin === 0) {\n          begin = k !== 46 ? this.seekPrev(begin) : end = this.seekNext(begin - 1);\n          end = k === 46 ? this.seekNext(end) : end;\n        }\n\n        this.clearBuffer(begin, end);\n        this.shiftL(begin, end - 1);\n        this.updateModel(e);\n        this.onInput.emit(e);\n        e.preventDefault();\n      } else if (k === 13) {\n        // enter\n        this.onInputBlur(e);\n        this.updateModel(e);\n      } else if (k === 27) {\n        // escape\n        this.inputViewChild.nativeElement.value = this.focusText;\n        this.caret(0, this.checkVal());\n        this.updateModel(e);\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(e) {\n      var _this2 = this;\n\n      if (this.readonly) {\n        return;\n      }\n\n      var k = e.which || e.keyCode,\n          pos = this.caret(),\n          p,\n          c,\n          next,\n          completed;\n\n      if (e.ctrlKey || e.altKey || e.metaKey || k < 32 || k > 34 && k < 41) {\n        //Ignore\n        return;\n      } else if (k && k !== 13) {\n        if (pos.end - pos.begin !== 0) {\n          this.clearBuffer(pos.begin, pos.end);\n          this.shiftL(pos.begin, pos.end - 1);\n        }\n\n        p = this.seekNext(pos.begin - 1);\n\n        if (p < this.len) {\n          c = String.fromCharCode(k);\n\n          if (this.tests[p].test(c)) {\n            this.shiftR(p);\n            this.buffer[p] = c;\n            this.writeBuffer();\n            next = this.seekNext(p);\n\n            if (/android/i.test(DomHandler.getUserAgent())) {\n              //Path for CSP Violation on FireFox OS 1.1\n              var proxy = function proxy() {\n                _this2.caret(next);\n              };\n\n              setTimeout(proxy, 0);\n            } else {\n              this.caret(next);\n            }\n\n            if (pos.begin <= this.lastRequiredNonMaskPos) {\n              completed = this.isCompleted();\n            }\n\n            this.onInput.emit(e);\n          }\n        }\n\n        e.preventDefault();\n      }\n\n      this.updateModel(e);\n      this.updateFilledState();\n\n      if (completed) {\n        this.onComplete.emit();\n      }\n    }\n  }, {\n    key: \"clearBuffer\",\n    value: function clearBuffer(start, end) {\n      var i;\n\n      for (i = start; i < end && i < this.len; i++) {\n        if (this.tests[i]) {\n          this.buffer[i] = this.getPlaceholder(i);\n        }\n      }\n    }\n  }, {\n    key: \"writeBuffer\",\n    value: function writeBuffer() {\n      this.inputViewChild.nativeElement.value = this.buffer.join('');\n    }\n  }, {\n    key: \"checkVal\",\n    value: function checkVal(allow) {\n      //try to place characters where they belong\n      var test = this.inputViewChild.nativeElement.value,\n          lastMatch = -1,\n          i,\n          c,\n          pos;\n\n      for (i = 0, pos = 0; i < this.len; i++) {\n        if (this.tests[i]) {\n          this.buffer[i] = this.getPlaceholder(i);\n\n          while (pos++ < test.length) {\n            c = test.charAt(pos - 1);\n\n            if (this.tests[i].test(c)) {\n              this.buffer[i] = c;\n              lastMatch = i;\n              break;\n            }\n          }\n\n          if (pos > test.length) {\n            this.clearBuffer(i + 1, this.len);\n            break;\n          }\n        } else {\n          if (this.buffer[i] === test.charAt(pos)) {\n            pos++;\n          }\n\n          if (i < this.partialPosition) {\n            lastMatch = i;\n          }\n        }\n      }\n\n      if (allow) {\n        this.writeBuffer();\n      } else if (lastMatch + 1 < this.partialPosition) {\n        if (this.autoClear || this.buffer.join('') === this.defaultBuffer) {\n          // Invalid value. Remove it and replace it with the\n          // mask, which is the default behavior.\n          if (this.inputViewChild.nativeElement.value) this.inputViewChild.nativeElement.value = '';\n          this.clearBuffer(0, this.len);\n        } else {\n          // Invalid value, but we opt to show the value to the\n          // user and allow them to correct their mistake.\n          this.writeBuffer();\n        }\n      } else {\n        this.writeBuffer();\n        this.inputViewChild.nativeElement.value = this.inputViewChild.nativeElement.value.substring(0, lastMatch + 1);\n      }\n\n      return this.partialPosition ? i : this.firstNonMaskPos;\n    }\n  }, {\n    key: \"onInputFocus\",\n    value: function onInputFocus(event) {\n      var _this3 = this;\n\n      if (this.readonly) {\n        return;\n      }\n\n      this.focused = true;\n      clearTimeout(this.caretTimeoutId);\n      var pos;\n      this.focusText = this.inputViewChild.nativeElement.value;\n      pos = this.checkVal();\n      this.caretTimeoutId = setTimeout(function () {\n        if (_this3.inputViewChild.nativeElement !== _this3.inputViewChild.nativeElement.ownerDocument.activeElement) {\n          return;\n        }\n\n        _this3.writeBuffer();\n\n        if (pos == _this3.mask.replace(\"?\", \"\").length) {\n          _this3.caret(0, pos);\n        } else {\n          _this3.caret(pos);\n        }\n      }, 10);\n      this.onFocus.emit(event);\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(event) {\n      if (this.androidChrome) this.handleAndroidInput(event);else this.handleInputChange(event);\n      this.onInput.emit(event);\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var _this4 = this;\n\n      if (this.readonly) {\n        return;\n      }\n\n      setTimeout(function () {\n        var pos = _this4.checkVal(true);\n\n        _this4.caret(pos);\n\n        _this4.updateModel(event);\n\n        if (_this4.isCompleted()) {\n          _this4.onComplete.emit();\n        }\n      }, 0);\n    }\n  }, {\n    key: \"getUnmaskedValue\",\n    value: function getUnmaskedValue() {\n      var unmaskedBuffer = [];\n\n      for (var i = 0; i < this.buffer.length; i++) {\n        var c = this.buffer[i];\n\n        if (this.tests[i] && c != this.getPlaceholder(i)) {\n          unmaskedBuffer.push(c);\n        }\n      }\n\n      return unmaskedBuffer.join('');\n    }\n  }, {\n    key: \"updateModel\",\n    value: function updateModel(e) {\n      var updatedValue = this.unmask ? this.getUnmaskedValue() : e.target.value;\n\n      if (updatedValue !== null || updatedValue !== undefined) {\n        this.value = updatedValue;\n        this.onModelChange(this.value);\n      }\n    }\n  }, {\n    key: \"updateFilledState\",\n    value: function updateFilledState() {\n      this.filled = this.inputViewChild.nativeElement && this.inputViewChild.nativeElement.value != '';\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.inputViewChild.nativeElement.focus();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {}\n  }]);\n\n  return InputMask;\n}();\n\nInputMask.ɵfac = function InputMask_Factory(t) {\n  return new (t || InputMask)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nInputMask.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: InputMask,\n  selectors: [[\"p-inputMask\"]],\n  viewQuery: function InputMask_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 3);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputViewChild = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function InputMask_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused);\n    }\n  },\n  inputs: {\n    type: \"type\",\n    slotChar: \"slotChar\",\n    autoClear: \"autoClear\",\n    characterPattern: \"characterPattern\",\n    mask: \"mask\",\n    disabled: \"disabled\",\n    style: \"style\",\n    inputId: \"inputId\",\n    styleClass: \"styleClass\",\n    placeholder: \"placeholder\",\n    size: \"size\",\n    maxlength: \"maxlength\",\n    tabindex: \"tabindex\",\n    title: \"title\",\n    ariaLabel: \"ariaLabel\",\n    ariaRequired: \"ariaRequired\",\n    readonly: \"readonly\",\n    unmask: \"unmask\",\n    name: \"name\",\n    required: \"required\",\n    autoFocus: \"autoFocus\",\n    autocomplete: \"autocomplete\"\n  },\n  outputs: {\n    onComplete: \"onComplete\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onInput: \"onInput\",\n    onKeydown: \"onKeydown\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([INPUTMASK_VALUE_ACCESSOR])],\n  decls: 2,\n  vars: 17,\n  consts: [[\"pInputText\", \"\", 1, \"p-inputmask\", 3, \"ngStyle\", \"ngClass\", \"disabled\", \"readonly\", \"focus\", \"blur\", \"keydown\", \"keypress\", \"input\", \"paste\"], [\"input\", \"\"]],\n  template: function InputMask_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"input\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"focus\", function InputMask_Template_input_focus_0_listener($event) {\n        return ctx.onInputFocus($event);\n      })(\"blur\", function InputMask_Template_input_blur_0_listener($event) {\n        return ctx.onInputBlur($event);\n      })(\"keydown\", function InputMask_Template_input_keydown_0_listener($event) {\n        return ctx.onInputKeydown($event);\n      })(\"keypress\", function InputMask_Template_input_keypress_0_listener($event) {\n        return ctx.onKeyPress($event);\n      })(\"input\", function InputMask_Template_input_input_0_listener($event) {\n        return ctx.onInputChange($event);\n      })(\"paste\", function InputMask_Template_input_paste_0_listener($event) {\n        return ctx.handleInputChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ctx.styleClass)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly);\n      ɵngcc0.ɵɵattribute(\"id\", ctx.inputId)(\"type\", ctx.type)(\"name\", ctx.name)(\"placeholder\", ctx.placeholder)(\"title\", ctx.title)(\"size\", ctx.size)(\"autocomplete\", ctx.autocomplete)(\"maxlength\", ctx.maxlength)(\"tabindex\", ctx.tabindex)(\"aria-label\", ctx.ariaLabel)(\"aria-required\", ctx.ariaRequired)(\"required\", ctx.required)(\"autofocus\", ctx.autoFocus);\n    }\n  },\n  directives: [ɵngcc1.InputText, ɵngcc2.NgStyle, ɵngcc2.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nInputMask.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nInputMask.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  slotChar: [{\n    type: Input\n  }],\n  autoClear: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  inputId: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  maxlength: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input\n  }],\n  ariaRequired: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  unmask: [{\n    type: Input\n  }],\n  name: [{\n    type: Input\n  }],\n  required: [{\n    type: Input\n  }],\n  characterPattern: [{\n    type: Input\n  }],\n  autoFocus: [{\n    type: Input\n  }],\n  autocomplete: [{\n    type: Input\n  }],\n  inputViewChild: [{\n    type: ViewChild,\n    args: ['input', {\n      static: true\n    }]\n  }],\n  onComplete: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output\n  }],\n  onBlur: [{\n    type: Output\n  }],\n  onInput: [{\n    type: Output\n  }],\n  onKeydown: [{\n    type: Output\n  }],\n  mask: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputMask, [{\n    type: Component,\n    args: [{\n      selector: 'p-inputMask',\n      template: \"<input #input pInputText class=\\\"p-inputmask\\\" [attr.id]=\\\"inputId\\\" [attr.type]=\\\"type\\\" [attr.name]=\\\"name\\\" [ngStyle]=\\\"style\\\" [ngClass]=\\\"styleClass\\\" [attr.placeholder]=\\\"placeholder\\\" [attr.title]=\\\"title\\\"\\n        [attr.size]=\\\"size\\\" [attr.autocomplete]=\\\"autocomplete\\\" [attr.maxlength]=\\\"maxlength\\\" [attr.tabindex]=\\\"tabindex\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-required]=\\\"ariaRequired\\\" [disabled]=\\\"disabled\\\" [readonly]=\\\"readonly\\\" [attr.required]=\\\"required\\\"\\n        (focus)=\\\"onInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\" (keydown)=\\\"onInputKeydown($event)\\\" (keypress)=\\\"onKeyPress($event)\\\" [attr.autofocus]=\\\"autoFocus\\\"\\n        (input)=\\\"onInputChange($event)\\\" (paste)=\\\"handleInputChange($event)\\\">\",\n      host: {\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused'\n      },\n      providers: [INPUTMASK_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    slotChar: [{\n      type: Input\n    }],\n    autoClear: [{\n      type: Input\n    }],\n    characterPattern: [{\n      type: Input\n    }],\n    onComplete: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onInput: [{\n      type: Output\n    }],\n    onKeydown: [{\n      type: Output\n    }],\n    mask: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaRequired: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    unmask: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    inputViewChild: [{\n      type: ViewChild,\n      args: ['input', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nvar InputMaskModule = function InputMaskModule() {\n  _classCallCheck(this, InputMaskModule);\n};\n\nInputMaskModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: InputMaskModule\n});\nInputMaskModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function InputMaskModule_Factory(t) {\n    return new (t || InputMaskModule)();\n  },\n  imports: [[CommonModule, InputTextModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputMaskModule, {\n    declarations: function declarations() {\n      return [InputMask];\n    },\n    imports: function imports() {\n      return [CommonModule, InputTextModule];\n    },\n    exports: function exports() {\n      return [InputMask];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputMaskModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule],\n      exports: [InputMask],\n      declarations: [InputMask]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { INPUTMASK_VALUE_ACCESSOR, InputMask, InputMaskModule };","map":{"version":3,"sources":["../../src/app/components/inputmask/inputmask.ts","../../src/app/components/inputmask/primeng-inputmask.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n    Port of jQuery MaskedInput by DigitalBush as a Native Angular2 Component in Typescript without jQuery\n    https://github.com/digitalBush/jquery.maskedinput/\n\n    Copyright (c) 2007-2014 Josh Bush (digitalbush.com)\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n*/\nimport {NgModule,Component,ElementRef,OnInit,OnDestroy,Input,forwardRef,Output,EventEmitter,ViewChild,ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const INPUTMASK_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputMask),\n  multi: true\n};\n\n@Component({\n    selector: 'p-inputMask',\n    template: `<input #input pInputText class=\"p-inputmask\" [attr.id]=\"inputId\" [attr.type]=\"type\" [attr.name]=\"name\" [ngStyle]=\"style\" [ngClass]=\"styleClass\" [attr.placeholder]=\"placeholder\" [attr.title]=\"title\"\n        [attr.size]=\"size\" [attr.autocomplete]=\"autocomplete\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [attr.aria-label]=\"ariaLabel\" [attr.aria-required]=\"ariaRequired\" [disabled]=\"disabled\" [readonly]=\"readonly\" [attr.required]=\"required\"\n        (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (keydown)=\"onInputKeydown($event)\" (keypress)=\"onKeyPress($event)\" [attr.autofocus]=\"autoFocus\"\n        (input)=\"onInputChange($event)\" (paste)=\"handleInputChange($event)\">`,\n    host: {\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused'\n    },\n    providers: [INPUTMASK_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class InputMask implements OnInit,OnDestroy,ControlValueAccessor {\n\n    @Input() type: string = 'text';\n\n    @Input() slotChar: string = '_';\n\n    @Input() autoClear: boolean = true;\n\n    @Input() style: any;\n\n    @Input() inputId: string;\n\n    @Input() styleClass: string;\n\n    @Input() placeholder: string;\n\n    @Input() size: number;\n\n    @Input() maxlength: number;\n\n    @Input() tabindex: string;\n\n    @Input() title: string;\n\n    @Input() ariaLabel: string;\n\n    @Input() ariaRequired: boolean;\n\n    @Input() disabled: boolean;\n\n    @Input() readonly: boolean;\n\n    @Input() unmask: boolean;\n\n    @Input() name: string;\n\n    @Input() required: boolean;\n\n    @Input() characterPattern: string = '[A-Za-z]';\n\n    @Input() autoFocus: boolean;\n\n    @Input() autocomplete: string;\n\n    @ViewChild('input', { static: true }) inputViewChild: ElementRef;\n\n    @Output() onComplete: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Output() onInput: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onKeydown: EventEmitter<any> = new EventEmitter();\n\n    value: any;\n\n    _mask: string;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    input: HTMLInputElement;\n\n    filled: boolean;\n\n    defs: any;\n\n    tests: any[];\n\n    partialPosition: any;\n\n    firstNonMaskPos: number;\n\n    lastRequiredNonMaskPos: any;\n\n    len: number;\n\n    oldVal: string;\n\n    buffer: any;\n\n    defaultBuffer: string;\n\n    focusText: string;\n\n    caretTimeoutId: any;\n\n    androidChrome: boolean;\n\n    focused: boolean;\n\n    constructor(public el: ElementRef, private cd: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        let ua = DomHandler.getUserAgent();\n        this.androidChrome = /chrome/i.test(ua) && /android/i.test(ua);\n\n        this.initMask();\n    }\n\n    @Input() get mask(): string {\n        return this._mask;\n    }\n\n    set mask(val:string) {\n        this._mask = val;\n\n        this.initMask();\n        this.writeValue('');\n        this.onModelChange(this.value);\n    }\n\n    initMask() {\n        this.tests = [];\n        this.partialPosition = this.mask.length;\n        this.len = this.mask.length;\n        this.firstNonMaskPos = null;\n        this.defs = {\n            '9': '[0-9]',\n            'a': this.characterPattern,\n            '*': `${this.characterPattern}|[0-9]`\n        };\n\n        let maskTokens = this.mask.split('');\n        for(let i = 0; i < maskTokens.length; i++) {\n            let c = maskTokens[i];\n            if (c == '?') {\n\t\t\t\tthis.len--;\n\t\t\t\tthis.partialPosition = i;\n\t\t\t}\n            else if (this.defs[c]) {\n\t\t\t\tthis.tests.push(new RegExp(this.defs[c]));\n\t\t\t\tif (this.firstNonMaskPos === null) {\n\t                this.firstNonMaskPos = this.tests.length - 1;\n\t\t\t\t}\n                if (i < this.partialPosition){\n                    this.lastRequiredNonMaskPos = this.tests.length - 1;\n                }\n\t\t\t}\n            else {\n\t\t\t\tthis.tests.push(null);\n\t\t\t}\n        }\n\n        this.buffer = [];\n        for(let i = 0; i < maskTokens.length; i++) {\n            let c = maskTokens[i];\n            if (c != '?') {\n                if (this.defs[c])\n                    this.buffer.push(this.getPlaceholder(i));\n                else\n                    this.buffer.push(c);\n            }\n        }\n        this.defaultBuffer = this.buffer.join('');\n    }\n\n    writeValue(value: any) : void {\n        this.value = value;\n\n        if (this.inputViewChild && this.inputViewChild.nativeElement) {\n            if (this.value == undefined || this.value == null)\n                this.inputViewChild.nativeElement.value = '';\n            else\n                this.inputViewChild.nativeElement.value = this.value;\n\n            this.checkVal();\n            this.focusText = this.inputViewChild.nativeElement.value;\n            this.updateFilledState();\n        }\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    caret(first?: number, last?: number) {\n        let range, begin, end;\n\n        if (!this.inputViewChild.nativeElement.offsetParent||this.inputViewChild.nativeElement !== this.inputViewChild.nativeElement.ownerDocument.activeElement) {\n            return;\n        }\n\n        if (typeof first == 'number') {\n            begin = first;\n            end = (typeof last === 'number') ? last : begin;\n            if (this.inputViewChild.nativeElement.setSelectionRange) {\n                this.inputViewChild.nativeElement.setSelectionRange(begin, end);\n            }\n            else if (this.inputViewChild.nativeElement['createTextRange']) {\n                range = this.inputViewChild.nativeElement['createTextRange']();\n                range.collapse(true);\n                range.moveEnd('character', end);\n                range.moveStart('character', begin);\n                range.select();\n            }\n        }\n        else {\n            if (this.inputViewChild.nativeElement.setSelectionRange) {\n    \t\t\tbegin = this.inputViewChild.nativeElement.selectionStart;\n    \t\t\tend = this.inputViewChild.nativeElement.selectionEnd;\n    \t\t}\n            else if (document['selection'] && document['selection'].createRange) {\n    \t\t\trange = document['selection'].createRange();\n    \t\t\tbegin = 0 - range.duplicate().moveStart('character', -100000);\n    \t\t\tend = begin + range.text.length;\n    \t\t}\n\n    \t\treturn {begin: begin, end: end};\n        }\n    }\n\n    isCompleted(): boolean {\n        let completed: boolean;\n        for (let i = this.firstNonMaskPos; i <= this.lastRequiredNonMaskPos; i++) {\n            if (this.tests[i] && this.buffer[i] === this.getPlaceholder(i)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    getPlaceholder(i: number) {\n        if (i < this.slotChar.length) {\n            return this.slotChar.charAt(i);\n        }\n        return this.slotChar.charAt(0);\n    }\n\n    seekNext(pos) {\n        while (++pos < this.len && !this.tests[pos]);\n        return pos;\n    }\n\n    seekPrev(pos) {\n        while (--pos >= 0 && !this.tests[pos]);\n        return pos;\n    }\n\n    shiftL(begin:number,end:number) {\n        let i, j;\n\n        if (begin<0) {\n            return;\n        }\n\n        for (i = begin, j = this.seekNext(end); i < this.len; i++) {\n            if (this.tests[i]) {\n                if (j < this.len && this.tests[i].test(this.buffer[j])) {\n                    this.buffer[i] = this.buffer[j];\n                    this.buffer[j] = this.getPlaceholder(j);\n                } else {\n                    break;\n                }\n\n                j = this.seekNext(j);\n            }\n        }\n        this.writeBuffer();\n        this.caret(Math.max(this.firstNonMaskPos, begin));\n    }\n\n    shiftR(pos) {\n        let i, c, j, t;\n\n        for (i = pos, c = this.getPlaceholder(pos); i < this.len; i++) {\n            if (this.tests[i]) {\n                j = this.seekNext(i);\n                t = this.buffer[i];\n                this.buffer[i] = c;\n                if (j < this.len && this.tests[j].test(t)) {\n                    c = t;\n                } else {\n                    break;\n                }\n            }\n        }\n    }\n\n    handleAndroidInput(e) {\n        var curVal = this.inputViewChild.nativeElement.value;\n        var pos = this.caret();\n        if (this.oldVal && this.oldVal.length && this.oldVal.length > curVal.length ) {\n            // a deletion or backspace happened\n            this.checkVal(true);\n            while (pos.begin > 0 && !this.tests[pos.begin-1])\n                  pos.begin--;\n            if (pos.begin === 0)\n            {\n               while (pos.begin < this.firstNonMaskPos && !this.tests[pos.begin])\n                  pos.begin++;\n            }\n\n            setTimeout(() => {\n                this.caret(pos.begin, pos.begin);\n                this.updateModel(e);\n                if (this.isCompleted()) {\n                    this.onComplete.emit();\n                }\n            }, 0);\n        }\n        else {\n            this.checkVal(true);\n            while (pos.begin < this.len && !this.tests[pos.begin])\n                pos.begin++;\n\n            setTimeout(() => {\n                this.caret(pos.begin, pos.begin);\n                this.updateModel(e);\n                if (this.isCompleted()) {\n                    this.onComplete.emit();\n                }\n            }, 0);\n        }\n    }\n\n    onInputBlur(e) {\n        this.focused = false;\n        this.onModelTouched();\n        this.checkVal();\n        this.updateFilledState();\n        this.onBlur.emit(e);\n\n        if (this.inputViewChild.nativeElement.value != this.focusText || this.inputViewChild.nativeElement.value != this.value) {\n            this.updateModel(e);\n            let event = document.createEvent('HTMLEvents');\n            event.initEvent('change', true, false);\n            this.inputViewChild.nativeElement.dispatchEvent(event);\n        }\n    }\n\n    onInputKeydown(e) {\n        if (this.readonly) {\n            return;\n        }\n\n        let k = e.which||e.keyCode,\n            pos,\n            begin,\n            end;\n        let iPhone = /iphone/i.test(DomHandler.getUserAgent());\n        this.oldVal = this.inputViewChild.nativeElement.value;\n        \n        this.onKeydown.emit(e);\n\n        //backspace, delete, and escape get special treatment\n        if (k === 8 || k === 46 || (iPhone && k === 127)) {\n            pos = this.caret();\n            begin = pos.begin;\n            end = pos.end;\n\n            if (end - begin === 0) {\n                begin=k!==46?this.seekPrev(begin):(end=this.seekNext(begin-1));\n                end=k===46?this.seekNext(end):end;\n            }\n\n            this.clearBuffer(begin, end);\n\t\t\tthis.shiftL(begin, end - 1);\n            this.updateModel(e);\n            this.onInput.emit(e);\n\n            e.preventDefault();\n        }\n        else if ( k === 13 ) { // enter\n            this.onInputBlur(e);\n            this.updateModel(e);\n        }\n        else if (k === 27) { // escape\n            this.inputViewChild.nativeElement.value = this.focusText;\n            this.caret(0, this.checkVal());\n            this.updateModel(e);\n\n            e.preventDefault();\n        }\n    }\n\n    onKeyPress(e) {\n        if (this.readonly){\n            return;\n        }\n\n        var k = e.which || e.keyCode,\n            pos = this.caret(),\n            p,\n            c,\n            next,\n            completed;\n\n        if (e.ctrlKey || e.altKey || e.metaKey || k < 32  || (k > 34 && k < 41)) {//Ignore\n            return;\n        } else if ( k && k !== 13 ) {\n            if (pos.end - pos.begin !== 0){\n                this.clearBuffer(pos.begin, pos.end);\n                this.shiftL(pos.begin, pos.end-1);\n            }\n\n            p = this.seekNext(pos.begin - 1);\n            if (p < this.len) {\n                c = String.fromCharCode(k);\n                if (this.tests[p].test(c)) {\n                    this.shiftR(p);\n\n                    this.buffer[p] = c;\n                    this.writeBuffer();\n                    next = this.seekNext(p);\n\n                    if (/android/i.test(DomHandler.getUserAgent())) {\n                        //Path for CSP Violation on FireFox OS 1.1\n                        let proxy = () => {\n                            this.caret(next);\n                        };\n\n                        setTimeout(proxy,0);\n                    }\n                    else {\n                        this.caret(next);\n                    }\n\n                    if (pos.begin <= this.lastRequiredNonMaskPos) {\n                        completed = this.isCompleted();\n                    }\n\n                    this.onInput.emit(e);\n                }\n            }\n            e.preventDefault();\n        }\n\n        this.updateModel(e);\n\n        this.updateFilledState();\n\n        if (completed) {\n            this.onComplete.emit();\n        }\n    }\n\n    clearBuffer(start, end) {\n        let i;\n        for (i = start; i < end && i < this.len; i++) {\n            if (this.tests[i]) {\n                this.buffer[i] = this.getPlaceholder(i);\n            }\n        }\n    }\n\n    writeBuffer() {\n        this.inputViewChild.nativeElement.value = this.buffer.join('');\n    }\n\n    checkVal(allow?: boolean) {\n        //try to place characters where they belong\n        let test = this.inputViewChild.nativeElement.value,\n            lastMatch = -1,\n            i,\n            c,\n            pos;\n\n        for (i = 0, pos = 0; i < this.len; i++) {\n            if (this.tests[i]) {\n                this.buffer[i] = this.getPlaceholder(i);\n                while (pos++ < test.length) {\n                    c = test.charAt(pos - 1);\n                    if (this.tests[i].test(c)) {\n                        this.buffer[i] = c;\n                        lastMatch = i;\n                        break;\n                    }\n                }\n                if (pos > test.length) {\n                    this.clearBuffer(i + 1, this.len);\n                    break;\n                }\n            } else {\n                if (this.buffer[i] === test.charAt(pos)) {\n                    pos++;\n                }\n                if ( i < this.partialPosition){\n                    lastMatch = i;\n                }\n            }\n        }\n        if (allow) {\n            this.writeBuffer();\n        } else if (lastMatch + 1 < this.partialPosition) {\n            if (this.autoClear || this.buffer.join('') === this.defaultBuffer) {\n                // Invalid value. Remove it and replace it with the\n                // mask, which is the default behavior.\n                if (this.inputViewChild.nativeElement.value) this.inputViewChild.nativeElement.value = '';\n                this.clearBuffer(0, this.len);\n            } else {\n                // Invalid value, but we opt to show the value to the\n                // user and allow them to correct their mistake.\n                this.writeBuffer();\n            }\n        } else {\n            this.writeBuffer();\n            this.inputViewChild.nativeElement.value = this.inputViewChild.nativeElement.value.substring(0, lastMatch + 1);\n        }\n        return (this.partialPosition ? i : this.firstNonMaskPos);\n    }\n\n    onInputFocus(event) {\n        if (this.readonly){\n            return;\n        }\n\n        this.focused = true;\n\n        clearTimeout(this.caretTimeoutId);\n        let pos;\n\n        this.focusText = this.inputViewChild.nativeElement.value;\n\n        pos = this.checkVal();\n\n        this.caretTimeoutId = setTimeout(() => {\n            if (this.inputViewChild.nativeElement !== this.inputViewChild.nativeElement.ownerDocument.activeElement){\n                return;\n            }\n            this.writeBuffer();\n            if (pos == this.mask.replace(\"?\",\"\").length) {\n                this.caret(0, pos);\n            } else {\n                this.caret(pos);\n            }\n        }, 10);\n\n        this.onFocus.emit(event);\n    }\n\n    onInputChange(event) {\n        if (this.androidChrome)\n            this.handleAndroidInput(event);\n        else\n            this.handleInputChange(event);\n\n        this.onInput.emit(event);\n    }\n\n    handleInputChange(event) {\n        if (this.readonly){\n            return;\n        }\n\n        setTimeout(() => {\n            var pos = this.checkVal(true);\n            this.caret(pos);\n            this.updateModel(event);\n            if (this.isCompleted()) {\n                this.onComplete.emit();\n            }\n        }, 0);\n    }\n\n    getUnmaskedValue() {\n        let unmaskedBuffer = [];\n        for(let i = 0; i < this.buffer.length; i++) {\n            let c = this.buffer[i];\n            if (this.tests[i] && c != this.getPlaceholder(i)) {\n                unmaskedBuffer.push(c);\n            }\n        }\n\n        return unmaskedBuffer.join('');\n    }\n\n    updateModel(e) {\n        const updatedValue = this.unmask ? this.getUnmaskedValue() : e.target.value;\n        if (updatedValue !== null || updatedValue !== undefined) {\n            this.value = updatedValue;\n            this.onModelChange(this.value);\n        }\n    }\n\n    updateFilledState() {\n        this.filled = this.inputViewChild.nativeElement && this.inputViewChild.nativeElement.value != '';\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n\n    ngOnDestroy() {\n\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,InputTextModule],\n    exports: [InputMask],\n    declarations: [InputMask]\n})\nexport class InputMaskModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}