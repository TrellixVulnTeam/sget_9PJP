import { Component, Inject, Input, Output, EventEmitter } from "@angular/core";
import { CRUD_SERVICE } from "./crud-service.service";
import { Router, ActivatedRoute } from "@angular/router";
export class FormComponent {
    constructor(crudService, activatedRoute, router) {
        this.crudService = crudService;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.action = "save";
        this.saveLabel = "Salvar";
        this.disableSave = false;
        this.save = new EventEmitter();
        this.reset = new EventEmitter();
    }
    ngOnInit() {
        if (this.service) {
            this.crudService = this.service;
        }
    }
    submit() {
        if (this.save.observers.length) {
            this.save.emit(this.form.value);
        }
        else {
            this.crudService[this.action](this.form.value)
                .subscribe(() => {
                if (this.route) {
                    this.router.navigate(this.route, { relativeTo: this.activatedRoute });
                }
                else if (this.reset.observers.length) {
                    this.reset.emit(this.form);
                }
                else {
                    this.form.reset();
                }
            });
        }
    }
}
FormComponent.decorators = [
    { type: Component, args: [{
                selector: 'nForm',
                template: "<div class=\"p-grid\">\n    <div class=\"p-col-12\">\n        <form (submit)=\"submit()\" class=\"form-group\">\n            <ng-content></ng-content>\n            <div *ngIf=\"!disableSave\">\n                <button pButton type=\"submit\" [label]=\"saveLabel\" [disabled]=\"form.disabled || form.invalid\" class=\"p-mr-2 p-mb-2\"></button>\n                <ng-content select=\"[nButton]\"></ng-content>\n            </div>\n        </form>\n    </div>\n</div>"
            },] }
];
FormComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [CRUD_SERVICE,] }] },
    { type: ActivatedRoute },
    { type: Router }
];
FormComponent.propDecorators = {
    form: [{ type: Input }],
    route: [{ type: Input }],
    action: [{ type: Input }],
    saveLabel: [{ type: Input }],
    service: [{ type: Input }],
    disableSave: [{ type: Input }],
    save: [{ type: Output }],
    reset: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wcmltZW5nLWNvbXBvbmVudHMvc3JjL2xpYi9jcnVkL2Zvcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZGLE9BQU8sRUFBZSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsTUFBTSxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBTXpELE1BQU0sT0FBTyxhQUFhO0lBaUJ0QixZQUVZLFdBQWtDLEVBQ2xDLGNBQThCLEVBQzlCLE1BQWM7UUFGZCxnQkFBVyxHQUFYLFdBQVcsQ0FBdUI7UUFDbEMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzlCLFdBQU0sR0FBTixNQUFNLENBQVE7UUFmakIsV0FBTSxHQUFXLE1BQU0sQ0FBQztRQUV4QixjQUFTLEdBQVcsUUFBUSxDQUFDO1FBSTdCLGdCQUFXLEdBQVksS0FBSyxDQUFDO1FBRTVCLFNBQUksR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUVsRCxVQUFLLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFNMUQsQ0FBQztJQUVKLFFBQVE7UUFDSixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7U0FDbkM7SUFDTCxDQUFDO0lBRUQsTUFBTTtRQUNGLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFO1lBQzVCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDbkM7YUFBTTtZQUNILElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO2lCQUM3QyxTQUFTLENBQUMsR0FBRyxFQUFFO2dCQUNaLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtvQkFDWixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO2lCQUN6RTtxQkFBTSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRTtvQkFDcEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUM5QjtxQkFBTTtvQkFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO2lCQUNyQjtZQUNMLENBQUMsQ0FBQyxDQUFDO1NBQ047SUFDTCxDQUFDOzs7WUFqREosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxPQUFPO2dCQUNqQiwyZEFBb0M7YUFDdkM7Ozs0Q0FtQlEsTUFBTSxTQUFDLFlBQVk7WUF4QlgsY0FBYztZQUF0QixNQUFNOzs7bUJBUVYsS0FBSztvQkFFTCxLQUFLO3FCQUVMLEtBQUs7d0JBRUwsS0FBSztzQkFFTCxLQUFLOzBCQUVMLEtBQUs7bUJBRUwsTUFBTTtvQkFFTixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEluamVjdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHsgQ3J1ZFNlcnZpY2UsIENSVURfU0VSVklDRSB9IGZyb20gXCIuL2NydWQtc2VydmljZS5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBSb3V0ZXIsIEFjdGl2YXRlZFJvdXRlIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ25Gb3JtJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZm9ybS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRm9ybUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICBASW5wdXQoKSBmb3JtOiBGb3JtR3JvdXA7XG5cbiAgICBASW5wdXQoKSByb3V0ZTogW107XG5cbiAgICBASW5wdXQoKSBhY3Rpb246IHN0cmluZyA9IFwic2F2ZVwiO1xuXG4gICAgQElucHV0KCkgc2F2ZUxhYmVsOiBzdHJpbmcgPSBcIlNhbHZhclwiO1xuXG4gICAgQElucHV0KCkgc2VydmljZTogQ3J1ZFNlcnZpY2U8YW55LCBhbnk+O1xuXG4gICAgQElucHV0KCkgZGlzYWJsZVNhdmU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIEBPdXRwdXQoKSBzYXZlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gICAgQE91dHB1dCgpIHJlc2V0OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KENSVURfU0VSVklDRSlcbiAgICAgICAgcHJpdmF0ZSBjcnVkU2VydmljZTogQ3J1ZFNlcnZpY2U8YW55LCBhbnk+LFxuICAgICAgICBwcml2YXRlIGFjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSxcbiAgICAgICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlclxuICAgICkge31cblxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5zZXJ2aWNlKSB7XG4gICAgICAgICAgICB0aGlzLmNydWRTZXJ2aWNlID0gdGhpcy5zZXJ2aWNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3VibWl0KCkge1xuICAgICAgICBpZiAodGhpcy5zYXZlLm9ic2VydmVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMuc2F2ZS5lbWl0KHRoaXMuZm9ybS52YWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmNydWRTZXJ2aWNlW3RoaXMuYWN0aW9uXSh0aGlzLmZvcm0udmFsdWUpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5yb3V0ZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZSh0aGlzLnJvdXRlLCB7IHJlbGF0aXZlVG86IHRoaXMuYWN0aXZhdGVkUm91dGUgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnJlc2V0Lm9ic2VydmVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXNldC5lbWl0KHRoaXMuZm9ybSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb3JtLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==