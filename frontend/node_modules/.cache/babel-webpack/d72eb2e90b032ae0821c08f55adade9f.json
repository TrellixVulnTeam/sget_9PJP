{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, ChangeDetectorRef, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ButtonModule } from 'primeng/button';\nimport { MessagesModule } from 'primeng/messages';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { DomHandler } from 'primeng/dom';\nimport { TranslationKeys, PrimeNGConfig, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { RippleModule } from 'primeng/ripple';\nimport { HttpEventType, HttpClient } from '@angular/common/http';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common/http';\nimport * as ɵngcc3 from 'primeng/api';\nimport * as ɵngcc4 from '@angular/common';\nimport * as ɵngcc5 from 'primeng/ripple';\nimport * as ɵngcc6 from 'primeng/messages';\nimport * as ɵngcc7 from 'primeng/button';\nimport * as ɵngcc8 from 'primeng/progressbar';\nvar _c0 = [\"advancedfileinput\"];\nvar _c1 = [\"basicfileinput\"];\nvar _c2 = [\"content\"];\n\nfunction FileUpload_div_0_p_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-button\", 17);\n    ɵngcc0.ɵɵlistener(\"onClick\", function FileUpload_div_0_p_button_8_Template_p_button_onClick_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10.upload();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"label\", ctx_r3.uploadButtonLabel)(\"icon\", ctx_r3.uploadIcon)(\"disabled\", !ctx_r3.hasFiles() || ctx_r3.isFileLimitExceeded());\n  }\n}\n\nfunction FileUpload_div_0_p_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-button\", 17);\n    ɵngcc0.ɵɵlistener(\"onClick\", function FileUpload_div_0_p_button_9_Template_p_button_onClick_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r12.clear();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"label\", ctx_r4.cancelButtonLabel)(\"icon\", ctx_r4.cancelIcon)(\"disabled\", !ctx_r4.hasFiles() || ctx_r4.uploading);\n  }\n}\n\nfunction FileUpload_div_0_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction FileUpload_div_0_p_progressBar_13_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"p-progressBar\", 18);\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r7.progress)(\"showValue\", false);\n  }\n}\n\nfunction FileUpload_div_0_div_15_div_1_div_1_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 25);\n  }\n\n  if (rf & 2) {\n    var file_r17 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r19 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵproperty(\"src\", file_r17.objectURL, ɵngcc0.ɵɵsanitizeUrl)(\"width\", ctx_r19.previewWidth);\n  }\n}\n\nfunction FileUpload_div_0_div_15_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r22 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 22);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵtemplate(2, FileUpload_div_0_div_15_div_1_div_1_img_2_Template, 1, 2, \"img\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\");\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\");\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"div\");\n    ɵngcc0.ɵɵelementStart(8, \"button\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function FileUpload_div_0_div_15_div_1_div_1_Template_button_click_8_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      var i_r18 = ctx.index;\n      var ctx_r21 = ɵngcc0.ɵɵnextContext(4);\n      return ctx_r21.remove($event, i_r18);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var file_r17 = ctx.$implicit;\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r16.isImage(file_r17));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(file_r17.name);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.formatSize(file_r17.size));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r16.uploading);\n  }\n}\n\nfunction FileUpload_div_0_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, FileUpload_div_0_div_15_div_1_div_1_Template, 9, 4, \"div\", 21);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r14.files);\n  }\n}\n\nfunction FileUpload_div_0_div_15_div_2_ng_template_1_Template(rf, ctx) {}\n\nfunction FileUpload_div_0_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, FileUpload_div_0_div_15_div_2_ng_template_1_Template, 0, 0, \"ng-template\", 26);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r15.files)(\"ngForTemplate\", ctx_r15.fileTemplate);\n  }\n}\n\nfunction FileUpload_div_0_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(1, FileUpload_div_0_div_15_div_1_Template, 2, 1, \"div\", 20);\n    ɵngcc0.ɵɵtemplate(2, FileUpload_div_0_div_15_div_2_Template, 2, 2, \"div\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r8.fileTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.fileTemplate);\n  }\n}\n\nfunction FileUpload_div_0_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c3 = function _c3(a0, a1) {\n  return {\n    \"p-focus\": a0,\n    \"p-disabled\": a1\n  };\n};\n\nvar _c4 = function _c4(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction FileUpload_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 4);\n    ɵngcc0.ɵɵlistener(\"focus\", function FileUpload_div_0_Template_span_focus_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ctx_r24.onFocus();\n    })(\"blur\", function FileUpload_div_0_Template_span_blur_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r26 = ɵngcc0.ɵɵnextContext();\n      return ctx_r26.onBlur();\n    })(\"click\", function FileUpload_div_0_Template_span_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r27 = ɵngcc0.ɵɵnextContext();\n      return ctx_r27.choose();\n    })(\"keydown.enter\", function FileUpload_div_0_Template_span_keydown_enter_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r28 = ɵngcc0.ɵɵnextContext();\n      return ctx_r28.choose();\n    });\n    ɵngcc0.ɵɵelementStart(3, \"input\", 5, 6);\n    ɵngcc0.ɵɵlistener(\"change\", function FileUpload_div_0_Template_input_change_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r29 = ɵngcc0.ɵɵnextContext();\n      return ctx_r29.onFileSelect($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(5, \"span\", 7);\n    ɵngcc0.ɵɵelementStart(6, \"span\", 8);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, FileUpload_div_0_p_button_8_Template, 1, 3, \"p-button\", 9);\n    ɵngcc0.ɵɵtemplate(9, FileUpload_div_0_p_button_9_Template, 1, 3, \"p-button\", 9);\n    ɵngcc0.ɵɵtemplate(10, FileUpload_div_0_ng_container_10_Template, 1, 0, \"ng-container\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"div\", 11, 12);\n    ɵngcc0.ɵɵlistener(\"dragenter\", function FileUpload_div_0_Template_div_dragenter_11_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r30 = ɵngcc0.ɵɵnextContext();\n      return ctx_r30.onDragEnter($event);\n    })(\"dragleave\", function FileUpload_div_0_Template_div_dragleave_11_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r31 = ɵngcc0.ɵɵnextContext();\n      return ctx_r31.onDragLeave($event);\n    })(\"drop\", function FileUpload_div_0_Template_div_drop_11_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r32 = ɵngcc0.ɵɵnextContext();\n      return ctx_r32.onDrop($event);\n    });\n    ɵngcc0.ɵɵtemplate(13, FileUpload_div_0_p_progressBar_13_Template, 1, 2, \"p-progressBar\", 13);\n    ɵngcc0.ɵɵelement(14, \"p-messages\", 14);\n    ɵngcc0.ɵɵtemplate(15, FileUpload_div_0_div_15_Template, 3, 2, \"div\", 15);\n    ɵngcc0.ɵɵtemplate(16, FileUpload_div_0_ng_container_16_Template, 1, 0, \"ng-container\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r0.styleClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"p-fileupload p-fileupload-advanced p-component\")(\"ngStyle\", ctx_r0.style);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(22, _c3, ctx_r0.focus, ctx_r0.disabled || ctx_r0.isChooseDisabled()));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"multiple\", ctx_r0.multiple)(\"accept\", ctx_r0.accept)(\"disabled\", ctx_r0.disabled || ctx_r0.isChooseDisabled());\n    ɵngcc0.ɵɵattribute(\"title\", \"\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassMap(ctx_r0.chooseIcon);\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"p-button-icon p-button-icon-left\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.chooseButtonLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.auto && ctx_r0.showUploadButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.auto && ctx_r0.showCancelButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.toolbarTemplate);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.hasFiles());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r0.msgs)(\"enableService\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.hasFiles());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.contentTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(25, _c4, ctx_r0.files));\n  }\n}\n\nfunction FileUpload_div_1_input_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r36 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input\", 31, 32);\n    ɵngcc0.ɵɵlistener(\"change\", function FileUpload_div_1_input_6_Template_input_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r36);\n      var ctx_r35 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r35.onFileSelect($event);\n    })(\"focus\", function FileUpload_div_1_input_6_Template_input_focus_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r36);\n      var ctx_r37 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r37.onFocus();\n    })(\"blur\", function FileUpload_div_1_input_6_Template_input_blur_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r36);\n      var ctx_r38 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r38.onBlur();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r33 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"accept\", ctx_r33.accept)(\"multiple\", ctx_r33.multiple)(\"disabled\", ctx_r33.disabled);\n  }\n}\n\nvar _c5 = function _c5(a1, a2, a3, a4) {\n  return {\n    \"p-button p-component p-fileupload-choose\": true,\n    \"p-button-icon-only\": a1,\n    \"p-fileupload-choose-selected\": a2,\n    \"p-focus\": a3,\n    \"p-disabled\": a4\n  };\n};\n\nfunction FileUpload_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r40 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 27);\n    ɵngcc0.ɵɵelement(1, \"p-messages\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 28);\n    ɵngcc0.ɵɵlistener(\"mouseup\", function FileUpload_div_1_Template_span_mouseup_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r40);\n      var ctx_r39 = ɵngcc0.ɵɵnextContext();\n      return ctx_r39.onBasicUploaderClick();\n    })(\"keydown\", function FileUpload_div_1_Template_span_keydown_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r40);\n      var ctx_r41 = ɵngcc0.ɵɵnextContext();\n      return ctx_r41.onBasicUploaderClick();\n    });\n    ɵngcc0.ɵɵelement(3, \"span\", 29);\n    ɵngcc0.ɵɵelementStart(4, \"span\", 8);\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, FileUpload_div_1_input_6_Template, 2, 3, \"input\", 30);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r1.msgs)(\"enableService\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(ctx_r1.styleClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(9, _c5, !ctx_r1.chooseLabel, ctx_r1.hasFiles(), ctx_r1.focus, ctx_r1.disabled))(\"ngStyle\", ctx_r1.style);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.hasFiles() && !ctx_r1.auto ? ctx_r1.uploadIcon : ctx_r1.chooseIcon);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.auto ? ctx_r1.chooseLabel : ctx_r1.hasFiles() ? ctx_r1.files[0].name : ctx_r1.chooseLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.hasFiles());\n  }\n}\n\nvar FileUpload = /*#__PURE__*/function () {\n  function FileUpload(el, sanitizer, zone, http, cd, config) {\n    _classCallCheck(this, FileUpload);\n\n    this.el = el;\n    this.sanitizer = sanitizer;\n    this.zone = zone;\n    this.http = http;\n    this.cd = cd;\n    this.config = config;\n    this.method = 'post';\n    this.invalidFileSizeMessageSummary = '{0}: Invalid file size, ';\n    this.invalidFileSizeMessageDetail = 'maximum upload size is {0}.';\n    this.invalidFileTypeMessageSummary = '{0}: Invalid file type, ';\n    this.invalidFileTypeMessageDetail = 'allowed file types: {0}.';\n    this.invalidFileLimitMessageDetail = 'limit is {0} at most.';\n    this.invalidFileLimitMessageSummary = 'Maximum number of files exceeded, ';\n    this.previewWidth = 50;\n    this.chooseIcon = 'pi pi-plus';\n    this.uploadIcon = 'pi pi-upload';\n    this.cancelIcon = 'pi pi-times';\n    this.showUploadButton = true;\n    this.showCancelButton = true;\n    this.mode = 'advanced';\n    this.onBeforeUpload = new EventEmitter();\n    this.onSend = new EventEmitter();\n    this.onUpload = new EventEmitter();\n    this.onError = new EventEmitter();\n    this.onClear = new EventEmitter();\n    this.onRemove = new EventEmitter();\n    this.onSelect = new EventEmitter();\n    this.onProgress = new EventEmitter();\n    this.uploadHandler = new EventEmitter();\n    this._files = [];\n    this.progress = 0;\n    this.uploadedFileCount = 0;\n  }\n\n  _createClass(FileUpload, [{\n    key: \"files\",\n    get: function get() {\n      return this._files;\n    },\n    set: function set(files) {\n      this._files = [];\n\n      for (var i = 0; i < files.length; i++) {\n        var file = files[i];\n\n        if (this.validate(file)) {\n          if (this.isImage(file)) {\n            file.objectURL = this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(files[i]));\n          }\n\n          this._files.push(files[i]);\n        }\n      }\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'file':\n            _this.fileTemplate = item.template;\n            break;\n\n          case 'content':\n            _this.contentTemplate = item.template;\n            break;\n\n          case 'toolbar':\n            _this.toolbarTemplate = item.template;\n            break;\n\n          default:\n            _this.fileTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      if (this.mode === 'advanced') {\n        this.zone.runOutsideAngular(function () {\n          if (_this2.content) _this2.content.nativeElement.addEventListener('dragover', _this2.onDragOver.bind(_this2));\n        });\n      }\n    }\n  }, {\n    key: \"choose\",\n    value: function choose() {\n      this.advancedFileInput.nativeElement.click();\n    }\n  }, {\n    key: \"onFileSelect\",\n    value: function onFileSelect(event) {\n      if (event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\n        this.duplicateIEEvent = false;\n        return;\n      }\n\n      this.msgs = [];\n\n      if (!this.multiple) {\n        this.files = [];\n      }\n\n      var files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n\n      for (var i = 0; i < files.length; i++) {\n        var file = files[i];\n\n        if (!this.isFileSelected(file)) {\n          if (this.validate(file)) {\n            if (this.isImage(file)) {\n              file.objectURL = this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(files[i]));\n            }\n\n            this.files.push(files[i]);\n          }\n        }\n      }\n\n      this.onSelect.emit({\n        originalEvent: event,\n        files: files,\n        currentFiles: this.files\n      });\n\n      if (this.fileLimit && this.mode == \"advanced\") {\n        this.checkFileLimit();\n      }\n\n      if (this.hasFiles() && this.auto && (!(this.mode === \"advanced\") || !this.isFileLimitExceeded())) {\n        this.upload();\n      }\n\n      if (event.type !== 'drop' && this.isIE11()) {\n        this.clearIEInput();\n      } else {\n        this.clearInputElement();\n      }\n    }\n  }, {\n    key: \"isFileSelected\",\n    value: function isFileSelected(file) {\n      var _iterator = _createForOfIteratorHelper(this.files),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var sFile = _step.value;\n\n          if (sFile.name + sFile.type + sFile.size === file.name + file.type + file.size) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isIE11\",\n    value: function isIE11() {\n      return !!window['MSInputMethodContext'] && !!document['documentMode'];\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(file) {\n      if (this.accept && !this.isFileTypeValid(file)) {\n        this.msgs.push({\n          severity: 'error',\n          summary: this.invalidFileTypeMessageSummary.replace('{0}', file.name),\n          detail: this.invalidFileTypeMessageDetail.replace('{0}', this.accept)\n        });\n        return false;\n      }\n\n      if (this.maxFileSize && file.size > this.maxFileSize) {\n        this.msgs.push({\n          severity: 'error',\n          summary: this.invalidFileSizeMessageSummary.replace('{0}', file.name),\n          detail: this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxFileSize))\n        });\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"isFileTypeValid\",\n    value: function isFileTypeValid(file) {\n      var acceptableTypes = this.accept.split(',').map(function (type) {\n        return type.trim();\n      });\n\n      var _iterator2 = _createForOfIteratorHelper(acceptableTypes),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var type = _step2.value;\n          var acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type) : file.type == type || this.getFileExtension(file).toLowerCase() === type.toLowerCase();\n\n          if (acceptable) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getTypeClass\",\n    value: function getTypeClass(fileType) {\n      return fileType.substring(0, fileType.indexOf('/'));\n    }\n  }, {\n    key: \"isWildcard\",\n    value: function isWildcard(fileType) {\n      return fileType.indexOf('*') !== -1;\n    }\n  }, {\n    key: \"getFileExtension\",\n    value: function getFileExtension(file) {\n      return '.' + file.name.split('.').pop();\n    }\n  }, {\n    key: \"isImage\",\n    value: function isImage(file) {\n      return /^image\\//.test(file.type);\n    }\n  }, {\n    key: \"onImageLoad\",\n    value: function onImageLoad(img) {\n      window.URL.revokeObjectURL(img.src);\n    }\n  }, {\n    key: \"upload\",\n    value: function upload() {\n      var _this3 = this;\n\n      if (this.customUpload) {\n        if (this.fileLimit) {\n          this.uploadedFileCount += this.files.length;\n        }\n\n        this.uploadHandler.emit({\n          files: this.files\n        });\n        this.cd.markForCheck();\n      } else {\n        this.uploading = true;\n        this.msgs = [];\n        var formData = new FormData();\n        this.onBeforeUpload.emit({\n          'formData': formData\n        });\n\n        for (var i = 0; i < this.files.length; i++) {\n          formData.append(this.name, this.files[i], this.files[i].name);\n        }\n\n        this.http[this.method](this.url, formData, {\n          headers: this.headers,\n          reportProgress: true,\n          observe: 'events',\n          withCredentials: this.withCredentials\n        }).subscribe(function (event) {\n          switch (event.type) {\n            case HttpEventType.Sent:\n              _this3.onSend.emit({\n                originalEvent: event,\n                'formData': formData\n              });\n\n              break;\n\n            case HttpEventType.Response:\n              _this3.uploading = false;\n              _this3.progress = 0;\n\n              if (event['status'] >= 200 && event['status'] < 300) {\n                if (_this3.fileLimit) {\n                  _this3.uploadedFileCount += _this3.files.length;\n                }\n\n                _this3.onUpload.emit({\n                  originalEvent: event,\n                  files: _this3.files\n                });\n              } else {\n                _this3.onError.emit({\n                  files: _this3.files\n                });\n              }\n\n              _this3.clear();\n\n              break;\n\n            case HttpEventType.UploadProgress:\n              {\n                if (event['loaded']) {\n                  _this3.progress = Math.round(event['loaded'] * 100 / event['total']);\n                }\n\n                _this3.onProgress.emit({\n                  originalEvent: event,\n                  progress: _this3.progress\n                });\n\n                break;\n              }\n          }\n\n          _this3.cd.markForCheck();\n        }, function (error) {\n          _this3.uploading = false;\n\n          _this3.onError.emit({\n            files: _this3.files,\n            error: error\n          });\n        });\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.files = [];\n      this.onClear.emit();\n      this.clearInputElement();\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(event, index) {\n      this.clearInputElement();\n      this.onRemove.emit({\n        originalEvent: event,\n        file: this.files[index]\n      });\n      this.files.splice(index, 1);\n    }\n  }, {\n    key: \"isFileLimitExceeded\",\n    value: function isFileLimitExceeded() {\n      if (this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount && this.focus) {\n        this.focus = false;\n      }\n\n      return this.fileLimit && this.fileLimit < this.files.length + this.uploadedFileCount;\n    }\n  }, {\n    key: \"isChooseDisabled\",\n    value: function isChooseDisabled() {\n      return this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount;\n    }\n  }, {\n    key: \"checkFileLimit\",\n    value: function checkFileLimit() {\n      if (this.isFileLimitExceeded()) {\n        this.msgs.push({\n          severity: 'error',\n          summary: this.invalidFileLimitMessageSummary.replace('{0}', this.fileLimit.toString()),\n          detail: this.invalidFileLimitMessageDetail.replace('{0}', this.fileLimit.toString())\n        });\n      }\n    }\n  }, {\n    key: \"clearInputElement\",\n    value: function clearInputElement() {\n      if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\n        this.advancedFileInput.nativeElement.value = '';\n      }\n\n      if (this.basicFileInput && this.basicFileInput.nativeElement) {\n        this.basicFileInput.nativeElement.value = '';\n      }\n    }\n  }, {\n    key: \"clearIEInput\",\n    value: function clearIEInput() {\n      if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\n        this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\n\n        this.advancedFileInput.nativeElement.value = '';\n      }\n    }\n  }, {\n    key: \"hasFiles\",\n    value: function hasFiles() {\n      return this.files && this.files.length > 0;\n    }\n  }, {\n    key: \"onDragEnter\",\n    value: function onDragEnter(e) {\n      if (!this.disabled) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(e) {\n      if (!this.disabled) {\n        DomHandler.addClass(this.content.nativeElement, 'p-fileupload-highlight');\n        this.dragHighlight = true;\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave(event) {\n      if (!this.disabled) {\n        DomHandler.removeClass(this.content.nativeElement, 'p-fileupload-highlight');\n      }\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(event) {\n      if (!this.disabled) {\n        DomHandler.removeClass(this.content.nativeElement, 'p-fileupload-highlight');\n        event.stopPropagation();\n        event.preventDefault();\n        var files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n        var allowDrop = this.multiple || files && files.length === 1;\n\n        if (allowDrop) {\n          this.onFileSelect(event);\n        }\n      }\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.focus = true;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.focus = false;\n    }\n  }, {\n    key: \"formatSize\",\n    value: function formatSize(bytes) {\n      if (bytes == 0) {\n        return '0 B';\n      }\n\n      var k = 1024,\n          dm = 3,\n          sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n          i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n  }, {\n    key: \"onBasicUploaderClick\",\n    value: function onBasicUploaderClick() {\n      if (this.hasFiles()) this.upload();else this.basicFileInput.nativeElement.click();\n    }\n  }, {\n    key: \"getBlockableElement\",\n    value: function getBlockableElement() {\n      return this.el.nativeElement.children[0];\n    }\n  }, {\n    key: \"chooseButtonLabel\",\n    get: function get() {\n      return this.chooseLabel || this.config.getTranslation(TranslationKeys.CHOOSE);\n    }\n  }, {\n    key: \"uploadButtonLabel\",\n    get: function get() {\n      return this.uploadLabel || this.config.getTranslation(TranslationKeys.UPLOAD);\n    }\n  }, {\n    key: \"cancelButtonLabel\",\n    get: function get() {\n      return this.cancelLabel || this.config.getTranslation(TranslationKeys.CANCEL);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.content && this.content.nativeElement) {\n        this.content.nativeElement.removeEventListener('dragover', this.onDragOver);\n      }\n    }\n  }]);\n\n  return FileUpload;\n}();\n\nFileUpload.ɵfac = function FileUpload_Factory(t) {\n  return new (t || FileUpload)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.HttpClient), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.PrimeNGConfig));\n};\n\nFileUpload.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FileUpload,\n  selectors: [[\"p-fileUpload\"]],\n  contentQueries: function FileUpload_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function FileUpload_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n      ɵngcc0.ɵɵviewQuery(_c1, 1);\n      ɵngcc0.ɵɵviewQuery(_c2, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.advancedFileInput = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.basicFileInput = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    }\n  },\n  inputs: {\n    method: \"method\",\n    invalidFileSizeMessageSummary: \"invalidFileSizeMessageSummary\",\n    invalidFileSizeMessageDetail: \"invalidFileSizeMessageDetail\",\n    invalidFileTypeMessageSummary: \"invalidFileTypeMessageSummary\",\n    invalidFileTypeMessageDetail: \"invalidFileTypeMessageDetail\",\n    invalidFileLimitMessageDetail: \"invalidFileLimitMessageDetail\",\n    invalidFileLimitMessageSummary: \"invalidFileLimitMessageSummary\",\n    previewWidth: \"previewWidth\",\n    chooseIcon: \"chooseIcon\",\n    uploadIcon: \"uploadIcon\",\n    cancelIcon: \"cancelIcon\",\n    showUploadButton: \"showUploadButton\",\n    showCancelButton: \"showCancelButton\",\n    mode: \"mode\",\n    files: \"files\",\n    name: \"name\",\n    url: \"url\",\n    multiple: \"multiple\",\n    accept: \"accept\",\n    disabled: \"disabled\",\n    auto: \"auto\",\n    withCredentials: \"withCredentials\",\n    maxFileSize: \"maxFileSize\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    chooseLabel: \"chooseLabel\",\n    uploadLabel: \"uploadLabel\",\n    cancelLabel: \"cancelLabel\",\n    headers: \"headers\",\n    customUpload: \"customUpload\",\n    fileLimit: \"fileLimit\"\n  },\n  outputs: {\n    onBeforeUpload: \"onBeforeUpload\",\n    onSend: \"onSend\",\n    onUpload: \"onUpload\",\n    onError: \"onError\",\n    onClear: \"onClear\",\n    onRemove: \"onRemove\",\n    onSelect: \"onSelect\",\n    onProgress: \"onProgress\",\n    uploadHandler: \"uploadHandler\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"class\", 4, \"ngIf\"], [\"class\", \"p-fileupload p-fileupload-basic p-component\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [1, \"p-fileupload-buttonbar\"], [\"pRipple\", \"\", \"tabindex\", \"0\", 1, \"p-button\", \"p-component\", \"p-fileupload-choose\", 3, \"ngClass\", \"focus\", \"blur\", \"click\", \"keydown.enter\"], [\"type\", \"file\", 3, \"multiple\", \"accept\", \"disabled\", \"change\"], [\"advancedfileinput\", \"\"], [3, \"ngClass\"], [1, \"p-button-label\"], [\"type\", \"button\", 3, \"label\", \"icon\", \"disabled\", \"onClick\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [1, \"p-fileupload-content\", 3, \"dragenter\", \"dragleave\", \"drop\"], [\"content\", \"\"], [3, \"value\", \"showValue\", 4, \"ngIf\"], [3, \"value\", \"enableService\"], [\"class\", \"p-fileupload-files\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"type\", \"button\", 3, \"label\", \"icon\", \"disabled\", \"onClick\"], [3, \"value\", \"showValue\"], [1, \"p-fileupload-files\"], [4, \"ngIf\"], [\"class\", \"p-fileupload-row\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-fileupload-row\"], [3, \"src\", \"width\", 4, \"ngIf\"], [\"type\", \"button\", \"icon\", \"pi pi-times\", \"pButton\", \"\", 3, \"disabled\", \"click\"], [3, \"src\", \"width\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTemplate\"], [1, \"p-fileupload\", \"p-fileupload-basic\", \"p-component\"], [\"tabindex\", \"0\", \"pRipple\", \"\", 3, \"ngClass\", \"ngStyle\", \"mouseup\", \"keydown\"], [1, \"p-button-icon\", \"p-button-icon-left\", \"pi\", 3, \"ngClass\"], [\"type\", \"file\", 3, \"accept\", \"multiple\", \"disabled\", \"change\", \"focus\", \"blur\", 4, \"ngIf\"], [\"type\", \"file\", 3, \"accept\", \"multiple\", \"disabled\", \"change\", \"focus\", \"blur\"], [\"basicfileinput\", \"\"]],\n  template: function FileUpload_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, FileUpload_div_0_Template, 17, 27, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, FileUpload_div_1_Template, 7, 14, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.mode === \"advanced\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.mode === \"basic\");\n    }\n  },\n  directives: [ɵngcc4.NgIf, ɵngcc4.NgClass, ɵngcc4.NgStyle, ɵngcc5.Ripple, ɵngcc4.NgTemplateOutlet, ɵngcc6.Messages, ɵngcc7.Button, ɵngcc8.ProgressBar, ɵngcc4.NgForOf, ɵngcc7.ButtonDirective],\n  styles: [\".p-fileupload-content{position:relative}.p-fileupload-row{align-items:center;display:flex}.p-fileupload-row>div{flex:1 1 auto;width:25%}.p-fileupload-row>div:last-child{text-align:right}.p-fileupload-content .p-progressbar{left:0;position:absolute;top:0;width:100%}.p-button.p-fileupload-choose{overflow:hidden;position:relative}.p-button.p-fileupload-choose input[type=file],.p-fileupload-choose.p-fileupload-choose-selected input[type=file]{display:none}.p-fluid .p-fileupload .p-button{width:auto}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nFileUpload.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: DomSanitizer\n  }, {\n    type: NgZone\n  }, {\n    type: HttpClient\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: PrimeNGConfig\n  }];\n};\n\nFileUpload.propDecorators = {\n  name: [{\n    type: Input\n  }],\n  url: [{\n    type: Input\n  }],\n  method: [{\n    type: Input\n  }],\n  multiple: [{\n    type: Input\n  }],\n  accept: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  auto: [{\n    type: Input\n  }],\n  withCredentials: [{\n    type: Input\n  }],\n  maxFileSize: [{\n    type: Input\n  }],\n  invalidFileSizeMessageSummary: [{\n    type: Input\n  }],\n  invalidFileSizeMessageDetail: [{\n    type: Input\n  }],\n  invalidFileTypeMessageSummary: [{\n    type: Input\n  }],\n  invalidFileTypeMessageDetail: [{\n    type: Input\n  }],\n  invalidFileLimitMessageDetail: [{\n    type: Input\n  }],\n  invalidFileLimitMessageSummary: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  previewWidth: [{\n    type: Input\n  }],\n  chooseLabel: [{\n    type: Input\n  }],\n  uploadLabel: [{\n    type: Input\n  }],\n  cancelLabel: [{\n    type: Input\n  }],\n  chooseIcon: [{\n    type: Input\n  }],\n  uploadIcon: [{\n    type: Input\n  }],\n  cancelIcon: [{\n    type: Input\n  }],\n  showUploadButton: [{\n    type: Input\n  }],\n  showCancelButton: [{\n    type: Input\n  }],\n  mode: [{\n    type: Input\n  }],\n  headers: [{\n    type: Input\n  }],\n  customUpload: [{\n    type: Input\n  }],\n  fileLimit: [{\n    type: Input\n  }],\n  onBeforeUpload: [{\n    type: Output\n  }],\n  onSend: [{\n    type: Output\n  }],\n  onUpload: [{\n    type: Output\n  }],\n  onError: [{\n    type: Output\n  }],\n  onClear: [{\n    type: Output\n  }],\n  onRemove: [{\n    type: Output\n  }],\n  onSelect: [{\n    type: Output\n  }],\n  onProgress: [{\n    type: Output\n  }],\n  uploadHandler: [{\n    type: Output\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }],\n  advancedFileInput: [{\n    type: ViewChild,\n    args: ['advancedfileinput']\n  }],\n  basicFileInput: [{\n    type: ViewChild,\n    args: ['basicfileinput']\n  }],\n  content: [{\n    type: ViewChild,\n    args: ['content']\n  }],\n  files: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileUpload, [{\n    type: Component,\n    args: [{\n      selector: 'p-fileUpload',\n      template: \"\\n        <div [ngClass]=\\\"'p-fileupload p-fileupload-advanced p-component'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" *ngIf=\\\"mode === 'advanced'\\\">\\n            <div class=\\\"p-fileupload-buttonbar\\\">\\n                <span class=\\\"p-button p-component p-fileupload-choose\\\" [ngClass]=\\\"{'p-focus': focus, 'p-disabled':disabled || isChooseDisabled()}\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\" pRipple\\n                    (click)=\\\"choose()\\\" (keydown.enter)=\\\"choose()\\\" tabindex=\\\"0\\\"> \\n                    <input #advancedfileinput type=\\\"file\\\" (change)=\\\"onFileSelect($event)\\\" [multiple]=\\\"multiple\\\" [accept]=\\\"accept\\\" [disabled]=\\\"disabled || isChooseDisabled()\\\" [attr.title]=\\\"''\\\">\\n                    <span [ngClass]=\\\"'p-button-icon p-button-icon-left'\\\" [class]=\\\"chooseIcon\\\"></span>\\n                    <span class=\\\"p-button-label\\\">{{chooseButtonLabel}}</span>\\n                </span>\\n\\n                <p-button *ngIf=\\\"!auto&&showUploadButton\\\" type=\\\"button\\\" [label]=\\\"uploadButtonLabel\\\" [icon]=\\\"uploadIcon\\\" (onClick)=\\\"upload()\\\" [disabled]=\\\"!hasFiles() || isFileLimitExceeded()\\\"></p-button>\\n                <p-button *ngIf=\\\"!auto&&showCancelButton\\\" type=\\\"button\\\" [label]=\\\"cancelButtonLabel\\\" [icon]=\\\"cancelIcon\\\" (onClick)=\\\"clear()\\\" [disabled]=\\\"!hasFiles() ||\\xA0uploading\\\"></p-button>\\n\\n                <ng-container *ngTemplateOutlet=\\\"toolbarTemplate\\\"></ng-container>\\n            </div>\\n            <div #content class=\\\"p-fileupload-content\\\" (dragenter)=\\\"onDragEnter($event)\\\" (dragleave)=\\\"onDragLeave($event)\\\" (drop)=\\\"onDrop($event)\\\">\\n                <p-progressBar [value]=\\\"progress\\\" [showValue]=\\\"false\\\" *ngIf=\\\"hasFiles()\\\"></p-progressBar>\\n\\n                <p-messages [value]=\\\"msgs\\\" [enableService]=\\\"false\\\"></p-messages>\\n\\n                <div class=\\\"p-fileupload-files\\\" *ngIf=\\\"hasFiles()\\\">\\n                    <div *ngIf=\\\"!fileTemplate\\\">\\n                        <div class=\\\"p-fileupload-row\\\" *ngFor=\\\"let file of files; let i = index;\\\">\\n                            <div><img [src]=\\\"file.objectURL\\\" *ngIf=\\\"isImage(file)\\\" [width]=\\\"previewWidth\\\" /></div>\\n                            <div>{{file.name}}</div>\\n                            <div>{{formatSize(file.size)}}</div>\\n                            <div>\\n                                <button type=\\\"button\\\" icon=\\\"pi pi-times\\\" pButton (click)=\\\"remove($event,i)\\\" [disabled]=\\\"uploading\\\"></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"fileTemplate\\\">\\n                        <ng-template ngFor [ngForOf]=\\\"files\\\" [ngForTemplate]=\\\"fileTemplate\\\"></ng-template>\\n                    </div>\\n                </div>\\n                <ng-container *ngTemplateOutlet=\\\"contentTemplate; context: {$implicit: files}\\\"></ng-container>\\n            </div>\\n        </div>\\n        <div class=\\\"p-fileupload p-fileupload-basic p-component\\\" *ngIf=\\\"mode === 'basic'\\\">\\n            <p-messages [value]=\\\"msgs\\\" [enableService]=\\\"false\\\"></p-messages>\\n            <span [ngClass]=\\\"{'p-button p-component p-fileupload-choose': true, 'p-button-icon-only': !chooseLabel, 'p-fileupload-choose-selected': hasFiles(),'p-focus': focus, 'p-disabled':disabled}\\\"\\n                [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" (mouseup)=\\\"onBasicUploaderClick()\\\" (keydown)=\\\"onBasicUploaderClick()\\\" tabindex=\\\"0\\\" pRipple>\\n                <span class=\\\"p-button-icon p-button-icon-left pi\\\" [ngClass]=\\\"hasFiles()&&!auto ? uploadIcon : chooseIcon\\\"></span>\\n                <span class=\\\"p-button-label\\\">{{auto ? chooseLabel : hasFiles() ? files[0].name : chooseLabel}}</span>\\n                <input #basicfileinput type=\\\"file\\\" [accept]=\\\"accept\\\" [multiple]=\\\"multiple\\\" [disabled]=\\\"disabled\\\"\\n                    (change)=\\\"onFileSelect($event)\\\" *ngIf=\\\"!hasFiles()\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\">\\n            </span>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-fileupload-content{position:relative}.p-fileupload-row{align-items:center;display:flex}.p-fileupload-row>div{flex:1 1 auto;width:25%}.p-fileupload-row>div:last-child{text-align:right}.p-fileupload-content .p-progressbar{left:0;position:absolute;top:0;width:100%}.p-button.p-fileupload-choose{overflow:hidden;position:relative}.p-button.p-fileupload-choose input[type=file],.p-fileupload-choose.p-fileupload-choose-selected input[type=file]{display:none}.p-fluid .p-fileupload .p-button{width:auto}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.DomSanitizer\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc2.HttpClient\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc3.PrimeNGConfig\n    }];\n  }, {\n    method: [{\n      type: Input\n    }],\n    invalidFileSizeMessageSummary: [{\n      type: Input\n    }],\n    invalidFileSizeMessageDetail: [{\n      type: Input\n    }],\n    invalidFileTypeMessageSummary: [{\n      type: Input\n    }],\n    invalidFileTypeMessageDetail: [{\n      type: Input\n    }],\n    invalidFileLimitMessageDetail: [{\n      type: Input\n    }],\n    invalidFileLimitMessageSummary: [{\n      type: Input\n    }],\n    previewWidth: [{\n      type: Input\n    }],\n    chooseIcon: [{\n      type: Input\n    }],\n    uploadIcon: [{\n      type: Input\n    }],\n    cancelIcon: [{\n      type: Input\n    }],\n    showUploadButton: [{\n      type: Input\n    }],\n    showCancelButton: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    onBeforeUpload: [{\n      type: Output\n    }],\n    onSend: [{\n      type: Output\n    }],\n    onUpload: [{\n      type: Output\n    }],\n    onError: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onSelect: [{\n      type: Output\n    }],\n    onProgress: [{\n      type: Output\n    }],\n    uploadHandler: [{\n      type: Output\n    }],\n    files: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    accept: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    auto: [{\n      type: Input\n    }],\n    withCredentials: [{\n      type: Input\n    }],\n    maxFileSize: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    chooseLabel: [{\n      type: Input\n    }],\n    uploadLabel: [{\n      type: Input\n    }],\n    cancelLabel: [{\n      type: Input\n    }],\n    headers: [{\n      type: Input\n    }],\n    customUpload: [{\n      type: Input\n    }],\n    fileLimit: [{\n      type: Input\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    advancedFileInput: [{\n      type: ViewChild,\n      args: ['advancedfileinput']\n    }],\n    basicFileInput: [{\n      type: ViewChild,\n      args: ['basicfileinput']\n    }],\n    content: [{\n      type: ViewChild,\n      args: ['content']\n    }]\n  });\n})();\n\nvar FileUploadModule = function FileUploadModule() {\n  _classCallCheck(this, FileUploadModule);\n};\n\nFileUploadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: FileUploadModule\n});\nFileUploadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function FileUploadModule_Factory(t) {\n    return new (t || FileUploadModule)();\n  },\n  imports: [[CommonModule, SharedModule, ButtonModule, ProgressBarModule, MessagesModule, RippleModule], SharedModule, ButtonModule, ProgressBarModule, MessagesModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileUploadModule, {\n    declarations: function declarations() {\n      return [FileUpload];\n    },\n    imports: function imports() {\n      return [CommonModule, SharedModule, ButtonModule, ProgressBarModule, MessagesModule, RippleModule];\n    },\n    exports: function exports() {\n      return [FileUpload, SharedModule, ButtonModule, ProgressBarModule, MessagesModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileUploadModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule, ButtonModule, ProgressBarModule, MessagesModule, RippleModule],\n      exports: [FileUpload, SharedModule, ButtonModule, ProgressBarModule, MessagesModule],\n      declarations: [FileUpload]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FileUpload, FileUploadModule };","map":{"version":3,"sources":["../../src/app/components/fileupload/fileupload.ts","../../src/app/components/fileupload/primeng-fileupload.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,OnDestroy,Input,Output,EventEmitter,TemplateRef,AfterViewInit,AfterContentInit,\n            ContentChildren,QueryList,ViewChild,ElementRef,NgZone,ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {ButtonModule} from 'primeng/button';\nimport {MessagesModule} from 'primeng/messages';\nimport {ProgressBarModule} from 'primeng/progressbar';\nimport {DomHandler} from 'primeng/dom';\nimport {Message, TranslationKeys} from 'primeng/api';\nimport {PrimeTemplate,SharedModule,PrimeNGConfig} from 'primeng/api';\nimport {BlockableUI} from 'primeng/api';\nimport {RippleModule} from 'primeng/ripple';  \nimport {HttpClient, HttpEvent, HttpEventType, HttpHeaders} from \"@angular/common/http\";\n\n@Component({\n    selector: 'p-fileUpload',\n    template: `\n        <div [ngClass]=\"'p-fileupload p-fileupload-advanced p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"mode === 'advanced'\">\n            <div class=\"p-fileupload-buttonbar\">\n                <span class=\"p-button p-component p-fileupload-choose\" [ngClass]=\"{'p-focus': focus, 'p-disabled':disabled || isChooseDisabled()}\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" pRipple\n                    (click)=\"choose()\" (keydown.enter)=\"choose()\" tabindex=\"0\"> \n                    <input #advancedfileinput type=\"file\" (change)=\"onFileSelect($event)\" [multiple]=\"multiple\" [accept]=\"accept\" [disabled]=\"disabled || isChooseDisabled()\" [attr.title]=\"''\">\n                    <span [ngClass]=\"'p-button-icon p-button-icon-left'\" [class]=\"chooseIcon\"></span>\n                    <span class=\"p-button-label\">{{chooseButtonLabel}}</span>\n                </span>\n\n                <p-button *ngIf=\"!auto&&showUploadButton\" type=\"button\" [label]=\"uploadButtonLabel\" [icon]=\"uploadIcon\" (onClick)=\"upload()\" [disabled]=\"!hasFiles() || isFileLimitExceeded()\"></p-button>\n                <p-button *ngIf=\"!auto&&showCancelButton\" type=\"button\" [label]=\"cancelButtonLabel\" [icon]=\"cancelIcon\" (onClick)=\"clear()\" [disabled]=\"!hasFiles() || uploading\"></p-button>\n\n                <ng-container *ngTemplateOutlet=\"toolbarTemplate\"></ng-container>\n            </div>\n            <div #content class=\"p-fileupload-content\" (dragenter)=\"onDragEnter($event)\" (dragleave)=\"onDragLeave($event)\" (drop)=\"onDrop($event)\">\n                <p-progressBar [value]=\"progress\" [showValue]=\"false\" *ngIf=\"hasFiles()\"></p-progressBar>\n\n                <p-messages [value]=\"msgs\" [enableService]=\"false\"></p-messages>\n\n                <div class=\"p-fileupload-files\" *ngIf=\"hasFiles()\">\n                    <div *ngIf=\"!fileTemplate\">\n                        <div class=\"p-fileupload-row\" *ngFor=\"let file of files; let i = index;\">\n                            <div><img [src]=\"file.objectURL\" *ngIf=\"isImage(file)\" [width]=\"previewWidth\" /></div>\n                            <div>{{file.name}}</div>\n                            <div>{{formatSize(file.size)}}</div>\n                            <div>\n                                <button type=\"button\" icon=\"pi pi-times\" pButton (click)=\"remove($event,i)\" [disabled]=\"uploading\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"fileTemplate\">\n                        <ng-template ngFor [ngForOf]=\"files\" [ngForTemplate]=\"fileTemplate\"></ng-template>\n                    </div>\n                </div>\n                <ng-container *ngTemplateOutlet=\"contentTemplate; context: {$implicit: files}\"></ng-container>\n            </div>\n        </div>\n        <div class=\"p-fileupload p-fileupload-basic p-component\" *ngIf=\"mode === 'basic'\">\n            <p-messages [value]=\"msgs\" [enableService]=\"false\"></p-messages>\n            <span [ngClass]=\"{'p-button p-component p-fileupload-choose': true, 'p-button-icon-only': !chooseLabel, 'p-fileupload-choose-selected': hasFiles(),'p-focus': focus, 'p-disabled':disabled}\"\n                [ngStyle]=\"style\" [class]=\"styleClass\" (mouseup)=\"onBasicUploaderClick()\" (keydown)=\"onBasicUploaderClick()\" tabindex=\"0\" pRipple>\n                <span class=\"p-button-icon p-button-icon-left pi\" [ngClass]=\"hasFiles()&&!auto ? uploadIcon : chooseIcon\"></span>\n                <span class=\"p-button-label\">{{auto ? chooseLabel : hasFiles() ? files[0].name : chooseLabel}}</span>\n                <input #basicfileinput type=\"file\" [accept]=\"accept\" [multiple]=\"multiple\" [disabled]=\"disabled\"\n                    (change)=\"onFileSelect($event)\" *ngIf=\"!hasFiles()\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\n            </span>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./fileupload.css']\n})\nexport class FileUpload implements AfterViewInit,AfterContentInit,OnDestroy,BlockableUI {\n\n    @Input() name: string;\n\n    @Input() url: string;\n\n    @Input() method: string = 'post';\n\n    @Input() multiple: boolean;\n\n    @Input() accept: string;\n\n    @Input() disabled: boolean;\n\n    @Input() auto: boolean;\n\n    @Input() withCredentials: boolean;\n\n    @Input() maxFileSize: number;\n\n    @Input() invalidFileSizeMessageSummary: string = '{0}: Invalid file size, ';\n\n    @Input() invalidFileSizeMessageDetail: string = 'maximum upload size is {0}.';\n\n    @Input() invalidFileTypeMessageSummary: string = '{0}: Invalid file type, ';\n\n    @Input() invalidFileTypeMessageDetail: string = 'allowed file types: {0}.';\n\n    @Input() invalidFileLimitMessageDetail: string = 'limit is {0} at most.';\n\n    @Input() invalidFileLimitMessageSummary: string = 'Maximum number of files exceeded, ';\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() previewWidth: number = 50;\n\n    @Input() chooseLabel: string;\n\n    @Input() uploadLabel: string;\n\n    @Input() cancelLabel: string;\n\n    @Input() chooseIcon: string = 'pi pi-plus';\n\n    @Input() uploadIcon: string = 'pi pi-upload';\n\n    @Input() cancelIcon: string = 'pi pi-times';\n\n    @Input() showUploadButton: boolean = true;\n\n    @Input() showCancelButton: boolean = true;\n\n    @Input() mode: string = 'advanced';\n\n    @Input() headers: HttpHeaders;\n    \n    @Input() customUpload: boolean;\n\n    @Input() fileLimit: number;\n\n    @Output() onBeforeUpload: EventEmitter<any> = new EventEmitter();\n\n    @Output() onSend: EventEmitter<any> = new EventEmitter();\n\n    @Output() onUpload: EventEmitter<any> = new EventEmitter();\n\n    @Output() onError: EventEmitter<any> = new EventEmitter();\n\n    @Output() onClear: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRemove: EventEmitter<any> = new EventEmitter();\n\n    @Output() onSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onProgress: EventEmitter<any> = new EventEmitter();\n\n    @Output() uploadHandler: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @ViewChild('advancedfileinput') advancedFileInput: ElementRef;\n\n    @ViewChild('basicfileinput') basicFileInput: ElementRef;\n\n    @ViewChild('content') content: ElementRef;\n\n    @Input() set files(files) {\n        this._files = [];\n\n        for(let i = 0; i < files.length; i++) {\n            let file = files[i];\n\n            if (this.validate(file)) {\n                if (this.isImage(file)) {\n                    (<any>file).objectURL = this.sanitizer.bypassSecurityTrustUrl((window.URL.createObjectURL(files[i])));\n                }\n\n                this._files.push(files[i]);\n            }\n        }\n    }\n\n    get files(): File[] {\n        return this._files;\n    }\n\n    public _files: File[] = [];\n\n    public progress: number = 0;\n\n    public dragHighlight: boolean;\n\n    public msgs: Message[];\n\n    public fileTemplate: TemplateRef<any>;\n\n    public contentTemplate: TemplateRef<any>;\n\n    public toolbarTemplate: TemplateRef<any>;\n\n    public uploadedFileCount: number = 0;\n\n    focus: boolean;\n\n    uploading: boolean;\n\n    duplicateIEEvent: boolean;  // flag to recognize duplicate onchange event for file input\n\n    constructor(private el: ElementRef, public sanitizer: DomSanitizer, public zone: NgZone, private http: HttpClient, public cd: ChangeDetectorRef, public config: PrimeNGConfig){}\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'file':\n                    this.fileTemplate = item.template;\n                break;\n\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                case 'toolbar':\n                    this.toolbarTemplate = item.template;\n                break;\n\n                default:\n                    this.fileTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    ngAfterViewInit() {\n        if (this.mode === 'advanced') {\n            this.zone.runOutsideAngular(() => {\n                if (this.content)\n                    this.content.nativeElement.addEventListener('dragover', this.onDragOver.bind(this));\n            });\n        }\n    }\n\n    choose() {\n        this.advancedFileInput.nativeElement.click();\n    }\n\n    onFileSelect(event) {\n        if (event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\n            this.duplicateIEEvent = false;\n            return;\n        }\n\n        this.msgs = [];\n        if (!this.multiple) {\n            this.files = [];\n        }\n\n        let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n        for(let i = 0; i < files.length; i++) {\n            let file = files[i];\n\n            if (!this.isFileSelected(file)){\n              if (this.validate(file)) {\n                  if (this.isImage(file)) {\n                      file.objectURL = this.sanitizer.bypassSecurityTrustUrl((window.URL.createObjectURL(files[i])));\n                  }\n\n                  this.files.push(files[i]);\n              }\n            }\n        }\n\n        this.onSelect.emit({originalEvent: event, files: files, currentFiles: this.files});\n\n        if (this.fileLimit && this.mode == \"advanced\") {\n            this.checkFileLimit();\n        }\n\n        if (this.hasFiles() && this.auto && (!(this.mode === \"advanced\") || !this.isFileLimitExceeded())) {\n            this.upload();\n        }\n\n        if (event.type !== 'drop' && this.isIE11()) {\n          this.clearIEInput();\n        } else {\n          this.clearInputElement();\n        }\n    }\n\n    isFileSelected(file: File): boolean{\n        for(let sFile of this.files){\n            if ((sFile.name + sFile.type + sFile.size) === (file.name + file.type+file.size)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isIE11() {\n        return !!window['MSInputMethodContext'] && !!document['documentMode'];\n    }\n\n    validate(file: File): boolean {\n        if (this.accept && !this.isFileTypeValid(file)) {\n            this.msgs.push({\n                severity: 'error',\n                summary: this.invalidFileTypeMessageSummary.replace('{0}', file.name),\n                detail: this.invalidFileTypeMessageDetail.replace('{0}', this.accept)\n            });\n            return false;\n        }\n\n        if (this.maxFileSize  && file.size > this.maxFileSize) {\n            this.msgs.push({\n                severity: 'error',\n                summary: this.invalidFileSizeMessageSummary.replace('{0}', file.name),\n                detail: this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxFileSize))\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    private isFileTypeValid(file: File): boolean {\n        let acceptableTypes = this.accept.split(',').map(type => type.trim());\n        for(let type of acceptableTypes) {\n            let acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type)\n                                                    : file.type == type || this.getFileExtension(file).toLowerCase() === type.toLowerCase();\n\n            if (acceptable) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    getTypeClass(fileType: string): string {\n        return fileType.substring(0, fileType.indexOf('/'));\n    }\n\n    isWildcard(fileType: string): boolean {\n        return fileType.indexOf('*') !== -1;\n    }\n\n    getFileExtension(file: File): string {\n        return '.' + file.name.split('.').pop();\n    }\n\n    isImage(file: File): boolean {\n        return /^image\\//.test(file.type);\n    }\n\n    onImageLoad(img: any) {\n        window.URL.revokeObjectURL(img.src);\n    }\n\n    upload() {\n        if (this.customUpload) {\n            if (this.fileLimit) {\n                this.uploadedFileCount += this.files.length; \n            }\n            \n            this.uploadHandler.emit({\n                files: this.files\n            });\n\n            this.cd.markForCheck();\n        }\n        else {\n            this.uploading = true;\n            this.msgs = [];\n            let formData = new FormData();\n\n            this.onBeforeUpload.emit({\n                'formData': formData\n            });\n\n            for (let i = 0; i < this.files.length; i++) {\n                formData.append(this.name, this.files[i], this.files[i].name);\n            }\n\n            this.http[this.method](this.url, formData, {\n                headers: this.headers, reportProgress: true, observe: 'events', withCredentials: this.withCredentials\n            }).subscribe( (event: HttpEvent<any>) => {\n                    switch (event.type) {\n                        case HttpEventType.Sent:\n                            this.onSend.emit({\n                                originalEvent: event,\n                                'formData': formData\n                            });\n                            break;\n                        case HttpEventType.Response:\n                            this.uploading = false;\n                            this.progress = 0;\n\n                            if (event['status'] >= 200 && event['status'] < 300) {\n                                if (this.fileLimit) {\n                                    this.uploadedFileCount += this.files.length; \n                                }\n\n                                this.onUpload.emit({originalEvent: event, files: this.files});\n                            } else {\n                                this.onError.emit({files: this.files});\n                            }\n\n                            this.clear();\n                            break;\n                        case HttpEventType.UploadProgress: {\n                            if (event['loaded']) {\n                                this.progress = Math.round((event['loaded'] * 100) / event['total']);\n                            }\n\n                            this.onProgress.emit({originalEvent: event, progress: this.progress});\n                            break;\n                        }\n                    }\n\n                    this.cd.markForCheck();\n                },\n                error => {\n                    this.uploading = false;\n                    this.onError.emit({files: this.files, error: error});\n                });\n        }\n    }\n\n    clear() {\n        this.files = [];\n        this.onClear.emit();\n        this.clearInputElement();\n        this.cd.markForCheck();\n    }\n\n    remove(event: Event, index: number) {\n        this.clearInputElement();\n        this.onRemove.emit({originalEvent: event, file: this.files[index]});\n        this.files.splice(index, 1);\n    }\n\n    isFileLimitExceeded() {\n        if (this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount && this.focus) {\n            this.focus = false;\n        }\n\n        return this.fileLimit && this.fileLimit < this.files.length + this.uploadedFileCount;\n    }\n\n    isChooseDisabled() {\n        return this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount;\n    }\n\n    checkFileLimit() {\n        if (this.isFileLimitExceeded()) {\n            this.msgs.push({\n                severity: 'error',\n                summary: this.invalidFileLimitMessageSummary.replace('{0}', this.fileLimit.toString()),\n                detail: this.invalidFileLimitMessageDetail.replace('{0}', this.fileLimit.toString())\n            });\n        }\n    }\n\n    clearInputElement() {\n        if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\n            this.advancedFileInput.nativeElement.value = '';\n        }\n\n        if (this.basicFileInput && this.basicFileInput.nativeElement) {\n            this.basicFileInput.nativeElement.value = '';\n        }\n    }\n\n    clearIEInput() {\n        if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\n            this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\n            this.advancedFileInput.nativeElement.value = '';\n        }\n    }\n\n    hasFiles(): boolean {\n        return this.files && this.files.length > 0;\n    }\n\n    onDragEnter(e) {\n        if (!this.disabled) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    }\n\n    onDragOver(e) {\n        if (!this.disabled) {\n            DomHandler.addClass(this.content.nativeElement, 'p-fileupload-highlight');\n            this.dragHighlight = true;\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    }\n\n    onDragLeave(event) {\n        if (!this.disabled) {\n            DomHandler.removeClass(this.content.nativeElement, 'p-fileupload-highlight');\n        }\n    }\n\n    onDrop(event) {\n        if (!this.disabled) {\n            DomHandler.removeClass(this.content.nativeElement, 'p-fileupload-highlight');\n            event.stopPropagation();\n            event.preventDefault();\n\n            let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n            let allowDrop = this.multiple||(files && files.length === 1);\n\n            if (allowDrop) {\n                this.onFileSelect(event);\n            }\n        }\n    }\n\n    onFocus() {\n        this.focus = true;\n    }\n\n    onBlur() {\n        this.focus = false;\n    }\n\n    formatSize(bytes) {\n        if (bytes == 0) {\n            return '0 B';\n        }\n        let k = 1024,\n        dm = 3,\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n        i = Math.floor(Math.log(bytes) / Math.log(k));\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n\n    onBasicUploaderClick() {\n        if (this.hasFiles())\n            this.upload();\n        else\n            this.basicFileInput.nativeElement.click();\n    }\n\n    getBlockableElement(): HTMLElement {\n      return this.el.nativeElement.children[0];\n    }\n\n    get chooseButtonLabel(): string {\n        return this.chooseLabel || this.config.getTranslation(TranslationKeys.CHOOSE);\n    }\n\n    get uploadButtonLabel(): string {\n        return this.uploadLabel || this.config.getTranslation(TranslationKeys.UPLOAD);\n    }\n\n    get cancelButtonLabel(): string {\n        return this.cancelLabel || this.config.getTranslation(TranslationKeys.CANCEL);\n    }\n\n    ngOnDestroy() {\n        if (this.content && this.content.nativeElement) {\n            this.content.nativeElement.removeEventListener('dragover', this.onDragOver);\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,SharedModule,ButtonModule,ProgressBarModule,MessagesModule,RippleModule],\n    exports: [FileUpload,SharedModule,ButtonModule,ProgressBarModule,MessagesModule],\n    declarations: [FileUpload]\n})\nexport class FileUploadModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}