import { FormNotificationService } from '../services/form-notification.service';
import { Directive, Input } from "@angular/core";
import { FieldFormNotification } from '../types/field-form-notification.type';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../services/form-notification.service';
export class FormNotificationComponentSuperclass {
    /**
     * Método construtor responsável por carregar o serviço de validação
     * @param formNotificationService
     */
    constructor(formNotificationService) {
        this.formNotificationService = formNotificationService;
    }
    /**
     * Método Inicial para subscrição no endpoint responsável por validar o formulário
     */
    ngOnInit() {
        this.subscription = this.formNotificationService
            .notifications(this.form, this.name)
            .subscribe((notification) => {
            if (notification instanceof FieldFormNotification) {
                this.message = notification.message;
            }
            else {
                this.message = null;
            }
        });
    }
    /**
     * Método responsável por realizar a saida das subscrições do endpont de validação
     */
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
}
FormNotificationComponentSuperclass.ɵfac = function FormNotificationComponentSuperclass_Factory(t) { return new (t || FormNotificationComponentSuperclass)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormNotificationService)); };
FormNotificationComponentSuperclass.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormNotificationComponentSuperclass, selectors: [["form-notification-component-superclass"]], inputs: { name: "name", form: "form" } });
FormNotificationComponentSuperclass.ctorParameters = () => [
    { type: FormNotificationService }
];
FormNotificationComponentSuperclass.propDecorators = {
    name: [{ type: Input }],
    form: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormNotificationComponentSuperclass, [{
        type: Directive,
        args: [{
                selector: 'form-notification-component-superclass'
            }]
    }], function () { return [{ type: ɵngcc1.FormNotificationService }]; }, { name: [{
            type: Input
        }], form: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1ub3RpZmljYXRpb24tc3VwZXJjbGFzcy5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItYmFzZS9zcmMvbGliL2Zvcm0tbm90aWZpY2F0aW9uL2NvbXBvbmVudHMvZm9ybS1ub3RpZmljYXRpb24tc3VwZXJjbGFzcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDaEYsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3BFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDOzs7QUFLOUUsTUFBTSxPQUFPLG1DQUFtQztBQUFHLElBVS9DO0FBQ0o7QUFDQTtBQUNBLE9BQU87QUFDUCxJQUFJLFlBQXNCLHVCQUFnRDtBQUFJLFFBQXBELDRCQUF1QixHQUF2Qix1QkFBdUIsQ0FBeUI7QUFBQyxJQUFFLENBQUM7QUFDOUUsSUFDSTtBQUNKO0FBQ0EsT0FBTztBQUNQLElBQUksUUFBUTtBQUFLLFFBQ1QsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsdUJBQXVCO0FBQ3hELGFBQWEsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQztBQUNoRCxhQUFhLFNBQVMsQ0FBQyxDQUFDLFlBQThCLEVBQUUsRUFBRTtBQUMxRCxZQUFnQixJQUFJLFlBQVksWUFBWSxxQkFBcUIsRUFBRTtBQUNuRSxnQkFBb0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDO0FBQ3hELGFBQWlCO0FBQUMsaUJBQUs7QUFDdkIsZ0JBQW9CLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0FBQ3hDLGFBQWlCO0FBQ2pCLFFBQVksQ0FBQyxDQUFDLENBQUM7QUFDZixJQUFJLENBQUM7QUFDTCxJQUNJO0FBQ0o7QUFDQSxPQUFPO0FBQ1AsSUFBSSxXQUFXO0FBQUssUUFDWixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3hDLElBQUksQ0FBQztBQUNMOytEQXhDQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLHdDQUF3QyxjQUNyRDtvTkFDSTtBQUFDO0FBQTZELFlBVDFELHVCQUF1QjtBQUFHO0FBQUc7QUFDMUIsbUJBWVAsS0FBSztBQUFLLG1CQUVWLEtBQUs7QUFBSTs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9ybU5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9mb3JtLW5vdGlmaWNhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IERpcmVjdGl2ZSwgT25Jbml0LCBPbkRlc3Ryb3ksIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gXCJyeGpzXCI7XG5pbXBvcnQgeyBGb3JtTm90aWZpY2F0aW9uIH0gZnJvbSAnLi4vdHlwZXMvZm9ybS1ub3RpZmljYXRpb24udHlwZSc7XG5pbXBvcnQgeyBGaWVsZEZvcm1Ob3RpZmljYXRpb24gfSBmcm9tICcuLi90eXBlcy9maWVsZC1mb3JtLW5vdGlmaWNhdGlvbi50eXBlJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdmb3JtLW5vdGlmaWNhdGlvbi1jb21wb25lbnQtc3VwZXJjbGFzcydcbn0pXG5leHBvcnQgY2xhc3MgRm9ybU5vdGlmaWNhdGlvbkNvbXBvbmVudFN1cGVyY2xhc3MgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG5cbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gICAgQElucHV0KCkgbmFtZTogU3RyaW5nO1xuXG4gICAgQElucHV0KCkgZm9ybTogU3RyaW5nO1xuXG4gICAgbWVzc2FnZTogU3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogTcOpdG9kbyBjb25zdHJ1dG9yIHJlc3BvbnPDoXZlbCBwb3IgY2FycmVnYXIgbyBzZXJ2acOnbyBkZSB2YWxpZGHDp8Ojb1xuICAgICAqIEBwYXJhbSBmb3JtTm90aWZpY2F0aW9uU2VydmljZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBmb3JtTm90aWZpY2F0aW9uU2VydmljZTogRm9ybU5vdGlmaWNhdGlvblNlcnZpY2UpIHt9XG5cbiAgICAvKipcbiAgICAgKiBNw6l0b2RvIEluaWNpYWwgcGFyYSBzdWJzY3Jpw6fDo28gbm8gZW5kcG9pbnQgcmVzcG9uc8OhdmVsIHBvciB2YWxpZGFyIG8gZm9ybXVsw6FyaW9cbiAgICAgKi9cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24gPSB0aGlzLmZvcm1Ob3RpZmljYXRpb25TZXJ2aWNlXG4gICAgICAgICAgICAubm90aWZpY2F0aW9ucyh0aGlzLmZvcm0sIHRoaXMubmFtZSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoKG5vdGlmaWNhdGlvbjogRm9ybU5vdGlmaWNhdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChub3RpZmljYXRpb24gaW5zdGFuY2VvZiBGaWVsZEZvcm1Ob3RpZmljYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gbm90aWZpY2F0aW9uLm1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBNw6l0b2RvIHJlc3BvbnPDoXZlbCBwb3IgcmVhbGl6YXIgYSBzYWlkYSBkYXMgc3Vic2NyacOnw7VlcyBkbyBlbmRwb250IGRlIHZhbGlkYcOnw6NvXG4gICAgICovXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuXG59XG4iXX0=