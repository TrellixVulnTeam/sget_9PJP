{"ast":null,"code":"import _classCallCheck from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Directive, ElementRef, NgZone, Input, HostListener, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { TranslationKeys, PrimeNGConfig, PrimeTemplate } from 'primeng/api';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'primeng/api';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'primeng/inputtext';\nvar _c0 = [\"input\"];\n\nfunction Password_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"i\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function Password_i_3_Template_i_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onMaskToggle();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.toggleIconClass());\n  }\n}\n\nfunction Password_div_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Password_div_4_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Password_div_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, Password_div_4_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.contentTemplate);\n  }\n}\n\nvar _c1 = function _c1(a0) {\n  return {\n    \"width\": a0\n  };\n};\n\nfunction Password_div_4_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵelement(1, \"div\", 0);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 12);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r9.strengthClass())(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(3, _c1, ctx_r9.meter ? ctx_r9.meter.width : \"\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.infoText);\n  }\n}\n\nfunction Password_div_4_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c2 = function _c2(a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nvar _c3 = function _c3(a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nfunction Password_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6, 7);\n    ɵngcc0.ɵɵlistener(\"@overlayAnimation.start\", function Password_div_4_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.onAnimationStart($event);\n    });\n    ɵngcc0.ɵɵtemplate(2, Password_div_4_ng_container_2_Template, 1, 0, \"ng-container\", 8);\n    ɵngcc0.ɵɵtemplate(3, Password_div_4_ng_container_3_Template, 2, 1, \"ng-container\", 9);\n    ɵngcc0.ɵɵtemplate(4, Password_div_4_ng_template_4_Template, 4, 5, \"ng-template\", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(6, Password_div_4_ng_container_6_Template, 1, 0, \"ng-container\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r8 = ɵngcc0.ɵɵreference(5);\n\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"p-password-panel p-component\")(\"@overlayAnimation\", ɵngcc0.ɵɵpureFunction1(9, _c3, ɵngcc0.ɵɵpureFunction2(6, _c2, ctx_r2.showTransitionOptions, ctx_r2.hideTransitionOptions)));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.contentTemplate)(\"ngIfElse\", _r8);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.footerTemplate);\n  }\n}\n\nvar PasswordDirective = /*#__PURE__*/function () {\n  function PasswordDirective(el, zone) {\n    _classCallCheck(this, PasswordDirective);\n\n    this.el = el;\n    this.zone = zone;\n    this.promptLabel = 'Enter a password';\n    this.weakLabel = 'Weak';\n    this.mediumLabel = 'Medium';\n    this.strongLabel = 'Strong';\n    this.feedback = true;\n  }\n\n  _createClass(PasswordDirective, [{\n    key: \"showPassword\",\n    set: function set(show) {\n      this.el.nativeElement.type = show ? 'text' : 'password';\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this.updateFilledState();\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(e) {\n      this.updateFilledState();\n    }\n  }, {\n    key: \"updateFilledState\",\n    value: function updateFilledState() {\n      this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    }\n  }, {\n    key: \"createPanel\",\n    value: function createPanel() {\n      this.panel = document.createElement('div');\n      this.panel.className = 'p-password-panel p-component p-password-panel-overlay p-connected-overlay';\n      this.meter = document.createElement('div');\n      this.meter.className = 'p-password-meter';\n      this.info = document.createElement('div');\n      this.info.className = 'p-password-info';\n      this.info.textContent = this.promptLabel;\n      this.panel.appendChild(this.meter);\n      this.panel.appendChild(this.info);\n      this.panel.style.minWidth = DomHandler.getOuterWidth(this.el.nativeElement) + 'px';\n      document.body.appendChild(this.panel);\n    }\n  }, {\n    key: \"showOverlay\",\n    value: function showOverlay() {\n      var _this = this;\n\n      if (this.feedback) {\n        if (!this.panel) {\n          this.createPanel();\n        }\n\n        this.panel.style.zIndex = String(++DomHandler.zindex);\n        this.panel.style.display = 'block';\n        this.zone.runOutsideAngular(function () {\n          setTimeout(function () {\n            DomHandler.addClass(_this.panel, 'p-connected-overlay-visible');\n\n            _this.bindScrollListener();\n\n            _this.bindDocumentResizeListener();\n          }, 1);\n        });\n        DomHandler.absolutePosition(this.panel, this.el.nativeElement);\n      }\n    }\n  }, {\n    key: \"hideOverlay\",\n    value: function hideOverlay() {\n      var _this2 = this;\n\n      if (this.feedback && this.panel) {\n        DomHandler.addClass(this.panel, 'p-connected-overlay-hidden');\n        DomHandler.removeClass(this.panel, 'p-connected-overlay-visible');\n        this.unbindScrollListener();\n        this.unbindDocumentResizeListener();\n        this.zone.runOutsideAngular(function () {\n          setTimeout(function () {\n            _this2.ngOnDestroy();\n          }, 150);\n        });\n      }\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.showOverlay();\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.hideOverlay();\n    }\n  }, {\n    key: \"onKeyup\",\n    value: function onKeyup(e) {\n      if (this.feedback) {\n        var value = e.target.value,\n            label = null,\n            meterPos = null;\n\n        if (value.length === 0) {\n          label = this.promptLabel;\n          meterPos = '0px 0px';\n        } else {\n          var score = this.testStrength(value);\n\n          if (score < 30) {\n            label = this.weakLabel;\n            meterPos = '0px -10px';\n          } else if (score >= 30 && score < 80) {\n            label = this.mediumLabel;\n            meterPos = '0px -20px';\n          } else if (score >= 80) {\n            label = this.strongLabel;\n            meterPos = '0px -30px';\n          }\n        }\n\n        if (!this.panel || !DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\n          this.showOverlay();\n        }\n\n        this.meter.style.backgroundPosition = meterPos;\n        this.info.textContent = label;\n      }\n    }\n  }, {\n    key: \"testStrength\",\n    value: function testStrength(str) {\n      var grade = 0;\n      var val;\n      val = str.match('[0-9]');\n      grade += this.normalize(val ? val.length : 1 / 4, 1) * 25;\n      val = str.match('[a-zA-Z]');\n      grade += this.normalize(val ? val.length : 1 / 2, 3) * 10;\n      val = str.match('[!@#$%^&*?_~.,;=]');\n      grade += this.normalize(val ? val.length : 1 / 6, 1) * 35;\n      val = str.match('[A-Z]');\n      grade += this.normalize(val ? val.length : 1 / 6, 1) * 30;\n      grade *= str.length / 8;\n      return grade > 100 ? 100 : grade;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(x, y) {\n      var diff = x - y;\n      if (diff <= 0) return x / y;else return 1 + 0.5 * (x / (x + y / 4));\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.el.nativeElement.disabled;\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this3 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, function () {\n          if (DomHandler.hasClass(_this3.panel, 'p-connected-overlay-visible')) {\n            _this3.hideOverlay();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"bindDocumentResizeListener\",\n    value: function bindDocumentResizeListener() {\n      this.documentResizeListener = this.onWindowResize.bind(this);\n      window.addEventListener('resize', this.documentResizeListener);\n    }\n  }, {\n    key: \"unbindDocumentResizeListener\",\n    value: function unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    }\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize() {\n      this.hideOverlay();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.panel) {\n        if (this.scrollHandler) {\n          this.scrollHandler.destroy();\n          this.scrollHandler = null;\n        }\n\n        this.unbindDocumentResizeListener();\n        document.body.removeChild(this.panel);\n        this.panel = null;\n        this.meter = null;\n        this.info = null;\n      }\n    }\n  }]);\n\n  return PasswordDirective;\n}();\n\nPasswordDirective.ɵfac = function PasswordDirective_Factory(t) {\n  return new (t || PasswordDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nPasswordDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: PasswordDirective,\n  selectors: [[\"\", \"pPassword\", \"\"]],\n  hostVars: 6,\n  hostBindings: function PasswordDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function PasswordDirective_input_HostBindingHandler($event) {\n        return ctx.onInput($event);\n      })(\"focus\", function PasswordDirective_focus_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function PasswordDirective_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      })(\"keyup\", function PasswordDirective_keyup_HostBindingHandler($event) {\n        return ctx.onKeyup($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"p-inputtext\", true)(\"p-component\", true)(\"p-filled\", ctx.filled);\n    }\n  },\n  inputs: {\n    promptLabel: \"promptLabel\",\n    weakLabel: \"weakLabel\",\n    mediumLabel: \"mediumLabel\",\n    strongLabel: \"strongLabel\",\n    feedback: \"feedback\",\n    showPassword: \"showPassword\"\n  }\n});\n\nPasswordDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nPasswordDirective.propDecorators = {\n  promptLabel: [{\n    type: Input\n  }],\n  weakLabel: [{\n    type: Input\n  }],\n  mediumLabel: [{\n    type: Input\n  }],\n  strongLabel: [{\n    type: Input\n  }],\n  feedback: [{\n    type: Input\n  }],\n  showPassword: [{\n    type: Input\n  }],\n  onInput: [{\n    type: HostListener,\n    args: ['input', ['$event']]\n  }],\n  onFocus: [{\n    type: HostListener,\n    args: ['focus']\n  }],\n  onBlur: [{\n    type: HostListener,\n    args: ['blur']\n  }],\n  onKeyup: [{\n    type: HostListener,\n    args: ['keyup', ['$event']]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[pPassword]',\n      host: {\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    promptLabel: [{\n      type: Input\n    }],\n    weakLabel: [{\n      type: Input\n    }],\n    mediumLabel: [{\n      type: Input\n    }],\n    strongLabel: [{\n      type: Input\n    }],\n    feedback: [{\n      type: Input\n    }],\n    showPassword: [{\n      type: Input\n    }],\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    onKeyup: [{\n      type: HostListener,\n      args: ['keyup', ['$event']]\n    }]\n  });\n})();\n\nvar Password_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return Password;\n  }),\n  multi: true\n};\n\nvar Password = /*#__PURE__*/function () {\n  function Password(cd, config) {\n    _classCallCheck(this, Password);\n\n    this.cd = cd;\n    this.config = config;\n    this.mediumRegex = '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})';\n    this.strongRegex = '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})';\n    this.feedback = true;\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.overlayVisible = false;\n    this.focused = false;\n    this.unmasked = false;\n    this.value = null;\n\n    this.onModelChange = function () {};\n\n    this.onModelTouched = function () {};\n  }\n\n  _createClass(Password, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this4 = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'content':\n            _this4.contentTemplate = item.template;\n            break;\n\n          case 'header':\n            _this4.headerTemplate = item.template;\n            break;\n\n          case 'footer':\n            _this4.footerTemplate = item.template;\n            break;\n\n          default:\n            _this4.contentTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.infoText = this.promptText();\n      this.mediumCheckRegExp = new RegExp(this.mediumRegex);\n      this.strongCheckRegExp = new RegExp(this.strongRegex);\n    }\n  }, {\n    key: \"onAnimationStart\",\n    value: function onAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n          this.overlay = event.element;\n          this.overlay.style.zIndex = String(DomHandler.generateZIndex());\n          this.appendContainer();\n          this.alignOverlay();\n          this.bindScrollListener();\n          this.bindResizeListener();\n          break;\n\n        case 'hidden':\n          this.unbindScrollListener();\n          this.unbindResizeListener();\n          this.overlay = null;\n          break;\n      }\n    }\n  }, {\n    key: \"appendContainer\",\n    value: function appendContainer() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') document.body.appendChild(this.overlay);else document.getElementById(this.appendTo).appendChild(this.overlay);\n      }\n    }\n  }, {\n    key: \"alignOverlay\",\n    value: function alignOverlay() {\n      if (this.appendTo) {\n        this.overlay.style.minWidth = DomHandler.getOuterWidth(this.input.nativeElement) + 'px';\n        DomHandler.absolutePosition(this.overlay, this.input.nativeElement);\n      } else {\n        DomHandler.relativePosition(this.overlay, this.input.nativeElement);\n      }\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(event) {\n      this.onModelChange(event.target.value);\n      this.onModelTouched();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(event) {\n      this.focused = true;\n\n      if (this.feedback) {\n        this.overlayVisible = true;\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      this.focused = false;\n\n      if (this.feedback) {\n        this.overlayVisible = false;\n      }\n    }\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp(event) {\n      if (this.feedback) {\n        var value = event.target.value;\n        var label = null;\n        var meter = null;\n\n        switch (this.testStrength(value)) {\n          case 1:\n            label = this.weakText();\n            meter = {\n              strength: 'weak',\n              width: '33.33%'\n            };\n            break;\n\n          case 2:\n            label = this.mediumText();\n            meter = {\n              strength: 'medium',\n              width: '66.66%'\n            };\n            break;\n\n          case 3:\n            label = this.strongText();\n            meter = {\n              strength: 'strong',\n              width: '100%'\n            };\n            break;\n\n          default:\n            label = this.promptText();\n            meter = null;\n            break;\n        }\n\n        this.meter = meter;\n        this.infoText = label;\n\n        if (!this.overlayVisible) {\n          this.overlayVisible = true;\n        }\n      }\n    }\n  }, {\n    key: \"onMaskToggle\",\n    value: function onMaskToggle() {\n      this.unmasked = !this.unmasked;\n    }\n  }, {\n    key: \"testStrength\",\n    value: function testStrength(str) {\n      var level = 0;\n      if (this.strongCheckRegExp.test(str)) level = 3;else if (this.mediumCheckRegExp.test(str)) level = 2;else if (str.length) level = 1;\n      return level;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      if (value === undefined) this.value = null;else this.value = value;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(val) {\n      this.disabled = val;\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this5 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.input.nativeElement, function () {\n          if (_this5.overlayVisible) {\n            _this5.overlayVisible = false;\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"bindResizeListener\",\n    value: function bindResizeListener() {\n      var _this6 = this;\n\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this6.overlayVisible) {\n            _this6.overlayVisible = false;\n          }\n        };\n\n        window.addEventListener('resize', this.resizeListener);\n      }\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"unbindResizeListener\",\n    value: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n  }, {\n    key: \"unbindOutsideClickListener\",\n    value: function unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener('click', this.outsideClickListener);\n        this.outsideClickListener = null;\n      }\n    }\n  }, {\n    key: \"containerClass\",\n    value: function containerClass() {\n      return {\n        'p-password p-component p-inputwrapper': true,\n        'p-inputwrapper-filled': this.filled(),\n        'p-inputwrapper-focus': this.focused,\n        'p-input-icon-right': this.toggleMask\n      };\n    }\n  }, {\n    key: \"inputFieldClass\",\n    value: function inputFieldClass() {\n      return {\n        'p-password-input': true,\n        'p-disabled': this.disabled\n      };\n    }\n  }, {\n    key: \"toggleIconClass\",\n    value: function toggleIconClass() {\n      return this.unmasked ? 'pi pi-eye-slash' : 'pi pi-eye';\n    }\n  }, {\n    key: \"strengthClass\",\n    value: function strengthClass() {\n      return \"p-password-strength \".concat(this.meter ? this.meter.strength : '');\n    }\n  }, {\n    key: \"filled\",\n    value: function filled() {\n      return this.value != null && this.value.toString().length > 0;\n    }\n  }, {\n    key: \"promptText\",\n    value: function promptText() {\n      return this.promptLabel || this.getTranslation(TranslationKeys.PASSWORD_PROMPT);\n    }\n  }, {\n    key: \"weakText\",\n    value: function weakText() {\n      return this.weakLabel || this.getTranslation(TranslationKeys.WEAK);\n    }\n  }, {\n    key: \"mediumText\",\n    value: function mediumText() {\n      return this.mediumLabel || this.getTranslation(TranslationKeys.MEDIUM);\n    }\n  }, {\n    key: \"strongText\",\n    value: function strongText() {\n      return this.strongLabel || this.getTranslation(TranslationKeys.STRONG);\n    }\n  }, {\n    key: \"restoreAppend\",\n    value: function restoreAppend() {\n      if (this.overlay && this.appendTo) {\n        if (this.appendTo === 'body') document.body.removeChild(this.overlay);else document.getElementById(this.appendTo).removeChild(this.overlay);\n      }\n    }\n  }, {\n    key: \"inputType\",\n    value: function inputType() {\n      return this.unmasked ? 'text' : 'password';\n    }\n  }, {\n    key: \"getTranslation\",\n    value: function getTranslation(option) {\n      return this.config.getTranslation(option);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.restoreAppend();\n      this.unbindResizeListener();\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n    }\n  }]);\n\n  return Password;\n}();\n\nPassword.ɵfac = function Password_Factory(t) {\n  return new (t || Password)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.PrimeNGConfig));\n};\n\nPassword.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Password,\n  selectors: [[\"p-password\"]],\n  contentQueries: function Password_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Password_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  inputs: {\n    mediumRegex: \"mediumRegex\",\n    strongRegex: \"strongRegex\",\n    feedback: \"feedback\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    disabled: \"disabled\",\n    promptLabel: \"promptLabel\",\n    weakLabel: \"weakLabel\",\n    mediumLabel: \"mediumLabel\",\n    strongLabel: \"strongLabel\",\n    appendTo: \"appendTo\",\n    toggleMask: \"toggleMask\",\n    inputStyleClass: \"inputStyleClass\",\n    styleClass: \"styleClass\",\n    style: \"style\",\n    inputStyle: \"inputStyle\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([Password_VALUE_ACCESSOR])],\n  decls: 5,\n  vars: 12,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"pInputText\", \"\", 3, \"ngClass\", \"ngStyle\", \"value\", \"input\", \"focus\", \"blur\", \"keyup\"], [\"input\", \"\"], [3, \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [3, \"ngClass\"], [\"overlay\", \"\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\", \"ngIfElse\"], [\"content\", \"\"], [1, \"p-password-meter\"], [\"className\", \"p-password-info\"]],\n  template: function Password_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"input\", function Password_Template_input_input_1_listener($event) {\n        return ctx.onInput($event);\n      })(\"focus\", function Password_Template_input_focus_1_listener($event) {\n        return ctx.onFocus($event);\n      })(\"blur\", function Password_Template_input_blur_1_listener($event) {\n        return ctx.onBlur($event);\n      })(\"keyup\", function Password_Template_input_keyup_1_listener($event) {\n        return ctx.onKeyUp($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, Password_i_3_Template, 1, 1, \"i\", 3);\n      ɵngcc0.ɵɵtemplate(4, Password_div_4_Template, 7, 11, \"div\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMap(ctx.inputStyleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputFieldClass())(\"ngStyle\", ctx.inputStyle)(\"value\", ctx.value);\n      ɵngcc0.ɵɵattribute(\"type\", ctx.inputType());\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.toggleMask);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    }\n  },\n  directives: [ɵngcc2.NgClass, ɵngcc2.NgStyle, ɵngcc3.InputText, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet],\n  styles: [\".p-password{display:inline-flex;position:relative}.p-password-panel{position:absolute}.p-password .p-password-panel{min-width:100%}.p-password-meter{height:10px}.p-password-strength{height:100%;transition:width 1s ease-in-out;width:0}.p-fluid .p-password{display:flex}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\nPassword.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: PrimeNGConfig\n  }];\n};\n\nPassword.propDecorators = {\n  disabled: [{\n    type: Input\n  }],\n  promptLabel: [{\n    type: Input\n  }],\n  mediumRegex: [{\n    type: Input\n  }],\n  strongRegex: [{\n    type: Input\n  }],\n  weakLabel: [{\n    type: Input\n  }],\n  mediumLabel: [{\n    type: Input\n  }],\n  strongLabel: [{\n    type: Input\n  }],\n  feedback: [{\n    type: Input\n  }],\n  appendTo: [{\n    type: Input\n  }],\n  toggleMask: [{\n    type: Input\n  }],\n  inputStyleClass: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  inputStyle: [{\n    type: Input\n  }],\n  showTransitionOptions: [{\n    type: Input\n  }],\n  hideTransitionOptions: [{\n    type: Input\n  }],\n  input: [{\n    type: ViewChild,\n    args: ['input']\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Password, [{\n    type: Component,\n    args: [{\n      selector: 'p-password',\n      template: \"\\n        <div [ngClass]=\\\"containerClass()\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <input #input pInputText [ngClass]=\\\"inputFieldClass()\\\" [ngStyle]=\\\"inputStyle\\\" [class]=\\\"inputStyleClass\\\" [attr.type]=\\\"inputType()\\\" [value]=\\\"value\\\" (input)=\\\"onInput($event)\\\" (focus)=\\\"onFocus($event)\\\" \\n                (blur)=\\\"onBlur($event)\\\" (keyup)=\\\"onKeyUp($event)\\\" />\\n            <i *ngIf=\\\"toggleMask\\\" [ngClass]=\\\"toggleIconClass()\\\" (click)=\\\"onMaskToggle()\\\"></i>\\n            <div #overlay *ngIf=\\\"overlayVisible\\\" [ngClass]=\\\"'p-password-panel p-component'\\\" \\n                [@overlayAnimation]=\\\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\" (@overlayAnimation.start)=\\\"onAnimationStart($event)\\\">\\n                <ng-container *ngTemplateOutlet=\\\"headerTemplate\\\"></ng-container>\\n                <ng-container *ngIf=\\\"contentTemplate; else content\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"contentTemplate\\\"></ng-container>\\n                </ng-container>\\n                <ng-template #content>\\n                    <div class=\\\"p-password-meter\\\">\\n                        <div [ngClass]=\\\"strengthClass()\\\" [ngStyle]=\\\"{'width': meter ? meter.width : ''}\\\"></div>\\n                    </div>\\n                    <div className=\\\"p-password-info\\\">{{infoText}}</div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"footerTemplate\\\"></ng-container>\\n            </div>\\n        </div>\\n    \",\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))])])],\n      providers: [Password_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-password{display:inline-flex;position:relative}.p-password-panel{position:absolute}.p-password .p-password-panel{min-width:100%}.p-password-meter{height:10px}.p-password-strength{height:100%;transition:width 1s ease-in-out;width:0}.p-fluid .p-password{display:flex}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.PrimeNGConfig\n    }];\n  }, {\n    mediumRegex: [{\n      type: Input\n    }],\n    strongRegex: [{\n      type: Input\n    }],\n    feedback: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    promptLabel: [{\n      type: Input\n    }],\n    weakLabel: [{\n      type: Input\n    }],\n    mediumLabel: [{\n      type: Input\n    }],\n    strongLabel: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    toggleMask: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar PasswordModule = function PasswordModule() {\n  _classCallCheck(this, PasswordModule);\n};\n\nPasswordModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: PasswordModule\n});\nPasswordModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function PasswordModule_Factory(t) {\n    return new (t || PasswordModule)();\n  },\n  imports: [[CommonModule, InputTextModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PasswordModule, {\n    declarations: function declarations() {\n      return [PasswordDirective, Password];\n    },\n    imports: function imports() {\n      return [CommonModule, InputTextModule];\n    },\n    exports: function exports() {\n      return [PasswordDirective, Password];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule],\n      exports: [PasswordDirective, Password],\n      declarations: [PasswordDirective, Password]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Password, PasswordDirective, PasswordModule, Password_VALUE_ACCESSOR };","map":{"version":3,"sources":["../../src/app/components/password/password.ts","../../src/app/components/password/primeng-password.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,OnDestroy,DoCheck,NgZone, OnInit, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, QueryList, TemplateRef, Component, AfterContentInit, ViewChild, ChangeDetectorRef, forwardRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {animate, style, transition, trigger} from '@angular/animations';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DomHandler, ConnectedOverlayScrollHandler} from 'primeng/dom';\nimport {PrimeNGConfig, PrimeTemplate, TranslationKeys} from 'primeng/api';\nimport {InputTextModule} from 'primeng/inputtext';\n\n@Directive({\n    selector: '[pPassword]',\n    host: {\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled'\n    }\n})\nexport class PasswordDirective implements OnDestroy,DoCheck {\n\n    @Input() promptLabel: string = 'Enter a password';\n\n    @Input() weakLabel: string = 'Weak';\n\n    @Input() mediumLabel: string = 'Medium';\n\n    @Input() strongLabel: string = 'Strong';\n\n    @Input() feedback: boolean = true;\n\n    @Input() set showPassword(show: boolean) {\n        this.el.nativeElement.type = show ? 'text' : 'password';\n    }\n\n    panel: HTMLDivElement;\n\n    meter: any;\n\n    info: any;\n\n    filled: boolean;\n\n    scrollHandler: any;\n\n    documentResizeListener: any;\n\n    constructor(public el: ElementRef, public zone: NgZone) {}\n\n    ngDoCheck() {\n        this.updateFilledState();\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateFilledState();\n    }\n\n    updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    }\n\n    createPanel() {\n        this.panel = document.createElement('div');\n        this.panel.className = 'p-password-panel p-component p-password-panel-overlay p-connected-overlay';\n        this.meter = document.createElement('div');\n        this.meter.className = 'p-password-meter';\n        this.info = document.createElement('div');\n        this.info.className = 'p-password-info';\n        this.info.textContent = this.promptLabel;\n        this.panel.appendChild(this.meter);\n        this.panel.appendChild(this.info);\n        this.panel.style.minWidth = DomHandler.getOuterWidth(this.el.nativeElement) + 'px';\n        document.body.appendChild(this.panel);\n    }\n\n    showOverlay() {\n        if (this.feedback) {\n            if (!this.panel) {\n                this.createPanel();\n            }\n\n            this.panel.style.zIndex = String(++DomHandler.zindex);\n            this.panel.style.display = 'block';\n            this.zone.runOutsideAngular(() => {\n\n                setTimeout(() => {\n                    DomHandler.addClass(this.panel, 'p-connected-overlay-visible');\n                    this.bindScrollListener();\n                    this.bindDocumentResizeListener();\n                }, 1);\n            });\n            DomHandler.absolutePosition(this.panel, this.el.nativeElement);\n        }\n    }\n\n    hideOverlay() {\n        if (this.feedback && this.panel) {\n            DomHandler.addClass(this.panel, 'p-connected-overlay-hidden');\n            DomHandler.removeClass(this.panel, 'p-connected-overlay-visible');\n            this.unbindScrollListener();\n            this.unbindDocumentResizeListener();\n\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    this.ngOnDestroy();\n                }, 150);\n            });\n        }\n    }\n\n    @HostListener('focus')\n    onFocus() {\n        this.showOverlay();\n    }\n\n    @HostListener('blur')\n    onBlur() {\n        this.hideOverlay();\n    }\n\n    @HostListener('keyup', ['$event'])\n    onKeyup(e) {\n        if (this.feedback) {\n            let value = e.target.value,\n            label = null,\n            meterPos = null;\n\n            if (value.length === 0) {\n                label = this.promptLabel;\n                meterPos = '0px 0px';\n            }\n            else {\n                var score = this.testStrength(value);\n\n                if (score < 30) {\n                    label = this.weakLabel;\n                    meterPos = '0px -10px';\n                }\n                else if (score >= 30 && score < 80) {\n                    label = this.mediumLabel;\n                    meterPos = '0px -20px';\n                }\n                else if (score >= 80) {\n                    label = this.strongLabel;\n                    meterPos = '0px -30px';\n                }\n            }\n\n            if (!this.panel || !DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\n                this.showOverlay();\n            }\n\n            this.meter.style.backgroundPosition = meterPos;\n            this.info.textContent = label;\n        }\n    }\n\n    testStrength(str: string) {\n        let grade: number = 0;\n        let val: RegExpMatchArray;\n\n        val = str.match('[0-9]');\n        grade += this.normalize(val ? val.length : 1/4, 1) * 25;\n\n        val = str.match('[a-zA-Z]');\n        grade += this.normalize(val ? val.length : 1/2, 3) * 10;\n\n        val = str.match('[!@#$%^&*?_~.,;=]');\n        grade += this.normalize(val ? val.length : 1/6, 1) * 35;\n\n        val = str.match('[A-Z]');\n        grade += this.normalize(val ? val.length : 1/6, 1) * 30;\n\n        grade *= str.length / 8;\n\n        return grade > 100 ? 100 : grade;\n    }\n\n    normalize(x, y) {\n        let diff = x - y;\n\n        if (diff <= 0)\n            return x / y;\n        else\n            return 1 + 0.5 * (x / (x + y/4));\n    }\n\n    get disabled(): boolean {\n        return this.el.nativeElement.disabled;\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n                if (DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\n                    this.hideOverlay();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onWindowResize() {\n        this.hideOverlay();\n    }\n\n    ngOnDestroy() {\n        if (this.panel) {\n            if (this.scrollHandler) {\n                this.scrollHandler.destroy();\n                this.scrollHandler = null;\n            }\n\n            this.unbindDocumentResizeListener();\n\n            document.body.removeChild(this.panel);\n            this.panel = null;\n            this.meter = null;\n            this.info = null;\n        }\n    }\n}\n\n\nexport const Password_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Password),\n    multi: true\n};\n@Component({\n    selector: 'p-password',\n    template: `\n        <div [ngClass]=\"containerClass()\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input #input pInputText [ngClass]=\"inputFieldClass()\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.type]=\"inputType()\" [value]=\"value\" (input)=\"onInput($event)\" (focus)=\"onFocus($event)\" \n                (blur)=\"onBlur($event)\" (keyup)=\"onKeyUp($event)\" />\n            <i *ngIf=\"toggleMask\" [ngClass]=\"toggleIconClass()\" (click)=\"onMaskToggle()\"></i>\n            <div #overlay *ngIf=\"overlayVisible\" [ngClass]=\"'p-password-panel p-component'\" \n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onAnimationStart($event)\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ng-container *ngIf=\"contentTemplate; else content\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </ng-container>\n                <ng-template #content>\n                    <div class=\"p-password-meter\">\n                        <div [ngClass]=\"strengthClass()\" [ngStyle]=\"{'width': meter ? meter.width : ''}\"></div>\n                    </div>\n                    <div className=\"p-password-info\">{{infoText}}</div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('{{showTransitionParams}}')\n              ]),\n              transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n              ])\n        ])\n    ],\n    providers: [Password_VALUE_ACCESSOR],\n    styleUrls: ['./password.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class Password implements AfterContentInit,OnInit {\n    \n    @Input() disabled: boolean;\n\n    @Input() promptLabel: string;\n\n    @Input() mediumRegex: string = '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})';\n\n    @Input() strongRegex: string = '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})';\n\n    @Input() weakLabel: string;\n\n    @Input() mediumLabel: string;\n\n    @Input() strongLabel: string;\n\n    @Input() feedback: boolean = true;\n\n    @Input() appendTo: any;\n\n    @Input() toggleMask: boolean;\n\n    @Input() inputStyleClass: string;\n\n    @Input() styleClass: string;\n\n    @Input() style: any;\n\n    @Input() inputStyle: any;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @ViewChild('input') input: ElementRef;\n\n    contentTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n\n    headerTemplate: TemplateRef<any>;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n    \n    overlayVisible: boolean = false;\n\n    meter: any;\n    \n    infoText: string;\n    \n    focused: boolean = false;\n    \n    unmasked: boolean = false;\n\n    mediumCheckRegExp: any;\n\n    strongCheckRegExp: any;\n\n    resizeListener: any;\n\n    outsideClickListener: any;\n\n    scrollHandler: any;\n\n    overlay: any;\n\n    value: string = null;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n\n    constructor(private cd: ChangeDetectorRef, private config: PrimeNGConfig) {}\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n                \n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.infoText = this.promptText();\n        this.mediumCheckRegExp = new RegExp(this.mediumRegex);\n        this.strongCheckRegExp = new RegExp(this.strongRegex);\n    }\n\n    onAnimationStart(event) {\n        switch(event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                this.overlay.style.zIndex = String(DomHandler.generateZIndex());\n                this.appendContainer();\n                this.alignOverlay();\n                this.bindScrollListener();\n                this.bindResizeListener();\n            break;\n\n            case 'hidden':\n                this.unbindScrollListener();\n                this.unbindResizeListener();\n                this.overlay = null;\n            break;\n        }\n    }\n\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                document.getElementById(this.appendTo).appendChild(this.overlay);\n        }\n    }\n\n    alignOverlay() {\n        if (this.appendTo) {\n            this.overlay.style.minWidth = DomHandler.getOuterWidth(this.input.nativeElement) + 'px';\n            DomHandler.absolutePosition(this.overlay, this.input.nativeElement);\n        }\n        else {\n            DomHandler.relativePosition(this.overlay, this.input.nativeElement);\n        }\n    }\n\n    onInput(event)  {\n        this.onModelChange(event.target.value);\n        this.onModelTouched();\n    }\n\n    onFocus(event) {\n        this.focused = true;\n        if (this.feedback) {\n            this.overlayVisible = true;\n        }\n    }\n\n    onBlur(event) {\n        this.focused = false;\n        if (this.feedback) {\n            this.overlayVisible = false;\n        }\n    }\n\n    onKeyUp(event) {\n        if (this.feedback) {\n            let value = event.target.value;\n            let label = null;\n            let meter = null;\n\n            switch (this.testStrength(value)) {\n                case 1:\n                    label = this.weakText();\n                    meter = {\n                        strength: 'weak',\n                        width: '33.33%'\n                    };\n                    break;\n\n                case 2:\n                    label = this.mediumText();\n                    meter = {\n                        strength: 'medium',\n                        width: '66.66%'\n                    };\n                    break;\n\n                case 3:\n                    label = this.strongText();\n                    meter = {\n                        strength: 'strong',\n                        width: '100%'\n                    };\n                    break;\n\n                default:\n                    label = this.promptText();\n                    meter = null;\n                    break;\n            }\n\n            this.meter = meter;\n            this.infoText = label;\n\n            if (!this.overlayVisible) {\n                this.overlayVisible = true;\n            }\n        }\n    }    \n\n    onMaskToggle() {\n        this.unmasked = !this.unmasked;\n    }\n\n    testStrength(str) {\n        let level = 0;\n\n        if (this.strongCheckRegExp.test(str))\n            level = 3;\n        else if (this.mediumCheckRegExp.test(str))\n            level = 2;\n        else if (str.length)\n            level = 1;\n\n        return level;\n    }\n\n    writeValue(value: any) : void {\n        if (value === undefined)\n            this.value = null;\n        else \n            this.value = value;\n        \n        this.cd.markForCheck();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.input.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.overlayVisible = false;\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    bindResizeListener() {\n        if (!this.resizeListener) {\n            this.resizeListener = () => {\n                if (this.overlayVisible) {\n                    this.overlayVisible = false;\n                }\n            };\n            window.addEventListener('resize', this.resizeListener);\n        }\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    unbindResizeListener() {\n        if (this.resizeListener) {\n            window.removeEventListener('resize', this.resizeListener);\n            this.resizeListener = null;\n        }\n    }\n\n    unbindOutsideClickListener() {\n        if (this.outsideClickListener) {\n            document.removeEventListener('click', this.outsideClickListener);\n            this.outsideClickListener = null;\n        }\n    }\n\n    containerClass() {\n        return {'p-password p-component p-inputwrapper': true,\n            'p-inputwrapper-filled': this.filled(),\n            'p-inputwrapper-focus': this.focused,\n            'p-input-icon-right': this.toggleMask\n        };\n    }\n\n    inputFieldClass() {\n        return {'p-password-input' : true, \n                'p-disabled': this.disabled\n        };\n    }\n\n    toggleIconClass() {\n        return this.unmasked ? 'pi pi-eye-slash' : 'pi pi-eye';\n    }\n\n    strengthClass() {\n        return `p-password-strength ${this.meter ? this.meter.strength : ''}`;\n    }\n\n    filled() {\n        return (this.value != null && this.value.toString().length > 0)\n    }\n\n    promptText() {\n        return this.promptLabel || this.getTranslation(TranslationKeys.PASSWORD_PROMPT);\n    }\n\n    weakText() {\n        return this.weakLabel || this.getTranslation(TranslationKeys.WEAK);\n    }\n\n    mediumText() {\n        return this.mediumLabel || this.getTranslation(TranslationKeys.MEDIUM);\n    }\n\n    strongText() {\n        return this.strongLabel || this.getTranslation(TranslationKeys.STRONG);\n    }\n\n    restoreAppend() {\n        if (this.overlay && this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.removeChild(this.overlay);\n            else\n                document.getElementById(this.appendTo).removeChild(this.overlay);\n        }\n    }\n\n    inputType() {\n        return this.unmasked ? 'text' : 'password';\n    }\n\n    getTranslation(option: string) {\n        return this.config.getTranslation(option);\n    }\n\n    ngOnDestroy() {\n        this.restoreAppend();\n        this.unbindResizeListener();\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, InputTextModule],\n    exports: [PasswordDirective, Password],\n    declarations: [PasswordDirective, Password]\n})\nexport class PasswordModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}