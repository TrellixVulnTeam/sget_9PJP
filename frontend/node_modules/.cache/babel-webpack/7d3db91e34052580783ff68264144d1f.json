{"ast":null,"code":"import _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Output, ContentChild, Input, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as Quill from 'quill';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction Editor_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Editor_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵtemplate(2, Editor_div_1_ng_container_2_Template, 1, 0, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate);\n  }\n}\n\nfunction Editor_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"select\", 6);\n    ɵngcc0.ɵɵelementStart(3, \"option\", 7);\n    ɵngcc0.ɵɵtext(4, \"Heading\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"option\", 8);\n    ɵngcc0.ɵɵtext(6, \"Subheading\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"option\", 9);\n    ɵngcc0.ɵɵtext(8, \"Normal\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"select\", 10);\n    ɵngcc0.ɵɵelementStart(10, \"option\", 9);\n    ɵngcc0.ɵɵtext(11, \"Sans Serif\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(12, \"option\", 11);\n    ɵngcc0.ɵɵtext(13, \"Serif\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(14, \"option\", 12);\n    ɵngcc0.ɵɵtext(15, \"Monospace\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(16, \"span\", 5);\n    ɵngcc0.ɵɵelement(17, \"button\", 13);\n    ɵngcc0.ɵɵelement(18, \"button\", 14);\n    ɵngcc0.ɵɵelement(19, \"button\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(20, \"span\", 5);\n    ɵngcc0.ɵɵelement(21, \"select\", 16);\n    ɵngcc0.ɵɵelement(22, \"select\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(23, \"span\", 5);\n    ɵngcc0.ɵɵelement(24, \"button\", 18);\n    ɵngcc0.ɵɵelement(25, \"button\", 19);\n    ɵngcc0.ɵɵelementStart(26, \"select\", 20);\n    ɵngcc0.ɵɵelement(27, \"option\", 9);\n    ɵngcc0.ɵɵelement(28, \"option\", 21);\n    ɵngcc0.ɵɵelement(29, \"option\", 22);\n    ɵngcc0.ɵɵelement(30, \"option\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(31, \"span\", 5);\n    ɵngcc0.ɵɵelement(32, \"button\", 24);\n    ɵngcc0.ɵɵelement(33, \"button\", 25);\n    ɵngcc0.ɵɵelement(34, \"button\", 26);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(35, \"span\", 5);\n    ɵngcc0.ɵɵelement(36, \"button\", 27);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c0 = [[[\"p-header\"]]];\nvar _c1 = [\"p-header\"];\nvar EDITOR_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return Editor;\n  }),\n  multi: true\n};\n\nvar Editor = /*#__PURE__*/function () {\n  function Editor(el) {\n    _classCallCheck(this, Editor);\n\n    this.el = el;\n    this.onTextChange = new EventEmitter();\n    this.onSelectionChange = new EventEmitter();\n    this.onInit = new EventEmitter();\n\n    this.onModelChange = function () {};\n\n    this.onModelTouched = function () {};\n  }\n\n  _createClass(Editor, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this = this;\n\n      var editorElement = DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-content');\n      var toolbarElement = DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-toolbar');\n      var defaultModule = {\n        toolbar: toolbarElement\n      };\n      var modules = this.modules ? Object.assign(Object.assign({}, defaultModule), this.modules) : defaultModule;\n      this.quill = new Quill(editorElement, {\n        modules: modules,\n        placeholder: this.placeholder,\n        readOnly: this.readonly,\n        theme: 'snow',\n        formats: this.formats,\n        bounds: this.bounds,\n        debug: this.debug,\n        scrollingContainer: this.scrollingContainer\n      });\n\n      if (this.value) {\n        this.quill.setContents(this.quill.clipboard.convert(this.value));\n      }\n\n      this.quill.on('text-change', function (delta, oldContents, source) {\n        if (source === 'user') {\n          var html = editorElement.children[0].innerHTML;\n\n          var text = _this.quill.getText().trim();\n\n          if (html === '<p><br></p>') {\n            html = null;\n          }\n\n          _this.onTextChange.emit({\n            htmlValue: html,\n            textValue: text,\n            delta: delta,\n            source: source\n          });\n\n          _this.onModelChange(html);\n\n          _this.onModelTouched();\n        }\n      });\n      this.quill.on('selection-change', function (range, oldRange, source) {\n        _this.onSelectionChange.emit({\n          range: range,\n          oldRange: oldRange,\n          source: source\n        });\n      });\n      this.onInit.emit({\n        editor: this.quill\n      });\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'header':\n            _this2.headerTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n\n      if (this.quill) {\n        if (value) this.quill.setContents(this.quill.clipboard.convert(value));else this.quill.setText('');\n      }\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n  }, {\n    key: \"getQuill\",\n    value: function getQuill() {\n      return this.quill;\n    }\n  }, {\n    key: \"readonly\",\n    get: function get() {\n      return this._readonly;\n    },\n    set: function set(val) {\n      this._readonly = val;\n\n      if (this.quill) {\n        if (this._readonly) this.quill.disable();else this.quill.enable();\n      }\n    }\n  }]);\n\n  return Editor;\n}();\n\nEditor.ɵfac = function Editor_Factory(t) {\n  return new (t || Editor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nEditor.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Editor,\n  selectors: [[\"p-editor\"]],\n  contentQueries: function Editor_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, Header, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toolbar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  inputs: {\n    readonly: \"readonly\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    placeholder: \"placeholder\",\n    formats: \"formats\",\n    modules: \"modules\",\n    bounds: \"bounds\",\n    scrollingContainer: \"scrollingContainer\",\n    debug: \"debug\"\n  },\n  outputs: {\n    onTextChange: \"onTextChange\",\n    onSelectionChange: \"onSelectionChange\",\n    onInit: \"onInit\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([EDITOR_VALUE_ACCESSOR])],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 6,\n  consts: [[3, \"ngClass\"], [\"class\", \"p-editor-toolbar\", 4, \"ngIf\"], [1, \"p-editor-content\", 3, \"ngStyle\"], [1, \"p-editor-toolbar\"], [4, \"ngTemplateOutlet\"], [1, \"ql-formats\"], [1, \"ql-header\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"selected\", \"\"], [1, \"ql-font\"], [\"value\", \"serif\"], [\"value\", \"monospace\"], [\"aria-label\", \"Bold\", \"type\", \"button\", 1, \"ql-bold\"], [\"aria-label\", \"Italic\", \"type\", \"button\", 1, \"ql-italic\"], [\"aria-label\", \"Underline\", \"type\", \"button\", 1, \"ql-underline\"], [1, \"ql-color\"], [1, \"ql-background\"], [\"value\", \"ordered\", \"aria-label\", \"Ordered List\", \"type\", \"button\", 1, \"ql-list\"], [\"value\", \"bullet\", \"aria-label\", \"Unordered List\", \"type\", \"button\", 1, \"ql-list\"], [1, \"ql-align\"], [\"value\", \"center\"], [\"value\", \"right\"], [\"value\", \"justify\"], [\"aria-label\", \"Insert Link\", \"type\", \"button\", 1, \"ql-link\"], [\"aria-label\", \"Insert Image\", \"type\", \"button\", 1, \"ql-image\"], [\"aria-label\", \"Insert Code Block\", \"type\", \"button\", 1, \"ql-code-block\"], [\"aria-label\", \"Remove Styles\", \"type\", \"button\", 1, \"ql-clean\"]],\n  template: function Editor_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, Editor_div_1_Template, 3, 1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, Editor_div_2_Template, 37, 0, \"div\", 1);\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", \"p-editor-container\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.toolbar || ctx.headerTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.toolbar && !ctx.headerTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgTemplateOutlet],\n  styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{height:auto;width:auto}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nEditor.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nEditor.propDecorators = {\n  onTextChange: [{\n    type: Output\n  }],\n  onSelectionChange: [{\n    type: Output\n  }],\n  toolbar: [{\n    type: ContentChild,\n    args: [Header]\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  formats: [{\n    type: Input\n  }],\n  modules: [{\n    type: Input\n  }],\n  bounds: [{\n    type: Input\n  }],\n  scrollingContainer: [{\n    type: Input\n  }],\n  debug: [{\n    type: Input\n  }],\n  onInit: [{\n    type: Output\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }],\n  readonly: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Editor, [{\n    type: Component,\n    args: [{\n      selector: 'p-editor',\n      template: \"\\n        <div [ngClass]=\\\"'p-editor-container'\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"p-editor-toolbar\\\" *ngIf=\\\"toolbar || headerTemplate\\\">\\n                <ng-content select=\\\"p-header\\\"></ng-content>\\n                <ng-container *ngTemplateOutlet=\\\"headerTemplate\\\"></ng-container>\\n            </div>\\n            <div class=\\\"p-editor-toolbar\\\" *ngIf=\\\"!toolbar && !headerTemplate\\\">\\n                <span class=\\\"ql-formats\\\">\\n                    <select class=\\\"ql-header\\\">\\n                      <option value=\\\"1\\\">Heading</option>\\n                      <option value=\\\"2\\\">Subheading</option>\\n                      <option selected>Normal</option>\\n                    </select>\\n                    <select class=\\\"ql-font\\\">\\n                      <option selected>Sans Serif</option>\\n                      <option value=\\\"serif\\\">Serif</option>\\n                      <option value=\\\"monospace\\\">Monospace</option>\\n                    </select>\\n                </span>\\n                <span class=\\\"ql-formats\\\">\\n                    <button class=\\\"ql-bold\\\" aria-label=\\\"Bold\\\" type=\\\"button\\\"></button>\\n                    <button class=\\\"ql-italic\\\" aria-label=\\\"Italic\\\" type=\\\"button\\\"></button>\\n                    <button class=\\\"ql-underline\\\" aria-label=\\\"Underline\\\" type=\\\"button\\\"></button>\\n                </span>\\n                <span class=\\\"ql-formats\\\">\\n                    <select class=\\\"ql-color\\\"></select>\\n                    <select class=\\\"ql-background\\\"></select>\\n                </span>\\n                <span class=\\\"ql-formats\\\">\\n                    <button class=\\\"ql-list\\\" value=\\\"ordered\\\" aria-label=\\\"Ordered List\\\" type=\\\"button\\\"></button>\\n                    <button class=\\\"ql-list\\\" value=\\\"bullet\\\" aria-label=\\\"Unordered List\\\" type=\\\"button\\\"></button>\\n                    <select class=\\\"ql-align\\\">\\n                        <option selected></option>\\n                        <option value=\\\"center\\\"></option>\\n                        <option value=\\\"right\\\"></option>\\n                        <option value=\\\"justify\\\"></option>\\n                    </select>\\n                </span>\\n                <span class=\\\"ql-formats\\\">\\n                    <button class=\\\"ql-link\\\" aria-label=\\\"Insert Link\\\" type=\\\"button\\\"></button>\\n                    <button class=\\\"ql-image\\\" aria-label=\\\"Insert Image\\\" type=\\\"button\\\"></button>\\n                    <button class=\\\"ql-code-block\\\" aria-label=\\\"Insert Code Block\\\" type=\\\"button\\\"></button>\\n                </span>\\n                <span class=\\\"ql-formats\\\">\\n                    <button class=\\\"ql-clean\\\" aria-label=\\\"Remove Styles\\\" type=\\\"button\\\"></button>\\n                </span>\\n            </div>\\n            <div class=\\\"p-editor-content\\\" [ngStyle]=\\\"style\\\"></div>\\n        </div>\\n    \",\n      providers: [EDITOR_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{height:auto;width:auto}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    onTextChange: [{\n      type: Output\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    onInit: [{\n      type: Output\n    }],\n    readonly: [{\n      type: Input\n    }],\n    toolbar: [{\n      type: ContentChild,\n      args: [Header]\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar EditorModule = function EditorModule() {\n  _classCallCheck(this, EditorModule);\n};\n\nEditorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: EditorModule\n});\nEditorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function EditorModule_Factory(t) {\n    return new (t || EditorModule)();\n  },\n  imports: [[CommonModule], SharedModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EditorModule, {\n    declarations: function declarations() {\n      return [Editor];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [Editor, SharedModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Editor, SharedModule],\n      declarations: [Editor]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { EDITOR_VALUE_ACCESSOR, Editor, EditorModule };","map":{"version":3,"sources":["../../src/app/components/editor/editor.ts","../../src/app/components/editor/primeng-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewInit,Input,Output,EventEmitter,ContentChild,forwardRef,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, QueryList, AfterContentInit, TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Header, PrimeTemplate} from 'primeng/api'\nimport {DomHandler} from 'primeng/dom';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport * as Quill from \"quill\";\n\nexport const EDITOR_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Editor),\n  multi: true\n};\n\n@Component({\n    selector: 'p-editor',\n    template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                      <option value=\"1\">Heading</option>\n                      <option value=\"2\">Subheading</option>\n                      <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                      <option selected>Sans Serif</option>\n                      <option value=\"serif\">Serif</option>\n                      <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\"></option>\n                        <option value=\"right\"></option>\n                        <option value=\"justify\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `,\n    providers: [EDITOR_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./editor.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class Editor implements AfterViewInit,AfterContentInit,ControlValueAccessor {\n        \n    @Output() onTextChange: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onSelectionChange: EventEmitter<any> = new EventEmitter();\n    \n    @ContentChild(Header) toolbar;\n    \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n    \n    @Input() placeholder: string;\n    \n    @Input() formats: string[];\n\n    @Input() modules: any;\n\n    @Input() bounds: any;\n\n    @Input() scrollingContainer: any;\n\n    @Input() debug: string;\n    \n    @Output() onInit: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n    \n    value: string;\n    \n    _readonly: boolean;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    quill: any;\n\n    headerTemplate: TemplateRef<any>;\n    \n    constructor(public el: ElementRef) {}\n\n    ngAfterViewInit() {\n        let editorElement = DomHandler.findSingle(this.el.nativeElement ,'div.p-editor-content'); \n        let toolbarElement = DomHandler.findSingle(this.el.nativeElement ,'div.p-editor-toolbar'); \n        let defaultModule  = {toolbar: toolbarElement};\n        let modules = this.modules ? {...defaultModule, ...this.modules} : defaultModule;\n\n        this.quill = new Quill(editorElement, {\n            modules: modules,\n            placeholder: this.placeholder,\n            readOnly: this.readonly,\n            theme: 'snow',\n            formats: this.formats,\n            bounds: this.bounds,\n            debug: this.debug,\n            scrollingContainer: this.scrollingContainer\n        });\n                \n        if (this.value) {\n            this.quill.setContents(this.quill.clipboard.convert(this.value));\n        }\n        \n        this.quill.on('text-change', (delta, oldContents, source) => {\n            if (source === 'user') {\n                let html = editorElement.children[0].innerHTML;\n                let text = this.quill.getText().trim();\n                if (html === '<p><br></p>') {\n                    html = null;\n                }\n\n                this.onTextChange.emit({\n                    htmlValue: html,\n                    textValue: text,\n                    delta: delta,\n                    source: source\n                });\n                \n                this.onModelChange(html);\n                this.onModelTouched();\n            }\n        });\n        \n        this.quill.on('selection-change', (range, oldRange, source) => {\n            this.onSelectionChange.emit({\n                range: range,\n                oldRange: oldRange,\n                source: source\n            });\n        });\n        \n        this.onInit.emit({\n            editor: this.quill\n        });\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n            }\n        });\n    }\n        \n    writeValue(value: any) : void {\n        this.value = value;\n                \n        if (this.quill) {\n            if (value)\n                this.quill.setContents(this.quill.clipboard.convert(value));\n            else\n                this.quill.setText('');\n        }\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    getQuill() {\n        return this.quill;\n    }\n    \n    @Input() get readonly(): boolean {\n        return this._readonly;\n    }\n\n    set readonly(val:boolean) {\n        this._readonly = val;\n        \n        if (this.quill) {\n            if (this._readonly)\n                this.quill.disable();\n            else\n                this.quill.enable();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Editor,SharedModule],\n    declarations: [Editor]\n})\nexport class EditorModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}