{"ast":null,"code":"'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar platform = require('../platforms/platform');\n\nmodule.exports = function (Chart) {\n  var plugins = Chart.plugins; // Create a dictionary of chart types, to allow for extension of existing types\n\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options; // Update Scale(s) with options\n\n    if (newOptions.scale) {\n      chart.scale.options = newOptions.scale;\n    } else if (newOptions.scales) {\n      newOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function (scaleOptions) {\n        chart.scales[scaleOptions.id].options = scaleOptions;\n      });\n    } // Tooltip\n\n\n    chart.tooltip._options = newOptions.tooltips;\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      Chart.animationService.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update(me.options.responsiveAnimationDuration);\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildScales: function buildScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales = {};\n      var items = [];\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n        var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\n        if (!scaleClass) {\n          return;\n        }\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        var scale = new scaleClass({\n          id: scaleOptions.id,\n          options: scaleOptions,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      });\n      Chart.scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      helpers.each(newControllers, function (controller) {\n        controller.reset();\n      });\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      Chart.layoutService.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Chart.Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        Chart.animationService.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Chart.Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Chart.Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e);\n      changed |= tooltip && tooltip.handleEvent(e);\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render(me.options.hover.animationDuration, true);\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","map":{"version":3,"sources":["/home/basis/TCC/codificacao/frontend/node_modules/chart.js/src/core/core.controller.js"],"names":["defaults","require","helpers","Interaction","platform","module","exports","Chart","plugins","types","instances","controllers","initConfig","config","data","datasets","labels","options","configMerge","global","type","updateConfig","chart","newOptions","scale","scales","xAxes","concat","yAxes","forEach","scaleOptions","id","tooltip","_options","tooltips","positionIsHorizontal","position","extend","prototype","construct","item","me","context","acquireContext","canvas","height","width","uid","ctx","aspectRatio","_bufferedRender","controller","Object","defineProperty","get","set","value","console","error","initialize","update","notify","retinaScale","devicePixelRatio","bindEvents","responsive","resize","ensureScalesHaveIDs","buildScales","initToolTip","clear","stop","animationService","cancelAnimation","silent","maintainAspectRatio","newWidth","Math","max","floor","getMaximumWidth","newHeight","getMaximumHeight","style","newSize","onResize","responsiveAnimationDuration","scalesOptions","each","xAxisOptions","index","yAxisOptions","items","map","dtype","dposition","push","isDefault","scaleType","valueOrDefault","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","addScalesToLayout","buildOrUpdateControllers","newControllers","dataset","datasetIndex","meta","getDatasetMeta","destroyDatasetMeta","updateIndex","ControllerClass","undefined","Error","resetElements","reset","duration","lazy","arguments","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","easing","render","layoutService","i","ilen","length","updateDataset","args","animationOptions","animation","onComplete","callback","Animation","numSteps","animationObject","easingFunction","effects","currentStep","stepDecimal","draw","onAnimationProgress","onProgress","onAnimationComplete","addAnimation","easingValue","isNullOrUndef","transition","boxes","box","chartArea","drawDatasets","_drawTooltip","isDatasetVisible","drawDataset","getElementAtEvent","e","modes","single","getElementsAtEvent","label","intersect","getElementsAtXAxis","getElementsAtEventForMode","mode","method","getDatasetAtEvent","_meta","hidden","xAxisID","yAxisID","getVisibleDatasetCount","count","generateLegend","legendCallback","destroy","unbindEvents","releaseContext","toBase64Image","toDataURL","apply","Tooltip","_chart","_chartInstance","listeners","_listeners","listener","eventHandler","events","addEventListener","removeEventListener","updateHoverStyle","elements","enabled","element","_datasetIndex","changed","handleEvent","bufferedRequest","animating","hover","animationDuration","hoverOptions","active","onHover","native","onClick","call","arrayEquals","Controller"],"mappings":"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","sourcesContent":["'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar platform = require('../platforms/platform');\n\nmodule.exports = function(Chart) {\n\tvar plugins = Chart.plugins;\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\t// Update Scale(s) with options\n\t\tif (newOptions.scale) {\n\t\t\tchart.scale.options = newOptions.scale;\n\t\t} else if (newOptions.scales) {\n\t\t\tnewOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {\n\t\t\t\tchart.scales[scaleOptions.id].options = scaleOptions;\n\t\t\t});\n\t\t}\n\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales = {};\n\t\t\tvar items = [];\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tvar scale = new scaleClass({\n\t\t\t\t\tid: scaleOptions.id,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tChart.layoutService.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\tchanged |= tooltip && tooltip.handleEvent(e);\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n"]},"metadata":{},"sourceType":"script"}