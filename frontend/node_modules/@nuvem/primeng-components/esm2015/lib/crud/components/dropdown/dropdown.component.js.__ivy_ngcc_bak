import { Component, Input, Output, EventEmitter } from "@angular/core";
import { provideValueAccessor } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
export class DropdownComponent extends FieldComponent {
    constructor() {
        super(...arguments);
        this.virtualScroll = false;
        this.filter = false;
        this.itemSize = 30;
        this.options = [];
        this.onChange = new EventEmitter();
    }
    ngOnInit() {
        super.ngOnInit();
        if (this.service) {
            this.service.findAll(null).subscribe(data => {
                this.options = data;
            });
        }
    }
    onChangeEvent(event) {
        this.onChange.emit(event);
    }
    outerToInner(value) {
        if (value && value.id) {
            this.service.find(value.id).subscribe((data) => {
                this.formControl.setValue(data);
            });
        }
        return value;
    }
}
DropdownComponent.decorators = [
    { type: Component, args: [{
                selector: "[nDropdown]",
                template: "<span #notification form-notification class=\"p-float-label custom-select\" [name]=\"name\" [form]=\"form\">\n    <p-dropdown #input\n        [formControl]=\"formControl\"\n        [optionLabel]=\"optionLabel\"\n        [options]=\"options\"\n        [filter]=\"filter\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onChange)=\"onChangeEvent($event)\">\n    </p-dropdown>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [provideValueAccessor(DropdownComponent)]
            },] }
];
DropdownComponent.propDecorators = {
    optionLabel: [{ type: Input }],
    virtualScroll: [{ type: Input }],
    filter: [{ type: Input }],
    itemSize: [{ type: Input }],
    service: [{ type: Input }],
    options: [{ type: Input }],
    onChange: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcHJpbWVuZy1jb21wb25lbnRzL3NyYy9saWIvY3J1ZC9jb21wb25lbnRzL2Ryb3Bkb3duL2Ryb3Bkb3duLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBaUIsTUFBTSxFQUFFLFlBQVksRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUM5RixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFRcEQsTUFBTSxPQUFPLGlCQUFrQixTQUFRLGNBQW1CO0lBTDFEOztRQVNhLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBRXRCLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFFZixhQUFRLEdBQUcsRUFBRSxDQUFDO1FBSWQsWUFBTyxHQUFVLEVBQUUsQ0FBQztRQUVuQixhQUFRLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUF5QnBFLENBQUM7SUF2QkcsUUFBUTtRQUNKLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVqQixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZCxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3hDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQ3hCLENBQUMsQ0FBQyxDQUFDO1NBQ047SUFDTCxDQUFDO0lBRUQsYUFBYSxDQUFDLEtBQUs7UUFDZixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRVMsWUFBWSxDQUFDLEtBQVU7UUFDN0IsSUFBSSxLQUFLLElBQUksS0FBSyxDQUFDLEVBQUUsRUFBRTtZQUNuQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7Z0JBQzNDLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3BDLENBQUMsQ0FBQyxDQUFDO1NBQ047UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDOzs7WUExQ0osU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxhQUFhO2dCQUN2QixxbkJBQXdDO2dCQUN4QyxTQUFTLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO2FBQ3ZEOzs7MEJBR0ksS0FBSzs0QkFFTCxLQUFLO3FCQUVMLEtBQUs7dUJBRUwsS0FBSztzQkFFTCxLQUFLO3NCQUVMLEtBQUs7dUJBRUwsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEFmdGVyVmlld0luaXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgcHJvdmlkZVZhbHVlQWNjZXNzb3IgfSBmcm9tIFwiQG51dmVtL2FuZ3VsYXItYmFzZVwiO1xuaW1wb3J0IHsgRmllbGRDb21wb25lbnQgfSBmcm9tIFwiLi4vZmllbGQuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBDcnVkU2VydmljZSB9IGZyb20gXCIuLi8uLi9jcnVkLXNlcnZpY2Uuc2VydmljZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJbbkRyb3Bkb3duXVwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vZHJvcGRvd24uY29tcG9uZW50Lmh0bWxcIixcbiAgICBwcm92aWRlcnM6IFtwcm92aWRlVmFsdWVBY2Nlc3NvcihEcm9wZG93bkNvbXBvbmVudCldLFxufSlcbmV4cG9ydCBjbGFzcyBEcm9wZG93bkNvbXBvbmVudCBleHRlbmRzIEZpZWxkQ29tcG9uZW50PGFueT4gaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkluaXQge1xuXG4gICAgQElucHV0KCkgb3B0aW9uTGFiZWw6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIHZpcnR1YWxTY3JvbGwgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpIGZpbHRlciA9IGZhbHNlO1xuXG4gICAgQElucHV0KCkgaXRlbVNpemUgPSAzMDtcblxuICAgIEBJbnB1dCgpIHNlcnZpY2U6IENydWRTZXJ2aWNlPGFueSwgYW55PjtcblxuICAgIEBJbnB1dCgpIG9wdGlvbnM6IGFueVtdID0gW107XG5cbiAgICBAT3V0cHV0KCkgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIubmdPbkluaXQoKTtcblxuICAgICAgICBpZiAodGhpcy5zZXJ2aWNlKSB7XG4gICAgICAgICAgICB0aGlzLnNlcnZpY2UuZmluZEFsbChudWxsKS5zdWJzY3JpYmUoZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zID0gZGF0YTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25DaGFuZ2VFdmVudChldmVudCk6IHZvaWQge1xuICAgICAgICB0aGlzLm9uQ2hhbmdlLmVtaXQoZXZlbnQpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvdXRlclRvSW5uZXIodmFsdWU6IGFueSk6IGFueSB7XG4gICAgICAgIGlmICh2YWx1ZSAmJiB2YWx1ZS5pZCkge1xuICAgICAgICAgICAgdGhpcy5zZXJ2aWNlLmZpbmQodmFsdWUuaWQpLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZm9ybUNvbnRyb2wuc2V0VmFsdWUoZGF0YSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuXG59XG4iXX0=