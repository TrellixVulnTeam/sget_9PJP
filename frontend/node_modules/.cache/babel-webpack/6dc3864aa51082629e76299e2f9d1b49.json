{"ast":null,"code":"import _classCallCheck from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nvar ProgressSpinner = function ProgressSpinner() {\n  _classCallCheck(this, ProgressSpinner);\n\n  this.strokeWidth = \"2\";\n  this.fill = \"none\";\n  this.animationDuration = \"2s\";\n};\n\nProgressSpinner.ɵfac = function ProgressSpinner_Factory(t) {\n  return new (t || ProgressSpinner)();\n};\n\nProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ProgressSpinner,\n  selectors: [[\"p-progressSpinner\"]],\n  inputs: {\n    strokeWidth: \"strokeWidth\",\n    fill: \"fill\",\n    animationDuration: \"animationDuration\",\n    style: \"style\",\n    styleClass: \"styleClass\"\n  },\n  decls: 3,\n  vars: 6,\n  consts: [[\"role\", \"alert\", \"aria-busy\", \"true\", 1, \"p-progress-spinner\", 3, \"ngStyle\", \"ngClass\"], [\"viewBox\", \"25 25 50 50\", 1, \"p-progress-spinner-svg\"], [\"cx\", \"50\", \"cy\", \"50\", \"r\", \"20\", \"stroke-miterlimit\", \"10\", 1, \"p-progress-spinner-circle\"]],\n  template: function ProgressSpinner_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵnamespaceSVG();\n      ɵngcc0.ɵɵelementStart(1, \"svg\", 1);\n      ɵngcc0.ɵɵelement(2, \"circle\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ctx.styleClass);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleProp(\"animation-duration\", ctx.animationDuration);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵattribute(\"fill\", ctx.fill)(\"stroke-width\", ctx.strokeWidth);\n    }\n  },\n  directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass],\n  styles: [\".p-progress-spinner{display:inline-block;height:100px;margin:0 auto;position:relative;width:100px}.p-progress-spinner:before{content:\\\"\\\";display:block;padding-top:100%}.p-progress-spinner-svg{animation:p-progress-spinner-rotate 2s linear infinite;bottom:0;height:100%;left:0;margin:auto;position:absolute;right:0;top:0;transform-origin:center center;width:100%}.p-progress-spinner-circle{animation:p-progress-spinner-dash 1.5s ease-in-out infinite,p-progress-spinner-color 6s ease-in-out infinite;stroke:#d62d20;stroke-dasharray:89,200;stroke-dashoffset:0;stroke-linecap:round}@keyframes p-progress-spinner-rotate{to{transform:rotate(1turn)}}@keyframes p-progress-spinner-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35px}to{stroke-dasharray:89,200;stroke-dashoffset:-124px}}@keyframes p-progress-spinner-color{0%,to{stroke:#d62d20}40%{stroke:#0057e7}66%{stroke:#008744}80%,90%{stroke:#ffa700}}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nProgressSpinner.propDecorators = {\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  strokeWidth: [{\n    type: Input\n  }],\n  fill: [{\n    type: Input\n  }],\n  animationDuration: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProgressSpinner, [{\n    type: Component,\n    args: [{\n      selector: 'p-progressSpinner',\n      template: \"\\n        <div class=\\\"p-progress-spinner\\\" [ngStyle]=\\\"style\\\" [ngClass]=\\\"styleClass\\\"  role=\\\"alert\\\" aria-busy=\\\"true\\\">\\n            <svg class=\\\"p-progress-spinner-svg\\\" viewBox=\\\"25 25 50 50\\\" [style.animation-duration]=\\\"animationDuration\\\">\\n                <circle class=\\\"p-progress-spinner-circle\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" [attr.fill]=\\\"fill\\\" [attr.stroke-width]=\\\"strokeWidth\\\" stroke-miterlimit=\\\"10\\\"/>\\n            </svg>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-progress-spinner{display:inline-block;height:100px;margin:0 auto;position:relative;width:100px}.p-progress-spinner:before{content:\\\"\\\";display:block;padding-top:100%}.p-progress-spinner-svg{animation:p-progress-spinner-rotate 2s linear infinite;bottom:0;height:100%;left:0;margin:auto;position:absolute;right:0;top:0;transform-origin:center center;width:100%}.p-progress-spinner-circle{animation:p-progress-spinner-dash 1.5s ease-in-out infinite,p-progress-spinner-color 6s ease-in-out infinite;stroke:#d62d20;stroke-dasharray:89,200;stroke-dashoffset:0;stroke-linecap:round}@keyframes p-progress-spinner-rotate{to{transform:rotate(1turn)}}@keyframes p-progress-spinner-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35px}to{stroke-dasharray:89,200;stroke-dashoffset:-124px}}@keyframes p-progress-spinner-color{0%,to{stroke:#d62d20}40%{stroke:#0057e7}66%{stroke:#008744}80%,90%{stroke:#ffa700}}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    strokeWidth: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ProgressSpinnerModule = function ProgressSpinnerModule() {\n  _classCallCheck(this, ProgressSpinnerModule);\n};\n\nProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ProgressSpinnerModule\n});\nProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ProgressSpinnerModule_Factory(t) {\n    return new (t || ProgressSpinnerModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ProgressSpinnerModule, {\n    declarations: function declarations() {\n      return [ProgressSpinner];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [ProgressSpinner];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProgressSpinnerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [ProgressSpinner],\n      declarations: [ProgressSpinner]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ProgressSpinner, ProgressSpinnerModule };","map":{"version":3,"sources":["../../src/app/components/progressspinner/progressspinner.ts","../../src/app/components/progressspinner/primeng-progressspinner.ts"],"names":[],"mappings":";;;;;;IAgBa,e,GAbb,2BAAA;AAAA;;AAmBa,OAAA,WAAA,GAAsB,GAAtB;AAEA,OAAA,IAAA,GAAe,MAAf;AAEA,OAAA,iBAAA,GAA4B,IAA5B;AAEZ,C;;gCAzBA,uB,CAAS,C,EAAA;AAAC,SAAA,KAAA,CAAA,IAAA,eAAA,GAAA;AACG,C;;AAAmB,eAAA,CAAA,IAAA,GAAA,MAC7B,CAAA,iBAD6B,CACnB;AAAA,EAAA,IAAA,EAAA,eAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,mBAAA,CAAA,CAAA;AAAA,EAAA,MAAA,EAAA;AAAA,IAAA,WAAA,EAAA,aAAA;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,iBAAA,EAAA,mBAAA;AAAA,IAAA,KAAA,EAAA,OAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAAA;AAAA,EAAA,KAAA,EAAA,CAAA;AAAA,EAAA,IAAA,EAAA,CAAA;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,OAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,EAAA,oBAAA,EAAA,CAAA,EAAA,SAAA,EAAA,SAAA,CAAA,EAAA,CAAA,SAAA,EAAA,aAAA,EAAA,CAAA,EAAA,wBAAA,CAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,mBAAA,EAMT,IANS,EAMT,CANS,EAOV,2BAPU,CAAA,CAAA;AAOO,EAAA,QAAwB,EAAA,SAAM,wBAAN,CACzC,EADyC,EAC1B,GAD0B,EAC1B;AAAA,QAAA,EAAA,GAAiB,CAAjB,EAAkB;AAAI,MAAA,MAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;;;;;;;;;;;;;;;GAR3B;8CAAA;WAUb,s7B,CAVa;AAUb,EAAA,aAAA,EAAA,CAVa;AAUb,EAAA,eAAA,EAAA;AAVa,CADmB,CAAA;AAY3B,eAAA,CAAA,cAAA,GAAA;AAEG,EAAA,KAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAAJ;AAAI,GAAA,CAFH;AAES,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA,CAFT;AAIS,EAAA,WAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA,CAJT;AAMS,EAAA,IAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA,CANT;AAQS,EAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA;AART,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUU,C;;IASH,qB;;;;oCALZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACU,qBAAgB,CAAA,IAAhB,GAAgB,MAAA,CAAA,gBAAA,CACb;AAAA,EAAA,OAAA,EAAgB,SAAA,6BAAA,CACX,CADW,EACX;AAAA,WAAgB,KAAA,CAAA,IAAA,qBAAA,GAAhB;AAClB,GAFa;AAEb,EAAA,OAAA,EAAA,CAAA,CAAA,YAAA,CAAA;AAFa,CADa,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;AAIN,C;ACnCL;AACA;AACA;;;AAEA,SAAA,eAAA,EAAA,qBAAA","sourcesContent":["import {NgModule,Component,Input,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n    selector: 'p-progressSpinner',\n    template: `\n        <div class=\"p-progress-spinner\" [ngStyle]=\"style\" [ngClass]=\"styleClass\"  role=\"alert\" aria-busy=\"true\">\n            <svg class=\"p-progress-spinner-svg\" viewBox=\"25 25 50 50\" [style.animation-duration]=\"animationDuration\">\n                <circle class=\"p-progress-spinner-circle\" cx=\"50\" cy=\"50\" r=\"20\" [attr.fill]=\"fill\" [attr.stroke-width]=\"strokeWidth\" stroke-miterlimit=\"10\"/>\n            </svg>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./progressspinner.css']\n})\nexport class ProgressSpinner {\n\n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() strokeWidth: string = \"2\";\n    \n    @Input() fill: string = \"none\";\n    \n    @Input() animationDuration: string = \"2s\";\n    \n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ProgressSpinner],\n    declarations: [ProgressSpinner]\n})\nexport class ProgressSpinnerModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}