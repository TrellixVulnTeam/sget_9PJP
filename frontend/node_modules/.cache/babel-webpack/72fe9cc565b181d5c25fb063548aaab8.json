{"ast":null,"code":"import _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, ChangeDetectorRef, Input, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate } from 'primeng/api';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"container\"];\nvar _c1 = [\"content\"];\nvar _c2 = [\"xBar\"];\nvar _c3 = [\"yBar\"];\n\nfunction ScrollPanel_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c4 = [\"*\"];\n\nvar ScrollPanel = /*#__PURE__*/function () {\n  function ScrollPanel(el, zone, cd) {\n    _classCallCheck(this, ScrollPanel);\n\n    this.el = el;\n    this.zone = zone;\n    this.cd = cd;\n\n    this.timeoutFrame = function (fn) {\n      return setTimeout(fn, 0);\n    };\n  }\n\n  _createClass(ScrollPanel, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this = this;\n\n      this.zone.runOutsideAngular(function () {\n        _this.moveBar();\n\n        _this.moveBar = _this.moveBar.bind(_this);\n        _this.onXBarMouseDown = _this.onXBarMouseDown.bind(_this);\n        _this.onYBarMouseDown = _this.onYBarMouseDown.bind(_this);\n        _this.onDocumentMouseMove = _this.onDocumentMouseMove.bind(_this);\n        _this.onDocumentMouseUp = _this.onDocumentMouseUp.bind(_this);\n        window.addEventListener('resize', _this.moveBar);\n\n        _this.contentViewChild.nativeElement.addEventListener('scroll', _this.moveBar);\n\n        _this.contentViewChild.nativeElement.addEventListener('mouseenter', _this.moveBar);\n\n        _this.xBarViewChild.nativeElement.addEventListener('mousedown', _this.onXBarMouseDown);\n\n        _this.yBarViewChild.nativeElement.addEventListener('mousedown', _this.onYBarMouseDown);\n\n        _this.calculateContainerHeight();\n\n        _this.initialized = true;\n      });\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'content':\n            _this2.contentTemplate = item.template;\n            break;\n\n          default:\n            _this2.contentTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"calculateContainerHeight\",\n    value: function calculateContainerHeight() {\n      var container = this.containerViewChild.nativeElement;\n      var content = this.contentViewChild.nativeElement;\n      var xBar = this.xBarViewChild.nativeElement;\n      var containerStyles = getComputedStyle(container),\n          xBarStyles = getComputedStyle(xBar),\n          pureContainerHeight = DomHandler.getHeight(container) - parseInt(xBarStyles['height'], 10);\n\n      if (containerStyles['max-height'] != \"none\" && pureContainerHeight == 0) {\n        if (content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\n          container.style.height = containerStyles['max-height'];\n        } else {\n          container.style.height = content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + \"px\";\n        }\n      }\n    }\n  }, {\n    key: \"moveBar\",\n    value: function moveBar() {\n      var _this3 = this;\n\n      var container = this.containerViewChild.nativeElement;\n      var content = this.contentViewChild.nativeElement;\n      /* horizontal scroll */\n\n      var xBar = this.xBarViewChild.nativeElement;\n      var totalWidth = content.scrollWidth;\n      var ownWidth = content.clientWidth;\n      var bottom = (container.clientHeight - xBar.clientHeight) * -1;\n      this.scrollXRatio = ownWidth / totalWidth;\n      /* vertical scroll */\n\n      var yBar = this.yBarViewChild.nativeElement;\n      var totalHeight = content.scrollHeight;\n      var ownHeight = content.clientHeight;\n      var right = (container.clientWidth - yBar.clientWidth) * -1;\n      this.scrollYRatio = ownHeight / totalHeight;\n      this.requestAnimationFrame(function () {\n        if (_this3.scrollXRatio >= 1) {\n          DomHandler.addClass(xBar, 'p-scrollpanel-hidden');\n        } else {\n          DomHandler.removeClass(xBar, 'p-scrollpanel-hidden');\n          var xBarWidth = Math.max(_this3.scrollXRatio * 100, 10);\n          var xBarLeft = content.scrollLeft * (100 - xBarWidth) / (totalWidth - ownWidth);\n          xBar.style.cssText = 'width:' + xBarWidth + '%; left:' + xBarLeft + '%;bottom:' + bottom + 'px;';\n        }\n\n        if (_this3.scrollYRatio >= 1) {\n          DomHandler.addClass(yBar, 'p-scrollpanel-hidden');\n        } else {\n          DomHandler.removeClass(yBar, 'p-scrollpanel-hidden');\n          var yBarHeight = Math.max(_this3.scrollYRatio * 100, 10);\n          var yBarTop = content.scrollTop * (100 - yBarHeight) / (totalHeight - ownHeight);\n          yBar.style.cssText = 'height:' + yBarHeight + '%; top: calc(' + yBarTop + '% - ' + xBar.clientHeight + 'px);right:' + right + 'px;';\n        }\n      });\n    }\n  }, {\n    key: \"onYBarMouseDown\",\n    value: function onYBarMouseDown(e) {\n      this.isYBarClicked = true;\n      this.lastPageY = e.pageY;\n      DomHandler.addClass(this.yBarViewChild.nativeElement, 'p-scrollpanel-grabbed');\n      DomHandler.addClass(document.body, 'p-scrollpanel-grabbed');\n      document.addEventListener('mousemove', this.onDocumentMouseMove);\n      document.addEventListener('mouseup', this.onDocumentMouseUp);\n      e.preventDefault();\n    }\n  }, {\n    key: \"onXBarMouseDown\",\n    value: function onXBarMouseDown(e) {\n      this.isXBarClicked = true;\n      this.lastPageX = e.pageX;\n      DomHandler.addClass(this.xBarViewChild.nativeElement, 'p-scrollpanel-grabbed');\n      DomHandler.addClass(document.body, 'p-scrollpanel-grabbed');\n      document.addEventListener('mousemove', this.onDocumentMouseMove);\n      document.addEventListener('mouseup', this.onDocumentMouseUp);\n      e.preventDefault();\n    }\n  }, {\n    key: \"onDocumentMouseMove\",\n    value: function onDocumentMouseMove(e) {\n      if (this.isXBarClicked) {\n        this.onMouseMoveForXBar(e);\n      } else if (this.isYBarClicked) {\n        this.onMouseMoveForYBar(e);\n      } else {\n        this.onMouseMoveForXBar(e);\n        this.onMouseMoveForYBar(e);\n      }\n    }\n  }, {\n    key: \"onMouseMoveForXBar\",\n    value: function onMouseMoveForXBar(e) {\n      var _this4 = this;\n\n      var deltaX = e.pageX - this.lastPageX;\n      this.lastPageX = e.pageX;\n      this.requestAnimationFrame(function () {\n        _this4.contentViewChild.nativeElement.scrollLeft += deltaX / _this4.scrollXRatio;\n      });\n    }\n  }, {\n    key: \"onMouseMoveForYBar\",\n    value: function onMouseMoveForYBar(e) {\n      var _this5 = this;\n\n      var deltaY = e.pageY - this.lastPageY;\n      this.lastPageY = e.pageY;\n      this.requestAnimationFrame(function () {\n        _this5.contentViewChild.nativeElement.scrollTop += deltaY / _this5.scrollYRatio;\n      });\n    }\n  }, {\n    key: \"scrollTop\",\n    value: function scrollTop(_scrollTop) {\n      var scrollableHeight = this.contentViewChild.nativeElement.scrollHeight - this.contentViewChild.nativeElement.clientHeight;\n      _scrollTop = _scrollTop > scrollableHeight ? scrollableHeight : _scrollTop > 0 ? _scrollTop : 0;\n      this.contentViewChild.nativeElement.scrollTop = _scrollTop;\n    }\n  }, {\n    key: \"onDocumentMouseUp\",\n    value: function onDocumentMouseUp(e) {\n      DomHandler.removeClass(this.yBarViewChild.nativeElement, 'p-scrollpanel-grabbed');\n      DomHandler.removeClass(this.xBarViewChild.nativeElement, 'p-scrollpanel-grabbed');\n      DomHandler.removeClass(document.body, 'p-scrollpanel-grabbed');\n      document.removeEventListener('mousemove', this.onDocumentMouseMove);\n      document.removeEventListener('mouseup', this.onDocumentMouseUp);\n      this.isXBarClicked = false;\n      this.isYBarClicked = false;\n    }\n  }, {\n    key: \"requestAnimationFrame\",\n    value: function requestAnimationFrame(f) {\n      var frame = window.requestAnimationFrame || this.timeoutFrame;\n      frame(f);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.initialized) {\n        window.removeEventListener('resize', this.moveBar);\n        this.contentViewChild.nativeElement.removeEventListener('scroll', this.moveBar);\n        this.contentViewChild.nativeElement.removeEventListener('mouseenter', this.moveBar);\n        this.xBarViewChild.nativeElement.removeEventListener('mousedown', this.onXBarMouseDown);\n        this.yBarViewChild.nativeElement.removeEventListener('mousedown', this.onYBarMouseDown);\n      }\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.moveBar();\n    }\n  }]);\n\n  return ScrollPanel;\n}();\n\nScrollPanel.ɵfac = function ScrollPanel_Factory(t) {\n  return new (t || ScrollPanel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nScrollPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ScrollPanel,\n  selectors: [[\"p-scrollPanel\"]],\n  contentQueries: function ScrollPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function ScrollPanel_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n      ɵngcc0.ɵɵviewQuery(_c1, 1);\n      ɵngcc0.ɵɵviewQuery(_c2, 1);\n      ɵngcc0.ɵɵviewQuery(_c3, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.xBarViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yBarViewChild = _t.first);\n    }\n  },\n  inputs: {\n    style: \"style\",\n    styleClass: \"styleClass\"\n  },\n  ngContentSelectors: _c4,\n  decls: 11,\n  vars: 5,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [1, \"p-scrollpanel-wrapper\"], [1, \"p-scrollpanel-content\"], [\"content\", \"\"], [4, \"ngTemplateOutlet\"], [1, \"p-scrollpanel-bar\", \"p-scrollpanel-bar-x\"], [\"xBar\", \"\"], [1, \"p-scrollpanel-bar\", \"p-scrollpanel-bar-y\"], [\"yBar\", \"\"]],\n  template: function ScrollPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n      ɵngcc0.ɵɵprojection(5);\n      ɵngcc0.ɵɵtemplate(6, ScrollPanel_ng_container_6_Template, 1, 0, \"ng-container\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(7, \"div\", 6, 7);\n      ɵngcc0.ɵɵelement(9, \"div\", 8, 9);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", \"p-scrollpanel p-component\")(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(6);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgTemplateOutlet],\n  styles: [\".p-scrollpanel-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.p-scrollpanel-content{box-sizing:border-box;height:calc(100% + 18px);overflow:auto;padding:0 18px 18px 0;position:relative;width:calc(100% + 18px)}.p-scrollpanel-bar{background:#c1c1c1;border-radius:3px;cursor:pointer;opacity:0;position:relative;transition:opacity .25s linear;z-index:2}.p-scrollpanel-bar-y{top:0;width:9px}.p-scrollpanel-bar-x{bottom:0;height:9px}.p-scrollpanel-hidden{visibility:hidden}.p-scrollpanel:active .p-scrollpanel-bar,.p-scrollpanel:hover .p-scrollpanel-bar{opacity:1}.p-scrollpanel-grabbed{-ms-user-select:none;-webkit-user-select:none;user-select:none}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nScrollPanel.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nScrollPanel.propDecorators = {\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  containerViewChild: [{\n    type: ViewChild,\n    args: ['container']\n  }],\n  contentViewChild: [{\n    type: ViewChild,\n    args: ['content']\n  }],\n  xBarViewChild: [{\n    type: ViewChild,\n    args: ['xBar']\n  }],\n  yBarViewChild: [{\n    type: ViewChild,\n    args: ['yBar']\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollPanel, [{\n    type: Component,\n    args: [{\n      selector: 'p-scrollPanel',\n      template: \"\\n        <div #container [ngClass]=\\\"'p-scrollpanel p-component'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"p-scrollpanel-wrapper\\\">\\n                <div #content class=\\\"p-scrollpanel-content\\\">\\n                    <ng-content></ng-content>\\n                    <ng-container *ngTemplateOutlet=\\\"contentTemplate\\\"></ng-container>\\n                </div>\\n            </div>\\n            <div #xBar class=\\\"p-scrollpanel-bar p-scrollpanel-bar-x\\\"></div>\\n            <div #yBar class=\\\"p-scrollpanel-bar p-scrollpanel-bar-y\\\"></div>   \\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-scrollpanel-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.p-scrollpanel-content{box-sizing:border-box;height:calc(100% + 18px);overflow:auto;padding:0 18px 18px 0;position:relative;width:calc(100% + 18px)}.p-scrollpanel-bar{background:#c1c1c1;border-radius:3px;cursor:pointer;opacity:0;position:relative;transition:opacity .25s linear;z-index:2}.p-scrollpanel-bar-y{top:0;width:9px}.p-scrollpanel-bar-x{bottom:0;height:9px}.p-scrollpanel-hidden{visibility:hidden}.p-scrollpanel:active .p-scrollpanel-bar,.p-scrollpanel:hover .p-scrollpanel-bar{opacity:1}.p-scrollpanel-grabbed{-ms-user-select:none;-webkit-user-select:none;user-select:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    contentViewChild: [{\n      type: ViewChild,\n      args: ['content']\n    }],\n    xBarViewChild: [{\n      type: ViewChild,\n      args: ['xBar']\n    }],\n    yBarViewChild: [{\n      type: ViewChild,\n      args: ['yBar']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar ScrollPanelModule = function ScrollPanelModule() {\n  _classCallCheck(this, ScrollPanelModule);\n};\n\nScrollPanelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ScrollPanelModule\n});\nScrollPanelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ScrollPanelModule_Factory(t) {\n    return new (t || ScrollPanelModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollPanelModule, {\n    declarations: function declarations() {\n      return [ScrollPanel];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [ScrollPanel];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollPanelModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [ScrollPanel],\n      declarations: [ScrollPanel]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ScrollPanel, ScrollPanelModule };","map":{"version":3,"sources":["../../src/app/components/scrollpanel/scrollpanel.ts","../../src/app/components/scrollpanel/primeng-scrollpanel.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule, Component, Input, AfterViewInit, OnDestroy, ElementRef, NgZone, ViewChild, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, AfterContentInit, ContentChildren, QueryList, TemplateRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate } from 'primeng/api';\n\n@Component({\n    selector: 'p-scrollPanel',\n    template: `\n        <div #container [ngClass]=\"'p-scrollpanel p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-scrollpanel-wrapper\">\n                <div #content class=\"p-scrollpanel-content\">\n                    <ng-content></ng-content>\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </div>\n            </div>\n            <div #xBar class=\"p-scrollpanel-bar p-scrollpanel-bar-x\"></div>\n            <div #yBar class=\"p-scrollpanel-bar p-scrollpanel-bar-y\"></div>   \n        </div>\n    `,\n   changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./scrollpanel.css']\n})\nexport class ScrollPanel implements AfterViewInit, AfterContentInit, OnDestroy {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    constructor(public el: ElementRef, public zone: NgZone, public cd: ChangeDetectorRef) {}\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    @ViewChild('content') contentViewChild: ElementRef;\n\n    @ViewChild('xBar') xBarViewChild: ElementRef;\n    \n    @ViewChild('yBar') yBarViewChild: ElementRef;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    scrollYRatio: number;\n\n    scrollXRatio: number;\n\n    timeoutFrame: any = (fn) => setTimeout(fn, 0);\n\n    initialized: boolean;\n\n    lastPageY: number;\n\n    lastPageX: number;\n\n    isXBarClicked: boolean;\n\n    isYBarClicked: boolean;\n\n    contentTemplate: TemplateRef<any>;\n\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            this.moveBar();\n            this.moveBar = this.moveBar.bind(this);\n            this.onXBarMouseDown = this.onXBarMouseDown.bind(this);\n            this.onYBarMouseDown = this.onYBarMouseDown.bind(this);\n            this.onDocumentMouseMove = this.onDocumentMouseMove.bind(this);\n            this.onDocumentMouseUp = this.onDocumentMouseUp.bind(this);\n            \n            window.addEventListener('resize', this.moveBar);\n            this.contentViewChild.nativeElement.addEventListener('scroll', this.moveBar);\n            this.contentViewChild.nativeElement.addEventListener('mouseenter', this.moveBar);\n            this.xBarViewChild.nativeElement.addEventListener('mousedown', this.onXBarMouseDown);\n            this.yBarViewChild.nativeElement.addEventListener('mousedown', this.onYBarMouseDown);\n\n            this.calculateContainerHeight();\n\n            this.initialized = true;\n        });\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    calculateContainerHeight() {\n        let container = this.containerViewChild.nativeElement;\n        let content = this.contentViewChild.nativeElement;\n        let xBar = this.xBarViewChild.nativeElement;\n\n        let containerStyles = getComputedStyle(container),\n        xBarStyles = getComputedStyle(xBar),\n        pureContainerHeight = DomHandler.getHeight(container) - parseInt(xBarStyles['height'], 10);\n\n        if (containerStyles['max-height'] != \"none\" && pureContainerHeight == 0) {\n            if (content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\n                container.style.height = containerStyles['max-height'];\n            }\n            else {\n                container.style.height = content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + \"px\";\n            }\n        }\n    }\n\n    moveBar() {\n        let container = this.containerViewChild.nativeElement;\n        let content = this.contentViewChild.nativeElement;\n\n        /* horizontal scroll */\n        let xBar = this.xBarViewChild.nativeElement;\n        let totalWidth = content.scrollWidth;\n        let ownWidth = content.clientWidth;\n        let bottom = (container.clientHeight - xBar.clientHeight) * -1;\n\n        this.scrollXRatio = ownWidth / totalWidth;\n\n        /* vertical scroll */\n        let yBar = this.yBarViewChild.nativeElement;\n        let totalHeight = content.scrollHeight;\n        let ownHeight = content.clientHeight;\n        let right = (container.clientWidth - yBar.clientWidth) * -1;\n\n        this.scrollYRatio = ownHeight / totalHeight;\n\n        this.requestAnimationFrame(() => {\n            if (this.scrollXRatio >= 1) {\n                DomHandler.addClass(xBar, 'p-scrollpanel-hidden');\n            } \n            else {\n                DomHandler.removeClass(xBar, 'p-scrollpanel-hidden');\n                const xBarWidth = Math.max(this.scrollXRatio * 100, 10);\n                const xBarLeft = content.scrollLeft * (100 - xBarWidth) / (totalWidth - ownWidth);\n                xBar.style.cssText = 'width:' + xBarWidth + '%; left:' + xBarLeft + '%;bottom:' + bottom + 'px;';\n            }\n\n            if (this.scrollYRatio >= 1) {\n                DomHandler.addClass(yBar, 'p-scrollpanel-hidden');\n            } \n            else {\n                DomHandler.removeClass(yBar, 'p-scrollpanel-hidden');\n                const yBarHeight = Math.max(this.scrollYRatio * 100, 10);\n                const yBarTop = content.scrollTop * (100 - yBarHeight) / (totalHeight - ownHeight);\n                yBar.style.cssText = 'height:' + yBarHeight + '%; top: calc(' + yBarTop + '% - ' + xBar.clientHeight + 'px);right:' + right + 'px;';\n            }\n        });\n    }\n\n    onYBarMouseDown(e: MouseEvent) {\n        this.isYBarClicked = true;\n        this.lastPageY = e.pageY;\n        DomHandler.addClass(this.yBarViewChild.nativeElement, 'p-scrollpanel-grabbed');\n        \n        DomHandler.addClass(document.body, 'p-scrollpanel-grabbed');\n\n        document.addEventListener('mousemove', this.onDocumentMouseMove);\n        document.addEventListener('mouseup', this.onDocumentMouseUp);\n        e.preventDefault();\n    }\n\n    onXBarMouseDown(e: MouseEvent) {\n        this.isXBarClicked = true;\n        this.lastPageX = e.pageX;\n        DomHandler.addClass(this.xBarViewChild.nativeElement, 'p-scrollpanel-grabbed');\n\n        DomHandler.addClass(document.body, 'p-scrollpanel-grabbed');\n\n        document.addEventListener('mousemove', this.onDocumentMouseMove);\n        document.addEventListener('mouseup', this.onDocumentMouseUp);\n        e.preventDefault();\n    }\n\n    onDocumentMouseMove(e: MouseEvent) {\n        if (this.isXBarClicked) {\n            this.onMouseMoveForXBar(e);\n        }\n        else if (this.isYBarClicked) {\n            this.onMouseMoveForYBar(e);\n        }\n        else {\n            this.onMouseMoveForXBar(e);\n            this.onMouseMoveForYBar(e);\n        }\n        \n    }\n\n    onMouseMoveForXBar(e: MouseEvent) {\n        let deltaX = e.pageX - this.lastPageX;\n        this.lastPageX = e.pageX;\n\n        this.requestAnimationFrame(() => {\n            this.contentViewChild.nativeElement.scrollLeft += deltaX / this.scrollXRatio;\n        });\n    }\n\n    onMouseMoveForYBar(e: MouseEvent) {\n        let deltaY = e.pageY - this.lastPageY;\n        this.lastPageY = e.pageY;\n\n        this.requestAnimationFrame(() => {\n            this.contentViewChild.nativeElement.scrollTop += deltaY / this.scrollYRatio;\n        });\n    }\n\n    scrollTop(scrollTop: number) {\n        let scrollableHeight = this.contentViewChild.nativeElement.scrollHeight - this.contentViewChild.nativeElement.clientHeight;\n        scrollTop = scrollTop > scrollableHeight ? scrollableHeight : scrollTop > 0 ? scrollTop : 0;\n        this.contentViewChild.nativeElement.scrollTop = scrollTop;\n    }\n\n    onDocumentMouseUp(e: Event) {\n        DomHandler.removeClass(this.yBarViewChild.nativeElement, 'p-scrollpanel-grabbed');\n        DomHandler.removeClass(this.xBarViewChild.nativeElement, 'p-scrollpanel-grabbed');\n        DomHandler.removeClass(document.body, 'p-scrollpanel-grabbed');\n\n        document.removeEventListener('mousemove', this.onDocumentMouseMove);\n        document.removeEventListener('mouseup', this.onDocumentMouseUp);\n        this.isXBarClicked = false;\n        this.isYBarClicked = false;\n    }\n\n    requestAnimationFrame(f: Function) {\n        let frame = window.requestAnimationFrame || this.timeoutFrame;\n        frame(f);\n    }\n\n    ngOnDestroy() {\n        if (this.initialized) {\n            window.removeEventListener('resize', this.moveBar);\n            this.contentViewChild.nativeElement.removeEventListener('scroll', this.moveBar);\n            this.contentViewChild.nativeElement.removeEventListener('mouseenter', this.moveBar);\n            this.xBarViewChild.nativeElement.removeEventListener('mousedown', this.onXBarMouseDown);\n            this.yBarViewChild.nativeElement.removeEventListener('mousedown', this.onYBarMouseDown);\n        }\n    }\n\n    refresh() {\n        this.moveBar();\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ScrollPanel],\n    declarations: [ScrollPanel]\n})\nexport class ScrollPanelModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}