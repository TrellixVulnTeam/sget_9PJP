import { ModuleWithProviders } from '@angular/core';
import { AuthConfig } from './config/auth-config';
/**
 * O modulo de segurança contem funcionalidades para autenticação, autorização, redirecionamento
 * para login, gerenciamento de tokens JWT e obtenção e armazenamento de dados de usuário.
 * @class
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './authentication/logout.directive';
import * as ɵngcc2 from './authentication/user.directive';
import * as ɵngcc3 from './authentication/login-success.component';
import * as ɵngcc4 from './authentication/authorization/has-role.directive';
import * as ɵngcc5 from './authentication/hide-while-login.component';
import * as ɵngcc6 from '@angular/common';
import * as ɵngcc7 from '@angular/router';
import * as ɵngcc8 from '@angular/common/http';
export declare class SecurityModule {
    /**
     * forRoot method
     * @public
     * @static
     * @returns ModuleWithProviders
     */
    static forRoot(config: AuthConfig): ModuleWithProviders<SecurityModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<SecurityModule, [typeof ɵngcc1.LogoutDirective, typeof ɵngcc2.UserDirective, typeof ɵngcc3.LoginSuccessComponent, typeof ɵngcc4.HasRoleDirective, typeof ɵngcc5.HideWhileLoginComponent], [typeof ɵngcc6.CommonModule, typeof ɵngcc7.RouterModule, typeof ɵngcc8.HttpClientModule], [typeof ɵngcc1.LogoutDirective, typeof ɵngcc2.UserDirective, typeof ɵngcc3.LoginSuccessComponent, typeof ɵngcc4.HasRoleDirective, typeof ɵngcc5.HideWhileLoginComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<SecurityModule>;
}

//# sourceMappingURL=security.module.d.ts.map