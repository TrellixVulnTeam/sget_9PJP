{"version":3,"file":"error-stack.service.d.ts","sources":["error-stack.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ReplaySubject } from 'rxjs';\nimport { NamedErrorType } from '../types/named-error.type';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { HttpGenericErrorService } from '../services/http-generic-error.service';\n/**\n * Serviço de erros ErrorStackService\n * @class\n */\nexport declare class ErrorStackService {\n    private genericErrorService;\n    /**\n     * Propriedade errors\n     * @type {ReplaySubject<NamedErrorType>}\n     */\n    errors: ReplaySubject<NamedErrorType>;\n    /**\n     * metodo construtor injeta serviço generico de erros\n     * @param {HttpGenericErrorService} genericErrorService\n     * @constructor\n     */\n    constructor(genericErrorService: HttpGenericErrorService);\n    /**\n     * Metodo responsável por criar erro do tipo HttpResponse\n     * @param {HttpErrorResponse} error\n     * @returns void\n     */\n    create(error: HttpErrorResponse): void;\n    /**\n     * Metodo responsável por obter o conteúdo dos erros emitidos\n     * @private\n     * @returns NamedErrorType[]\n     */\n    private getErrorsSubjects;\n    /**\n     * Metodo responsável por itentifica o tipo de erro lançado\n     * @private\n     * @param {HttpErrorResponse} error\n     * @returns NamedErrorType\n     */\n    private createNamedError;\n    /**\n     * Metodo responsável por obter o identificador do erro\n     * @private\n     * @param {HttpErrorResponse} error\n     * @returns string\n     */\n    private getErrorId;\n}\n"]}