import { HttpParams } from "@angular/common/http";
export class CrudServiceNuvem {
    constructor(uri, http) {
        this.uri = uri;
        this.http = http;
    }
    save(entity) {
        return this.http.post(this.uri, entity);
    }
    edit(entity) {
        return this.http.put(this.uri, entity);
    }
    find(id) {
        return this.http.get(`${this.uri}/${id}`);
    }
    delete(id) {
        return this.http.delete(`${this.uri}/${id}`);
    }
    findAll(entity) {
        let params = new HttpParams();
        for (let field in entity) {
            params = params.append(field, entity[field]);
        }
        return this.http.get(`${this.uri}`, { params: params });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J1ZC1zZXJ2aWNlLW51dmVtLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wcmltZW5nLWNvbXBvbmVudHMvc3JjL2xpYi9jcnVkL2NydWQtc2VydmljZS1udXZlbS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBYyxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUU5RCxNQUFNLE9BQU8sZ0JBQWdCO0lBRXpCLFlBQW1CLEdBQVcsRUFBWSxJQUFnQjtRQUF2QyxRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQVksU0FBSSxHQUFKLElBQUksQ0FBWTtJQUMxRCxDQUFDO0lBRUQsSUFBSSxDQUFDLE1BQVM7UUFDVixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFJLElBQUksQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELElBQUksQ0FBQyxNQUFTO1FBQ1YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFRCxJQUFJLENBQUMsRUFBSztRQUNOLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELE1BQU0sQ0FBQyxFQUFLO1FBQ1IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBSSxHQUFHLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQsT0FBTyxDQUFDLE1BQVM7UUFDYixJQUFJLE1BQU0sR0FBRyxJQUFJLFVBQVUsRUFBRSxDQUFDO1FBRTlCLEtBQUssSUFBSSxLQUFLLElBQUksTUFBTSxFQUFFO1lBQ3RCLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBUSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztTQUN0RDtRQUVELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUMvRCxDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcnVkU2VydmljZSB9IGZyb20gXCIuL2NydWQtc2VydmljZS5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anNcIjtcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBQYXJhbXMgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uL2h0dHBcIjtcblxuZXhwb3J0IGNsYXNzIENydWRTZXJ2aWNlTnV2ZW08SSwgRT4gaW1wbGVtZW50cyBDcnVkU2VydmljZTxJLCBFPiB7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdXJpOiBzdHJpbmcsIHByb3RlY3RlZCBodHRwOiBIdHRwQ2xpZW50KSB7XG4gICAgfVxuXG4gICAgc2F2ZShlbnRpdHk6IEUpOiBPYnNlcnZhYmxlPEU+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0PEU+KHRoaXMudXJpLCBlbnRpdHkpO1xuICAgIH1cblxuICAgIGVkaXQoZW50aXR5OiBFKTogT2JzZXJ2YWJsZTxFPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAucHV0PEU+KHRoaXMudXJpLCBlbnRpdHkpO1xuICAgIH1cblxuICAgIGZpbmQoaWQ6IEkpOiBPYnNlcnZhYmxlPEU+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8RT4oYCR7dGhpcy51cml9LyR7aWR9YCk7XG4gICAgfVxuXG4gICAgZGVsZXRlKGlkOiBJKTogT2JzZXJ2YWJsZTxFPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAuZGVsZXRlPEU+KGAke3RoaXMudXJpfS8ke2lkfWApO1xuICAgIH1cblxuICAgIGZpbmRBbGwoZW50aXR5OiBFKTogT2JzZXJ2YWJsZTxFPiB7XG4gICAgICAgIGxldCBwYXJhbXMgPSBuZXcgSHR0cFBhcmFtcygpO1xuXG4gICAgICAgIGZvciAobGV0IGZpZWxkIGluIGVudGl0eSkge1xuICAgICAgICAgICAgcGFyYW1zID0gcGFyYW1zLmFwcGVuZChmaWVsZCwgPGFueT4gZW50aXR5W2ZpZWxkXSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldDxFPihgJHt0aGlzLnVyaX1gLCB7IHBhcmFtczogcGFyYW1zIH0pO1xuICAgIH1cblxufVxuIl19