{"ast":null,"code":"import _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nvar Skeleton = /*#__PURE__*/function () {\n  function Skeleton() {\n    _classCallCheck(this, Skeleton);\n\n    this.shape = \"rectangle\";\n    this.animation = \"wave\";\n    this.borderRadius = null;\n    this.size = null;\n    this.width = \"100%\";\n    this.height = \"1rem\";\n  }\n\n  _createClass(Skeleton, [{\n    key: \"containerClass\",\n    value: function containerClass() {\n      return {\n        'p-skeleton p-component': true,\n        'p-skeleton-circle': this.shape === 'circle',\n        'p-skeleton-animation-none': this.animation === 'none'\n      };\n    }\n  }, {\n    key: \"containerStyle\",\n    value: function containerStyle() {\n      if (this.size) return Object.assign(Object.assign({}, this.style), {\n        width: this.size,\n        height: this.size,\n        borderRadius: this.borderRadius\n      });else return Object.assign(Object.assign({}, this.style), {\n        width: this.width,\n        height: this.height,\n        borderRadius: this.borderRadius\n      });\n    }\n  }]);\n\n  return Skeleton;\n}();\n\nSkeleton.ɵfac = function Skeleton_Factory(t) {\n  return new (t || Skeleton)();\n};\n\nSkeleton.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Skeleton,\n  selectors: [[\"p-skeleton\"]],\n  inputs: {\n    shape: \"shape\",\n    animation: \"animation\",\n    borderRadius: \"borderRadius\",\n    size: \"size\",\n    width: \"width\",\n    height: \"height\",\n    styleClass: \"styleClass\",\n    style: \"style\"\n  },\n  decls: 1,\n  vars: 4,\n  consts: [[3, \"ngClass\", \"ngStyle\"]],\n  template: function Skeleton_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.containerStyle());\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle],\n  styles: [\".p-skeleton{overflow:hidden;position:relative}.p-skeleton:after{animation:p-skeleton-animation 1.2s infinite;content:\\\"\\\";height:100%;left:0;position:absolute;right:0;top:0;transform:translateX(-100%);z-index:1}.p-skeleton.p-skeleton-circle{border-radius:50%}.p-skeleton-none:after{animation:none}@keyframes p-skeleton-animation{0%{transform:translateX(-100%)}to{transform:translateX(100%)}}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nSkeleton.propDecorators = {\n  styleClass: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  shape: [{\n    type: Input\n  }],\n  animation: [{\n    type: Input\n  }],\n  borderRadius: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  width: [{\n    type: Input\n  }],\n  height: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Skeleton, [{\n    type: Component,\n    args: [{\n      selector: 'p-skeleton',\n      template: \"\\n        <div [ngClass]=\\\"containerClass()\\\" [class]=\\\"styleClass\\\" [ngStyle]=\\\"containerStyle()\\\">\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-skeleton{overflow:hidden;position:relative}.p-skeleton:after{animation:p-skeleton-animation 1.2s infinite;content:\\\"\\\";height:100%;left:0;position:absolute;right:0;top:0;transform:translateX(-100%);z-index:1}.p-skeleton.p-skeleton-circle{border-radius:50%}.p-skeleton-none:after{animation:none}@keyframes p-skeleton-animation{0%{transform:translateX(-100%)}to{transform:translateX(100%)}}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    shape: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    borderRadius: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }]\n  });\n})();\n\nvar SkeletonModule = function SkeletonModule() {\n  _classCallCheck(this, SkeletonModule);\n};\n\nSkeletonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: SkeletonModule\n});\nSkeletonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function SkeletonModule_Factory(t) {\n    return new (t || SkeletonModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SkeletonModule, {\n    declarations: function declarations() {\n      return [Skeleton];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [Skeleton];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SkeletonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Skeleton],\n      declarations: [Skeleton]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Skeleton, SkeletonModule };","map":{"version":3,"sources":["../../src/app/components/skeleton/skeleton.ts","../../src/app/components/skeleton/primeng-skeleton.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule, Component, ChangeDetectionStrategy, ViewEncapsulation, Input} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'p-skeleton',\n    template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"containerStyle()\">\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./skeleton.css']\n})\nexport class Skeleton {\n\n    @Input() styleClass: string;\n\n    @Input() style: any;\n\n    @Input() shape: string = \"rectangle\";\n\n    @Input() animation: string = \"wave\";\n\n    @Input() borderRadius: string = null;\n\n    @Input() size: string = null;\n\n    @Input() width: string = \"100%\";\n    \n    @Input() height: string = \"1rem\";\n\n    containerClass() {\n        return {\n            'p-skeleton p-component': true,\n            'p-skeleton-circle': this.shape === 'circle',\n            'p-skeleton-animation-none': this.animation === 'none'\n        };\n    }\n\n    containerStyle() {\n        if (this.size)\n                return {...this.style, width: this.size, height: this.size, borderRadius: this.borderRadius};\n            else\n                return {...this.style, width: this.width, height: this.height, borderRadius: this.borderRadius};\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Skeleton],\n    declarations: [Skeleton]\n})\nexport class SkeletonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}