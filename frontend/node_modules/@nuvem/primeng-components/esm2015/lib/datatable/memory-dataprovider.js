/**
 * Class MemoryDataProvider
 * @class
 */
export class MemoryDataProvider {
    /**
     * constructor method
     * @param {DatatableComponent} component
     * @constructor
     */
    constructor(component) {
        this.component = component;
    }
    /**
     * load method
     * @param {any} query
     * @returns void
     */
    load(query) {
        this.component.pDatatableComponent.reset();
        for (let prop in query) {
            let matchMode = 'contains';
            if (query[prop] instanceof Array) {
                matchMode = 'in';
            }
            this.component.pDatatableComponent.filter(query[prop], prop, matchMode);
        }
        this.component.pDatatableComponent.globalFilterFields = query;
        this.component.pDatatableComponent._filter();
    }
    /**
     * reset method
     * @returns void
     */
    reset() {
        this.component.pDatatableComponent.globalFilterFields = undefined;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVtb3J5LWRhdGFwcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3ByaW1lbmctY29tcG9uZW50cy9zcmMvbGliL2RhdGF0YWJsZS9tZW1vcnktZGF0YXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBOzs7R0FHRztBQUNILE1BQU0sT0FBTyxrQkFBa0I7SUFFM0I7Ozs7T0FJRztJQUNILFlBQW9CLFNBQTZCO1FBQTdCLGNBQVMsR0FBVCxTQUFTLENBQW9CO0lBQUcsQ0FBQztJQUVyRDs7OztPQUlHO0lBQ0gsSUFBSSxDQUFDLEtBQVk7UUFDYixJQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLEtBQUssRUFBRSxDQUFDO1FBRTNDLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxFQUFFO1lBQ3BCLElBQUksU0FBUyxHQUFHLFVBQVUsQ0FBQztZQUMzQixJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsWUFBWSxLQUFLLEVBQUU7Z0JBQzlCLFNBQVMsR0FBRyxJQUFJLENBQUM7YUFDcEI7WUFDRCxJQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sQ0FDckMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUNYLElBQUksRUFDSixTQUFTLENBQ1osQ0FBQztTQUNMO1FBRUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQyxrQkFBa0IsR0FBRyxLQUFLLENBQUM7UUFDOUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqRCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsS0FBSztRQUNELElBQUksQ0FBQyxTQUFTLENBQUMsbUJBQW1CLENBQUMsa0JBQWtCLEdBQUcsU0FBUyxDQUFDO0lBQ3RFLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFQcm92aWRlciB9IGZyb20gJy4vZGF0YXByb3ZpZGVyJztcbmltcG9ydCB7IERhdGF0YWJsZUNvbXBvbmVudCB9IGZyb20gJy4vZGF0YXRhYmxlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQ2xhc3MgTWVtb3J5RGF0YVByb3ZpZGVyXG4gKiBAY2xhc3NcbiAqL1xuZXhwb3J0IGNsYXNzIE1lbW9yeURhdGFQcm92aWRlciBpbXBsZW1lbnRzIERhdGFQcm92aWRlciB7XG5cbiAgICAvKipcbiAgICAgKiBjb25zdHJ1Y3RvciBtZXRob2RcbiAgICAgKiBAcGFyYW0ge0RhdGF0YWJsZUNvbXBvbmVudH0gY29tcG9uZW50XG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBjb21wb25lbnQ6IERhdGF0YWJsZUNvbXBvbmVudCkge31cblxuICAgIC8qKlxuICAgICAqIGxvYWQgbWV0aG9kXG4gICAgICogQHBhcmFtIHthbnl9IHF1ZXJ5XG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIGxvYWQocXVlcnkgPzogYW55KTogdm9pZCB7XG4gICAgICAgIHRoaXMuY29tcG9uZW50LnBEYXRhdGFibGVDb21wb25lbnQucmVzZXQoKTtcbiAgICAgICAgXG4gICAgICAgIGZvciAobGV0IHByb3AgaW4gcXVlcnkpIHtcbiAgICAgICAgICAgIGxldCBtYXRjaE1vZGUgPSAnY29udGFpbnMnO1xuICAgICAgICAgICAgaWYgKHF1ZXJ5W3Byb3BdIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICAgICAgICBtYXRjaE1vZGUgPSAnaW4nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5jb21wb25lbnQucERhdGF0YWJsZUNvbXBvbmVudC5maWx0ZXIoXG4gICAgICAgICAgICAgICAgcXVlcnlbcHJvcF0sXG4gICAgICAgICAgICAgICAgcHJvcCxcbiAgICAgICAgICAgICAgICBtYXRjaE1vZGVcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNvbXBvbmVudC5wRGF0YXRhYmxlQ29tcG9uZW50Lmdsb2JhbEZpbHRlckZpZWxkcyA9IHF1ZXJ5O1xuICAgICAgICB0aGlzLmNvbXBvbmVudC5wRGF0YXRhYmxlQ29tcG9uZW50Ll9maWx0ZXIoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZXNldCBtZXRob2RcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuY29tcG9uZW50LnBEYXRhdGFibGVDb21wb25lbnQuZ2xvYmFsRmlsdGVyRmllbGRzID0gdW5kZWZpbmVkO1xuICAgIH1cbn1cbiJdfQ==