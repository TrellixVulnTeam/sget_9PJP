{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/TCC/codificacao/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Renderer2, ChangeDetectorRef, IterableDiffers, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'primeng/button';\nimport * as ɵngcc3 from 'primeng/ripple';\nvar _c0 = [\"container\"];\nvar _c1 = [\"in\"];\nvar _c2 = [\"multiIn\"];\nvar _c3 = [\"multiContainer\"];\nvar _c4 = [\"ddBtn\"];\n\nvar _c5 = function _c5(a0, a1) {\n  return {\n    \"p-autocomplete-dd-input\": a0,\n    \"p-disabled\": a1\n  };\n};\n\nfunction AutoComplete_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input\", 7, 8);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoComplete_input_2_Template_input_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onInputClick($event);\n    })(\"input\", function AutoComplete_input_2_Template_input_input_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onInput($event);\n    })(\"keydown\", function AutoComplete_input_2_Template_input_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onKeydown($event);\n    })(\"keyup\", function AutoComplete_input_2_Template_input_keyup_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onKeyup($event);\n    })(\"focus\", function AutoComplete_input_2_Template_input_focus_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.onInputFocus($event);\n    })(\"blur\", function AutoComplete_input_2_Template_input_blur_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.onInputBlur($event);\n    })(\"change\", function AutoComplete_input_2_Template_input_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.onInputChange($event);\n    })(\"paste\", function AutoComplete_input_2_Template_input_paste_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.onInputPaste($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r1.inputStyleClass);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r1.inputStyle)(\"autocomplete\", ctx_r1.autocomplete)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(23, _c5, ctx_r1.dropdown, ctx_r1.disabled))(\"value\", ctx_r1.inputFieldValue)(\"readonly\", ctx_r1.readonly)(\"disabled\", ctx_r1.disabled);\n    ɵngcc0.ɵɵattribute(\"type\", ctx_r1.type)(\"id\", ctx_r1.inputId)(\"required\", ctx_r1.required)(\"name\", ctx_r1.name)(\"aria-controls\", ctx_r1.listId)(\"aria-expanded\", ctx_r1.overlayVisible)(\"aria-activedescendant\", \"p-highlighted-option\")(\"autofocus\", ctx_r1.autofocus)(\"placeholder\", ctx_r1.placeholder)(\"size\", ctx_r1.size)(\"maxlength\", ctx_r1.maxlength)(\"tabindex\", ctx_r1.tabindex)(\"aria-label\", ctx_r1.ariaLabel)(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-required\", ctx_r1.required);\n  }\n}\n\nfunction AutoComplete_ul_3_li_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_ul_3_li_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var val_r19 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r22.resolveFieldData(val_r19));\n  }\n}\n\nfunction AutoComplete_ul_3_li_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r26 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoComplete_ul_3_li_2_span_4_Template_span_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r26);\n      ɵngcc0.ɵɵnextContext();\n\n      var _r20 = ɵngcc0.ɵɵreference(1);\n\n      var ctx_r25 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r25.removeItem(_r20);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c6 = function _c6(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction AutoComplete_ul_3_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15, 16);\n    ɵngcc0.ɵɵtemplate(2, AutoComplete_ul_3_li_2_ng_container_2_Template, 1, 0, \"ng-container\", 17);\n    ɵngcc0.ɵɵtemplate(3, AutoComplete_ul_3_li_2_span_3_Template, 2, 1, \"span\", 18);\n    ɵngcc0.ɵɵtemplate(4, AutoComplete_ul_3_li_2_span_4_Template, 1, 0, \"span\", 19);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var val_r19 = ctx.$implicit;\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r17.selectedItemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(4, _c6, val_r19));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r17.selectedItemTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r17.disabled && !ctx_r17.readonly);\n  }\n}\n\nvar _c7 = function _c7(a0, a1) {\n  return {\n    \"p-disabled\": a0,\n    \"p-focus\": a1\n  };\n};\n\nfunction AutoComplete_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r28 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 9, 10);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoComplete_ul_3_Template_ul_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r28);\n\n      var _r18 = ɵngcc0.ɵɵreference(5);\n\n      return _r18.focus();\n    });\n    ɵngcc0.ɵɵtemplate(2, AutoComplete_ul_3_li_2_Template, 5, 6, \"li\", 11);\n    ɵngcc0.ɵɵelementStart(3, \"li\", 12);\n    ɵngcc0.ɵɵelementStart(4, \"input\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"input\", function AutoComplete_ul_3_Template_input_input_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r29 = ɵngcc0.ɵɵnextContext();\n      return ctx_r29.onInput($event);\n    })(\"click\", function AutoComplete_ul_3_Template_input_click_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r30 = ɵngcc0.ɵɵnextContext();\n      return ctx_r30.onInputClick($event);\n    })(\"keydown\", function AutoComplete_ul_3_Template_input_keydown_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r31 = ɵngcc0.ɵɵnextContext();\n      return ctx_r31.onKeydown($event);\n    })(\"keyup\", function AutoComplete_ul_3_Template_input_keyup_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r32 = ɵngcc0.ɵɵnextContext();\n      return ctx_r32.onKeyup($event);\n    })(\"focus\", function AutoComplete_ul_3_Template_input_focus_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r33 = ɵngcc0.ɵɵnextContext();\n      return ctx_r33.onInputFocus($event);\n    })(\"blur\", function AutoComplete_ul_3_Template_input_blur_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r34 = ɵngcc0.ɵɵnextContext();\n      return ctx_r34.onInputBlur($event);\n    })(\"change\", function AutoComplete_ul_3_Template_input_change_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r35 = ɵngcc0.ɵɵnextContext();\n      return ctx_r35.onInputChange($event);\n    })(\"paste\", function AutoComplete_ul_3_Template_input_paste_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r36 = ɵngcc0.ɵɵnextContext();\n      return ctx_r36.onInputPaste($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(20, _c7, ctx_r2.disabled, ctx_r2.focus));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.value);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassMap(ctx_r2.inputStyleClass);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r2.disabled)(\"readonly\", ctx_r2.readonly)(\"autocomplete\", ctx_r2.autocomplete)(\"ngStyle\", ctx_r2.inputStyle);\n    ɵngcc0.ɵɵattribute(\"type\", ctx_r2.type)(\"id\", ctx_r2.inputId)(\"placeholder\", ctx_r2.value && ctx_r2.value.length ? null : ctx_r2.placeholder)(\"tabindex\", ctx_r2.tabindex)(\"maxlength\", ctx_r2.maxlength)(\"autofocus\", ctx_r2.autofocus)(\"aria-label\", ctx_r2.ariaLabel)(\"aria-labelledby\", ctx_r2.ariaLabelledBy)(\"aria-required\", ctx_r2.required)(\"aria-controls\", ctx_r2.listId)(\"aria-expanded\", ctx_r2.overlayVisible)(\"aria-activedescendant\", \"p-highlighted-option\");\n  }\n}\n\nfunction AutoComplete_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 22);\n  }\n}\n\nfunction AutoComplete_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r39 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23, 24);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoComplete_button_5_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r39);\n      var ctx_r38 = ɵngcc0.ɵɵnextContext();\n      return ctx_r38.handleDropdownClick($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r4.dropdownIcon)(\"disabled\", ctx_r4.disabled);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r4.tabindex);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_3_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var optgroup_r46 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r47 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r47.getOptionGroupLabel(optgroup_r46) || \"empty\");\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_3_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_3_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 30);\n    ɵngcc0.ɵɵtemplate(1, AutoComplete_div_6_ng_container_3_ng_template_1_span_1_Template, 2, 1, \"span\", 27);\n    ɵngcc0.ɵɵtemplate(2, AutoComplete_div_6_ng_container_3_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, AutoComplete_div_6_ng_container_3_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 17);\n  }\n\n  if (rf & 2) {\n    var optgroup_r46 = ctx.$implicit;\n    ɵngcc0.ɵɵnextContext(2);\n\n    var _r43 = ɵngcc0.ɵɵreference(6);\n\n    var ctx_r45 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r45.groupTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r45.groupTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(5, _c6, optgroup_r46));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r43)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(7, _c6, ctx_r45.getOptionGroupChildren(optgroup_r46)));\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, AutoComplete_div_6_ng_container_3_ng_template_1_Template, 4, 9, \"ng-template\", 29);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r41 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r41.suggestions);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, AutoComplete_div_6_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 17);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n\n    var _r43 = ɵngcc0.ɵɵreference(6);\n\n    var ctx_r42 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r43)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c6, ctx_r42.suggestions));\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_5_li_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r55 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r57 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r57.resolveFieldData(option_r55));\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_5_li_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c8 = function _c8(a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nvar _c9 = function _c9(a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction AutoComplete_div_6_ng_template_5_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r61 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 33);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoComplete_div_6_ng_template_5_li_0_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r61);\n      var option_r55 = ctx.$implicit;\n      var ctx_r60 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r60.selectItem(option_r55);\n    });\n    ɵngcc0.ɵɵtemplate(1, AutoComplete_div_6_ng_template_5_li_0_span_1_Template, 2, 1, \"span\", 27);\n    ɵngcc0.ɵɵtemplate(2, AutoComplete_div_6_ng_template_5_li_0_ng_container_2_Template, 1, 0, \"ng-container\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r55 = ctx.$implicit;\n    var idx_r56 = ctx.index;\n    var ctx_r53 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c8, option_r55 === ctx_r53.highlightOption))(\"id\", ctx_r53.highlightOption == option_r55 ? \"p-highlighted-option\" : \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r53.itemTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r53.itemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(7, _c9, option_r55, idx_r56));\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_5_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 34);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r54 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r54.emptyMessage);\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, AutoComplete_div_6_ng_template_5_li_0_Template, 3, 10, \"li\", 31);\n    ɵngcc0.ɵɵtemplate(1, AutoComplete_div_6_ng_template_5_li_1_Template, 2, 1, \"li\", 32);\n  }\n\n  if (rf & 2) {\n    var suggestionsToDisplay_r52 = ctx.$implicit;\n    var ctx_r44 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", suggestionsToDisplay_r52);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r44.noResults && ctx_r44.emptyMessage);\n  }\n}\n\nvar _c10 = function _c10() {\n  return [\"p-autocomplete-panel p-component\"];\n};\n\nvar _c11 = function _c11(a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nvar _c12 = function _c12(a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nfunction AutoComplete_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r63 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 25);\n    ɵngcc0.ɵɵlistener(\"@overlayAnimation.start\", function AutoComplete_div_6_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r63);\n      var ctx_r62 = ɵngcc0.ɵɵnextContext();\n      return ctx_r62.onOverlayAnimationStart($event);\n    });\n    ɵngcc0.ɵɵelementStart(2, \"ul\", 26);\n    ɵngcc0.ɵɵtemplate(3, AutoComplete_div_6_ng_container_3_Template, 2, 1, \"ng-container\", 27);\n    ɵngcc0.ɵɵtemplate(4, AutoComplete_div_6_ng_container_4_Template, 2, 4, \"ng-container\", 27);\n    ɵngcc0.ɵɵtemplate(5, AutoComplete_div_6_ng_template_5_Template, 2, 2, \"ng-template\", null, 28, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r5.panelStyleClass);\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r5.scrollHeight);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(10, _c10))(\"ngStyle\", ctx_r5.panelStyle)(\"@overlayAnimation\", ɵngcc0.ɵɵpureFunction1(14, _c12, ɵngcc0.ɵɵpureFunction2(11, _c11, ctx_r5.showTransitionOptions, ctx_r5.hideTransitionOptions)));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r5.listId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.group);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.group);\n  }\n}\n\nvar _c13 = function _c13(a1, a2) {\n  return {\n    \"p-autocomplete p-component\": true,\n    \"p-autocomplete-dd\": a1,\n    \"p-autocomplete-multiple\": a2\n  };\n};\n\nvar AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return AutoComplete;\n  }),\n  multi: true\n};\n\nvar AutoComplete = /*#__PURE__*/function () {\n  function AutoComplete(el, renderer, cd, differs) {\n    _classCallCheck(this, AutoComplete);\n\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.differs = differs;\n    this.minLength = 1;\n    this.delay = 300;\n    this.type = 'text';\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.dropdownIcon = \"pi pi-chevron-down\";\n    this.unique = true;\n    this.completeOnFocus = false;\n    this.completeMethod = new EventEmitter();\n    this.onSelect = new EventEmitter();\n    this.onUnselect = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onDropdownClick = new EventEmitter();\n    this.onClear = new EventEmitter();\n    this.onKeyUp = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onHide = new EventEmitter();\n    this.scrollHeight = '200px';\n    this.dropdownMode = 'blank';\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.autocomplete = 'off';\n\n    this.onModelChange = function () {};\n\n    this.onModelTouched = function () {};\n\n    this.overlayVisible = false;\n    this.focus = false;\n    this.inputFieldValue = null;\n    this.differ = differs.find([]).create(null);\n    this.listId = UniqueComponentId() + '_list';\n  }\n\n  _createClass(AutoComplete, [{\n    key: \"suggestions\",\n    get: function get() {\n      return this._suggestions;\n    },\n    set: function set(val) {\n      this._suggestions = val;\n      this.handleSuggestionsChange();\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      var _this = this;\n\n      //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n      if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n        setTimeout(function () {\n          if (_this.overlay) {\n            _this.alignOverlay();\n          }\n        }, 1);\n        this.suggestionsUpdated = false;\n      }\n\n      if (this.highlightOptionChanged) {\n        setTimeout(function () {\n          if (_this.overlay) {\n            var listItem = DomHandler.findSingle(_this.overlay, 'li.p-highlight');\n\n            if (listItem) {\n              DomHandler.scrollInView(_this.overlay, listItem);\n            }\n          }\n        }, 1);\n        this.highlightOptionChanged = false;\n      }\n    }\n  }, {\n    key: \"handleSuggestionsChange\",\n    value: function handleSuggestionsChange() {\n      if (this._suggestions != null && this.loading) {\n        this.highlightOption = null;\n\n        if (this._suggestions.length) {\n          this.noResults = false;\n          this.show();\n          this.suggestionsUpdated = true;\n\n          if (this.autoHighlight) {\n            this.highlightOption = this._suggestions[0];\n          }\n        } else {\n          this.noResults = true;\n\n          if (this.emptyMessage) {\n            this.show();\n            this.suggestionsUpdated = true;\n          } else {\n            this.hide();\n          }\n        }\n\n        this.loading = false;\n      }\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'item':\n            _this2.itemTemplate = item.template;\n            break;\n\n          case 'group':\n            _this2.groupTemplate = item.template;\n            break;\n\n          case 'selectedItem':\n            _this2.selectedItemTemplate = item.template;\n            break;\n\n          default:\n            _this2.itemTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n      this.filled = this.value && this.value != '';\n      this.updateInputField();\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"getOptionGroupChildren\",\n    value: function getOptionGroupChildren(optionGroup) {\n      return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n  }, {\n    key: \"getOptionGroupLabel\",\n    value: function getOptionGroupLabel(optionGroup) {\n      return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(event) {\n      var _this3 = this;\n\n      // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n      if (!this.inputKeyDown && DomHandler.isIE()) {\n        return;\n      }\n\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n\n      var value = event.target.value;\n\n      if (!this.multiple && !this.forceSelection) {\n        this.onModelChange(value);\n      }\n\n      if (value.length === 0 && !this.multiple) {\n        this.hide();\n        this.onClear.emit(event);\n        this.onModelChange(value);\n      }\n\n      if (value.length >= this.minLength) {\n        this.timeout = setTimeout(function () {\n          _this3.search(event, value);\n        }, this.delay);\n      } else {\n        this.hide();\n      }\n\n      this.updateFilledState();\n      this.inputKeyDown = false;\n    }\n  }, {\n    key: \"onInputClick\",\n    value: function onInputClick(event) {\n      if (this.documentClickListener) {\n        this.inputClick = true;\n      }\n    }\n  }, {\n    key: \"search\",\n    value: function search(event, query) {\n      //allow empty string but not undefined or null\n      if (query === undefined || query === null) {\n        return;\n      }\n\n      this.loading = true;\n      this.completeMethod.emit({\n        originalEvent: event,\n        query: query\n      });\n    }\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(option) {\n      var focus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (this.forceSelectionUpdateModelTimeout) {\n        clearTimeout(this.forceSelectionUpdateModelTimeout);\n        this.forceSelectionUpdateModelTimeout = null;\n      }\n\n      if (this.multiple) {\n        this.multiInputEL.nativeElement.value = '';\n        this.value = this.value || [];\n\n        if (!this.isSelected(option) || !this.unique) {\n          this.value = [].concat(_toConsumableArray(this.value), [option]);\n          this.onModelChange(this.value);\n        }\n      } else {\n        this.inputEL.nativeElement.value = this.field ? this.getFieldData(option) : option;\n        this.value = option;\n        this.onModelChange(this.value);\n      }\n\n      this.onSelect.emit(option);\n      this.updateFilledState();\n\n      if (focus) {\n        this.itemClicked = true;\n        this.focusInput();\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.multiInputEL || this.inputEL) {\n        var hasFocus = this.multiple ? this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement : this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n\n        if (!this.overlayVisible && hasFocus) {\n          this.overlayVisible = true;\n        }\n      }\n    }\n  }, {\n    key: \"onOverlayAnimationStart\",\n    value: function onOverlayAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n          this.overlay = event.element;\n          this.appendOverlay();\n\n          if (this.autoZIndex) {\n            this.overlay.style.zIndex = String(this.baseZIndex + ++DomHandler.zindex);\n          }\n\n          this.alignOverlay();\n          this.bindDocumentClickListener();\n          this.bindDocumentResizeListener();\n          this.bindScrollListener();\n          this.onShow.emit(event);\n          break;\n\n        case 'void':\n          this.onOverlayHide();\n          break;\n      }\n    }\n  }, {\n    key: \"appendOverlay\",\n    value: function appendOverlay() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') document.body.appendChild(this.overlay);else DomHandler.appendChild(this.overlay, this.appendTo);\n\n        if (!this.overlay.style.minWidth) {\n          this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n        }\n      }\n    }\n  }, {\n    key: \"resolveFieldData\",\n    value: function resolveFieldData(value) {\n      return this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n    }\n  }, {\n    key: \"getFieldData\",\n    value: function getFieldData(option) {\n      var data = ObjectUtils.resolveFieldData(option, this.field);\n      return data !== null ? data : '';\n    }\n  }, {\n    key: \"restoreOverlayAppend\",\n    value: function restoreOverlayAppend() {\n      if (this.overlay && this.appendTo) {\n        this.el.nativeElement.appendChild(this.overlay);\n      }\n    }\n  }, {\n    key: \"alignOverlay\",\n    value: function alignOverlay() {\n      if (this.appendTo) DomHandler.absolutePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);else DomHandler.relativePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.overlayVisible = false;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"handleDropdownClick\",\n    value: function handleDropdownClick(event) {\n      if (!this.overlayVisible) {\n        this.focusInput();\n        var queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n        if (this.dropdownMode === 'blank') this.search(event, '');else if (this.dropdownMode === 'current') this.search(event, queryValue);\n        this.onDropdownClick.emit({\n          originalEvent: event,\n          query: queryValue\n        });\n      } else {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"focusInput\",\n    value: function focusInput() {\n      if (this.multiple) this.multiInputEL.nativeElement.focus();else this.inputEL.nativeElement.focus();\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(item) {\n      var itemIndex = DomHandler.index(item);\n      var removedValue = this.value[itemIndex];\n      this.value = this.value.filter(function (val, i) {\n        return i != itemIndex;\n      });\n      this.onModelChange(this.value);\n      this.updateFilledState();\n      this.onUnselect.emit(removedValue);\n    }\n  }, {\n    key: \"onKeydown\",\n    value: function onKeydown(event) {\n      if (this.overlayVisible) {\n        switch (event.which) {\n          //down\n          case 40:\n            if (this.group) {\n              var highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n              if (highlightItemIndex !== -1) {\n                var _nextItemIndex = highlightItemIndex.itemIndex + 1;\n\n                if (_nextItemIndex < this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length) {\n                  this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[_nextItemIndex];\n                  this.highlightOptionChanged = true;\n                } else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                  this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                  this.highlightOptionChanged = true;\n                }\n              } else {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n              }\n            } else {\n              var _highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n              if (_highlightItemIndex != -1) {\n                var nextItemIndex = _highlightItemIndex + 1;\n\n                if (nextItemIndex != this.suggestions.length) {\n                  this.highlightOption = this.suggestions[nextItemIndex];\n                  this.highlightOptionChanged = true;\n                }\n              } else {\n                this.highlightOption = this.suggestions[0];\n              }\n            }\n\n            event.preventDefault();\n            break;\n          //up\n\n          case 38:\n            if (this.group) {\n              var _highlightItemIndex2 = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n              if (_highlightItemIndex2 !== -1) {\n                var prevItemIndex = _highlightItemIndex2.itemIndex - 1;\n\n                if (prevItemIndex >= 0) {\n                  this.highlightOption = this.getOptionGroupChildren(this.suggestions[_highlightItemIndex2.groupIndex])[prevItemIndex];\n                  this.highlightOptionChanged = true;\n                } else if (prevItemIndex < 0) {\n                  var prevGroup = this.suggestions[_highlightItemIndex2.groupIndex - 1];\n\n                  if (prevGroup) {\n                    this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                    this.highlightOptionChanged = true;\n                  }\n                }\n              }\n            } else {\n              var _highlightItemIndex3 = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n              if (_highlightItemIndex3 > 0) {\n                var _prevItemIndex = _highlightItemIndex3 - 1;\n\n                this.highlightOption = this.suggestions[_prevItemIndex];\n                this.highlightOptionChanged = true;\n              }\n            }\n\n            event.preventDefault();\n            break;\n          //enter\n\n          case 13:\n            if (this.highlightOption) {\n              this.selectItem(this.highlightOption);\n              this.hide();\n            }\n\n            event.preventDefault();\n            break;\n          //escape\n\n          case 27:\n            this.hide();\n            event.preventDefault();\n            break;\n          //tab\n\n          case 9:\n            if (this.highlightOption) {\n              this.selectItem(this.highlightOption);\n            }\n\n            this.hide();\n            break;\n        }\n      } else {\n        if (event.which === 40 && this.suggestions) {\n          this.search(event, event.target.value);\n        }\n      }\n\n      if (this.multiple) {\n        switch (event.which) {\n          //backspace\n          case 8:\n            if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n              this.value = _toConsumableArray(this.value);\n              var removedValue = this.value.pop();\n              this.onModelChange(this.value);\n              this.updateFilledState();\n              this.onUnselect.emit(removedValue);\n            }\n\n            break;\n        }\n      }\n\n      this.inputKeyDown = true;\n    }\n  }, {\n    key: \"onKeyup\",\n    value: function onKeyup(event) {\n      this.onKeyUp.emit(event);\n    }\n  }, {\n    key: \"onInputFocus\",\n    value: function onInputFocus(event) {\n      if (!this.itemClicked && this.completeOnFocus) {\n        var queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n        this.search(event, queryValue);\n      }\n\n      this.focus = true;\n      this.onFocus.emit(event);\n      this.itemClicked = false;\n    }\n  }, {\n    key: \"onInputBlur\",\n    value: function onInputBlur(event) {\n      this.focus = false;\n      this.onModelTouched();\n      this.onBlur.emit(event);\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(event) {\n      var _this4 = this;\n\n      if (this.forceSelection) {\n        var valid = false;\n        var inputValue = event.target.value.trim();\n\n        if (this.suggestions) {\n          var _iterator = _createForOfIteratorHelper(this.suggestions),\n              _step;\n\n          try {\n            var _loop = function _loop() {\n              var suggestion = _step.value;\n              var itemValue = _this4.field ? ObjectUtils.resolveFieldData(suggestion, _this4.field) : suggestion;\n\n              if (itemValue && inputValue === itemValue.trim()) {\n                valid = true;\n                _this4.forceSelectionUpdateModelTimeout = setTimeout(function () {\n                  _this4.selectItem(suggestion, false);\n                }, 250);\n                return \"break\";\n              }\n            };\n\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _ret = _loop();\n\n              if (_ret === \"break\") break;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        if (!valid) {\n          if (this.multiple) {\n            this.multiInputEL.nativeElement.value = '';\n          } else {\n            this.value = null;\n            this.inputEL.nativeElement.value = '';\n          }\n\n          this.onClear.emit(event);\n          this.onModelChange(this.value);\n          this.updateFilledState();\n        }\n      }\n    }\n  }, {\n    key: \"onInputPaste\",\n    value: function onInputPaste(event) {\n      this.onKeydown(event);\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(val) {\n      var selected = false;\n\n      if (this.value && this.value.length) {\n        for (var i = 0; i < this.value.length; i++) {\n          if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n            selected = true;\n            break;\n          }\n        }\n      }\n\n      return selected;\n    }\n  }, {\n    key: \"findOptionIndex\",\n    value: function findOptionIndex(option, suggestions) {\n      var index = -1;\n\n      if (suggestions) {\n        for (var i = 0; i < suggestions.length; i++) {\n          if (ObjectUtils.equals(option, suggestions[i])) {\n            index = i;\n            break;\n          }\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"findOptionGroupIndex\",\n    value: function findOptionGroupIndex(val, opts) {\n      var groupIndex, itemIndex;\n\n      if (opts) {\n        for (var i = 0; i < opts.length; i++) {\n          groupIndex = i;\n          itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n\n          if (itemIndex !== -1) {\n            break;\n          }\n        }\n      }\n\n      if (itemIndex !== -1) {\n        return {\n          groupIndex: groupIndex,\n          itemIndex: itemIndex\n        };\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: \"updateFilledState\",\n    value: function updateFilledState() {\n      if (this.multiple) this.filled = this.value && this.value.length || this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '';else this.filled = this.inputFieldValue && this.inputFieldValue != '' || this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '';\n      ;\n    }\n  }, {\n    key: \"updateInputField\",\n    value: function updateInputField() {\n      var formattedValue = this.value ? this.field ? ObjectUtils.resolveFieldData(this.value, this.field) || '' : this.value : '';\n      this.inputFieldValue = formattedValue;\n\n      if (this.inputEL && this.inputEL.nativeElement) {\n        this.inputEL.nativeElement.value = formattedValue;\n      }\n\n      this.updateFilledState();\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this5 = this;\n\n      if (!this.documentClickListener) {\n        var documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n        this.documentClickListener = this.renderer.listen(documentTarget, 'click', function (event) {\n          if (event.which === 3) {\n            return;\n          }\n\n          if (!_this5.inputClick && !_this5.isDropdownClick(event)) {\n            _this5.hide();\n          }\n\n          _this5.inputClick = false;\n\n          _this5.cd.markForCheck();\n        });\n      }\n    }\n  }, {\n    key: \"isDropdownClick\",\n    value: function isDropdownClick(event) {\n      if (this.dropdown) {\n        var target = event.target;\n        return target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"bindDocumentResizeListener\",\n    value: function bindDocumentResizeListener() {\n      this.documentResizeListener = this.onWindowResize.bind(this);\n      window.addEventListener('resize', this.documentResizeListener);\n    }\n  }, {\n    key: \"unbindDocumentResizeListener\",\n    value: function unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    }\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize() {\n      this.hide();\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this6 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, function () {\n          if (_this6.overlayVisible) {\n            _this6.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"onOverlayHide\",\n    value: function onOverlayHide() {\n      this.unbindDocumentClickListener();\n      this.unbindDocumentResizeListener();\n      this.unbindScrollListener();\n      this.overlay = null;\n      this.onHide.emit();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.forceSelectionUpdateModelTimeout) {\n        clearTimeout(this.forceSelectionUpdateModelTimeout);\n        this.forceSelectionUpdateModelTimeout = null;\n      }\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n\n      this.restoreOverlayAppend();\n      this.onOverlayHide();\n    }\n  }]);\n\n  return AutoComplete;\n}();\n\nAutoComplete.ɵfac = function AutoComplete_Factory(t) {\n  return new (t || AutoComplete)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers));\n};\n\nAutoComplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: AutoComplete,\n  selectors: [[\"p-autoComplete\"]],\n  contentQueries: function AutoComplete_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function AutoComplete_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n      ɵngcc0.ɵɵviewQuery(_c1, 1);\n      ɵngcc0.ɵɵviewQuery(_c2, 1);\n      ɵngcc0.ɵɵviewQuery(_c3, 1);\n      ɵngcc0.ɵɵviewQuery(_c4, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerEL = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputEL = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiInputEL = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiContainerEL = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownButton = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function AutoComplete_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus && !ctx.disabled || ctx.overlayVisible);\n    }\n  },\n  inputs: {\n    minLength: \"minLength\",\n    delay: \"delay\",\n    type: \"type\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    dropdownIcon: \"dropdownIcon\",\n    unique: \"unique\",\n    completeOnFocus: \"completeOnFocus\",\n    scrollHeight: \"scrollHeight\",\n    dropdownMode: \"dropdownMode\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    autocomplete: \"autocomplete\",\n    suggestions: \"suggestions\",\n    disabled: \"disabled\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    inputStyle: \"inputStyle\",\n    inputId: \"inputId\",\n    inputStyleClass: \"inputStyleClass\",\n    placeholder: \"placeholder\",\n    readonly: \"readonly\",\n    maxlength: \"maxlength\",\n    name: \"name\",\n    required: \"required\",\n    size: \"size\",\n    appendTo: \"appendTo\",\n    autoHighlight: \"autoHighlight\",\n    forceSelection: \"forceSelection\",\n    ariaLabel: \"ariaLabel\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    group: \"group\",\n    field: \"field\",\n    dropdown: \"dropdown\",\n    multiple: \"multiple\",\n    tabindex: \"tabindex\",\n    dataKey: \"dataKey\",\n    emptyMessage: \"emptyMessage\",\n    autofocus: \"autofocus\",\n    optionGroupChildren: \"optionGroupChildren\",\n    optionGroupLabel: \"optionGroupLabel\"\n  },\n  outputs: {\n    completeMethod: \"completeMethod\",\n    onSelect: \"onSelect\",\n    onUnselect: \"onUnselect\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onDropdownClick: \"onDropdownClick\",\n    onClear: \"onClear\",\n    onKeyUp: \"onKeyUp\",\n    onShow: \"onShow\",\n    onHide: \"onHide\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR])],\n  decls: 7,\n  vars: 12,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"class\", \"p-autocomplete-input p-inputtext p-component\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 3, \"ngStyle\", \"class\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-multiple-container p-component p-inputtext\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-loader pi pi-spinner pi-spin\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-autocomplete-dropdown\", \"pRipple\", \"\", 3, \"icon\", \"disabled\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"max-height\", \"ngStyle\", \"class\", 4, \"ngIf\"], [\"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 1, \"p-autocomplete-input\", \"p-inputtext\", \"p-component\", 3, \"ngStyle\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"in\", \"\"], [1, \"p-autocomplete-multiple-container\", \"p-component\", \"p-inputtext\", 3, \"ngClass\", \"click\"], [\"multiContainer\", \"\"], [\"class\", \"p-autocomplete-token\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-autocomplete-input-token\"], [\"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 3, \"disabled\", \"readonly\", \"autocomplete\", \"ngStyle\", \"input\", \"click\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"multiIn\", \"\"], [1, \"p-autocomplete-token\"], [\"token\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-autocomplete-token-label\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-token-icon pi pi-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"p-autocomplete-token-label\"], [1, \"p-autocomplete-token-icon\", \"pi\", \"pi-times-circle\", 3, \"click\"], [1, \"p-autocomplete-loader\", \"pi\", \"pi-spinner\", \"pi-spin\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-autocomplete-dropdown\", 3, \"icon\", \"disabled\", \"click\"], [\"ddBtn\", \"\"], [\"panel\", \"\"], [\"role\", \"listbox\", 1, \"p-autocomplete-items\"], [4, \"ngIf\"], [\"itemslist\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-autocomplete-item-group\"], [\"role\", \"option\", \"class\", \"p-autocomplete-item\", \"pRipple\", \"\", 3, \"ngClass\", \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"p-autocomplete-emptymessage p-autocomplete-item\", 4, \"ngIf\"], [\"role\", \"option\", \"pRipple\", \"\", 1, \"p-autocomplete-item\", 3, \"ngClass\", \"id\", \"click\"], [1, \"p-autocomplete-emptymessage\", \"p-autocomplete-item\"]],\n  template: function AutoComplete_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0, 1);\n      ɵngcc0.ɵɵtemplate(2, AutoComplete_input_2_Template, 2, 26, \"input\", 2);\n      ɵngcc0.ɵɵtemplate(3, AutoComplete_ul_3_Template, 6, 23, \"ul\", 3);\n      ɵngcc0.ɵɵtemplate(4, AutoComplete_i_4_Template, 1, 0, \"i\", 4);\n      ɵngcc0.ɵɵtemplate(5, AutoComplete_button_5_Template, 2, 3, \"button\", 5);\n      ɵngcc0.ɵɵtemplate(6, AutoComplete_div_6_Template, 7, 16, \"div\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(9, _c13, ctx.dropdown, ctx.multiple))(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.multiple);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dropdown);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, ɵngcc2.ButtonDirective, ɵngcc3.Ripple],\n  styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{margin-top:-.5rem;position:absolute;top:50%}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-bottom-right-radius:0;border-top-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-bottom-left-radius:0;border-top-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%}.p-autocomplete-panel{overflow:auto;position:absolute}.p-autocomplete-items{list-style-type:none;margin:0;padding:0}.p-autocomplete-item{cursor:pointer;overflow:hidden;position:relative;white-space:nowrap}.p-autocomplete-multiple-container{align-items:center;cursor:text;display:flex;flex-wrap:wrap;list-style-type:none;margin:0;overflow:hidden;padding:0}.p-autocomplete-token{align-items:center;cursor:default;display:inline-flex;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{display:inline-flex;flex:1 1 auto}.p-autocomplete-input-token input{background-color:transparent;border:0;border-radius:0;box-shadow:none;margin:0;outline:0 none;padding:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\nAutoComplete.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: IterableDiffers\n  }];\n};\n\nAutoComplete.propDecorators = {\n  minLength: [{\n    type: Input\n  }],\n  delay: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  panelStyle: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  panelStyleClass: [{\n    type: Input\n  }],\n  inputStyle: [{\n    type: Input\n  }],\n  inputId: [{\n    type: Input\n  }],\n  inputStyleClass: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  maxlength: [{\n    type: Input\n  }],\n  name: [{\n    type: Input\n  }],\n  required: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  appendTo: [{\n    type: Input\n  }],\n  autoHighlight: [{\n    type: Input\n  }],\n  forceSelection: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  autoZIndex: [{\n    type: Input\n  }],\n  baseZIndex: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input\n  }],\n  ariaLabelledBy: [{\n    type: Input\n  }],\n  dropdownIcon: [{\n    type: Input\n  }],\n  unique: [{\n    type: Input\n  }],\n  group: [{\n    type: Input\n  }],\n  completeOnFocus: [{\n    type: Input\n  }],\n  completeMethod: [{\n    type: Output\n  }],\n  onSelect: [{\n    type: Output\n  }],\n  onUnselect: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output\n  }],\n  onBlur: [{\n    type: Output\n  }],\n  onDropdownClick: [{\n    type: Output\n  }],\n  onClear: [{\n    type: Output\n  }],\n  onKeyUp: [{\n    type: Output\n  }],\n  onShow: [{\n    type: Output\n  }],\n  onHide: [{\n    type: Output\n  }],\n  field: [{\n    type: Input\n  }],\n  scrollHeight: [{\n    type: Input\n  }],\n  dropdown: [{\n    type: Input\n  }],\n  dropdownMode: [{\n    type: Input\n  }],\n  multiple: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  dataKey: [{\n    type: Input\n  }],\n  emptyMessage: [{\n    type: Input\n  }],\n  showTransitionOptions: [{\n    type: Input\n  }],\n  hideTransitionOptions: [{\n    type: Input\n  }],\n  autofocus: [{\n    type: Input\n  }],\n  autocomplete: [{\n    type: Input\n  }],\n  optionGroupChildren: [{\n    type: Input\n  }],\n  optionGroupLabel: [{\n    type: Input\n  }],\n  containerEL: [{\n    type: ViewChild,\n    args: ['container']\n  }],\n  inputEL: [{\n    type: ViewChild,\n    args: ['in']\n  }],\n  multiInputEL: [{\n    type: ViewChild,\n    args: ['multiIn']\n  }],\n  multiContainerEL: [{\n    type: ViewChild,\n    args: ['multiContainer']\n  }],\n  dropdownButton: [{\n    type: ViewChild,\n    args: ['ddBtn']\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }],\n  suggestions: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutoComplete, [{\n    type: Component,\n    args: [{\n      selector: 'p-autoComplete',\n      template: \"\\n        <span #container [ngClass]=\\\"{'p-autocomplete p-component':true,'p-autocomplete-dd':dropdown,'p-autocomplete-multiple':multiple}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <input *ngIf=\\\"!multiple\\\" #in [attr.type]=\\\"type\\\" [attr.id]=\\\"inputId\\\" [ngStyle]=\\\"inputStyle\\\" [class]=\\\"inputStyleClass\\\" [autocomplete]=\\\"autocomplete\\\" [attr.required]=\\\"required\\\" [attr.name]=\\\"name\\\"\\n            class=\\\"p-autocomplete-input p-inputtext p-component\\\" [ngClass]=\\\"{'p-autocomplete-dd-input':dropdown,'p-disabled': disabled}\\\" [value]=\\\"inputFieldValue\\\" aria-autocomplete=\\\"list\\\" [attr.aria-controls]=\\\"listId\\\" role=\\\"searchbox\\\" [attr.aria-expanded]=\\\"overlayVisible\\\" aria-haspopup=\\\"true\\\" [attr.aria-activedescendant]=\\\"'p-highlighted-option'\\\"\\n            (click)=\\\"onInputClick($event)\\\" (input)=\\\"onInput($event)\\\" (keydown)=\\\"onKeydown($event)\\\" (keyup)=\\\"onKeyup($event)\\\" [attr.autofocus]=\\\"autofocus\\\" (focus)=\\\"onInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\" (change)=\\\"onInputChange($event)\\\" (paste)=\\\"onInputPaste($event)\\\"\\n            [attr.placeholder]=\\\"placeholder\\\" [attr.size]=\\\"size\\\" [attr.maxlength]=\\\"maxlength\\\" [attr.tabindex]=\\\"tabindex\\\" [readonly]=\\\"readonly\\\" [disabled]=\\\"disabled\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\" [attr.aria-required]=\\\"required\\\"\\n            ><ul *ngIf=\\\"multiple\\\" #multiContainer class=\\\"p-autocomplete-multiple-container p-component p-inputtext\\\" [ngClass]=\\\"{'p-disabled':disabled,'p-focus':focus}\\\" (click)=\\\"multiIn.focus()\\\">\\n                <li #token *ngFor=\\\"let val of value\\\" class=\\\"p-autocomplete-token\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"selectedItemTemplate; context: {$implicit: val}\\\"></ng-container>\\n                    <span *ngIf=\\\"!selectedItemTemplate\\\" class=\\\"p-autocomplete-token-label\\\">{{resolveFieldData(val)}}</span>\\n                    <span  class=\\\"p-autocomplete-token-icon pi pi-times-circle\\\" (click)=\\\"removeItem(token)\\\" *ngIf=\\\"!disabled && !readonly\\\"></span>\\n                </li>\\n                <li class=\\\"p-autocomplete-input-token\\\">\\n                    <input #multiIn [attr.type]=\\\"type\\\" [attr.id]=\\\"inputId\\\" [disabled]=\\\"disabled\\\" [attr.placeholder]=\\\"(value&&value.length ? null : placeholder)\\\" [attr.tabindex]=\\\"tabindex\\\" [attr.maxlength]=\\\"maxlength\\\" (input)=\\\"onInput($event)\\\"  (click)=\\\"onInputClick($event)\\\"\\n                            (keydown)=\\\"onKeydown($event)\\\" [readonly]=\\\"readonly\\\" (keyup)=\\\"onKeyup($event)\\\" [attr.autofocus]=\\\"autofocus\\\" (focus)=\\\"onInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\" (change)=\\\"onInputChange($event)\\\" (paste)=\\\"onInputPaste($event)\\\" [autocomplete]=\\\"autocomplete\\\"\\n                            [ngStyle]=\\\"inputStyle\\\" [class]=\\\"inputStyleClass\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\" [attr.aria-required]=\\\"required\\\"\\n                            aria-autocomplete=\\\"list\\\" [attr.aria-controls]=\\\"listId\\\" role=\\\"searchbox\\\" [attr.aria-expanded]=\\\"overlayVisible\\\" aria-haspopup=\\\"true\\\" [attr.aria-activedescendant]=\\\"'p-highlighted-option'\\\">\\n                </li>\\n            </ul>\\n            <i *ngIf=\\\"loading\\\" class=\\\"p-autocomplete-loader pi pi-spinner pi-spin\\\"></i><button #ddBtn type=\\\"button\\\" pButton [icon]=\\\"dropdownIcon\\\" class=\\\"p-autocomplete-dropdown\\\" [disabled]=\\\"disabled\\\" pRipple\\n                (click)=\\\"handleDropdownClick($event)\\\" *ngIf=\\\"dropdown\\\" [attr.tabindex]=\\\"tabindex\\\"></button>\\n            <div #panel *ngIf=\\\"overlayVisible\\\" [ngClass]=\\\"['p-autocomplete-panel p-component']\\\" [style.max-height]=\\\"scrollHeight\\\" [ngStyle]=\\\"panelStyle\\\" [class]=\\\"panelStyleClass\\\"\\n                [@overlayAnimation]=\\\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\" (@overlayAnimation.start)=\\\"onOverlayAnimationStart($event)\\\">\\n                <ul role=\\\"listbox\\\" [attr.id]=\\\"listId\\\" class=\\\"p-autocomplete-items\\\">\\n                    <ng-container *ngIf=\\\"group\\\">\\n                        <ng-template ngFor let-optgroup [ngForOf]=\\\"suggestions\\\">\\n                            <li class=\\\"p-autocomplete-item-group\\\">\\n                                <span *ngIf=\\\"!groupTemplate\\\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\\n                                <ng-container *ngTemplateOutlet=\\\"groupTemplate; context: {$implicit: optgroup}\\\"></ng-container>\\n                            </li>\\n                            <ng-container *ngTemplateOutlet=\\\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\\\"></ng-container>\\n                        </ng-template>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!group\\\">\\n                            <ng-container *ngTemplateOutlet=\\\"itemslist; context: {$implicit: suggestions}\\\"></ng-container>\\n                    </ng-container>\\n                    <ng-template #itemslist let-suggestionsToDisplay>\\n                        <li role=\\\"option\\\" *ngFor=\\\"let option of suggestionsToDisplay; let idx = index\\\" class=\\\"p-autocomplete-item\\\" pRipple [ngClass]=\\\"{'p-highlight': (option === highlightOption)}\\\" [id]=\\\"highlightOption == option ? 'p-highlighted-option':''\\\" (click)=\\\"selectItem(option)\\\">\\n                            <span *ngIf=\\\"!itemTemplate\\\">{{resolveFieldData(option)}}</span>\\n                            <ng-container *ngTemplateOutlet=\\\"itemTemplate; context: {$implicit: option, index: idx}\\\"></ng-container>\\n                        </li>\\n                        <li *ngIf=\\\"noResults && emptyMessage\\\" class=\\\"p-autocomplete-emptymessage p-autocomplete-item\\\">{{emptyMessage}}</li>\\n                    </ng-template>\\n                </ul>\\n            </div>\\n        </span>\\n    \",\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))])])],\n      host: {\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': '(focus && !disabled) || overlayVisible'\n      },\n      providers: [AUTOCOMPLETE_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{margin-top:-.5rem;position:absolute;top:50%}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-bottom-right-radius:0;border-top-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-bottom-left-radius:0;border-top-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%}.p-autocomplete-panel{overflow:auto;position:absolute}.p-autocomplete-items{list-style-type:none;margin:0;padding:0}.p-autocomplete-item{cursor:pointer;overflow:hidden;position:relative;white-space:nowrap}.p-autocomplete-multiple-container{align-items:center;cursor:text;display:flex;flex-wrap:wrap;list-style-type:none;margin:0;overflow:hidden;padding:0}.p-autocomplete-token{align-items:center;cursor:default;display:inline-flex;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{display:inline-flex;flex:1 1 auto}.p-autocomplete-input-token input{background-color:transparent;border:0;border-radius:0;box-shadow:none;margin:0;outline:0 none;padding:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }];\n  }, {\n    minLength: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    dropdownIcon: [{\n      type: Input\n    }],\n    unique: [{\n      type: Input\n    }],\n    completeOnFocus: [{\n      type: Input\n    }],\n    completeMethod: [{\n      type: Output\n    }],\n    onSelect: [{\n      type: Output\n    }],\n    onUnselect: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onDropdownClick: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    onKeyUp: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    dropdownMode: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    suggestions: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    autoHighlight: [{\n      type: Input\n    }],\n    forceSelection: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    field: [{\n      type: Input\n    }],\n    dropdown: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    containerEL: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    inputEL: [{\n      type: ViewChild,\n      args: ['in']\n    }],\n    multiInputEL: [{\n      type: ViewChild,\n      args: ['multiIn']\n    }],\n    multiContainerEL: [{\n      type: ViewChild,\n      args: ['multiContainer']\n    }],\n    dropdownButton: [{\n      type: ViewChild,\n      args: ['ddBtn']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar AutoCompleteModule = function AutoCompleteModule() {\n  _classCallCheck(this, AutoCompleteModule);\n};\n\nAutoCompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: AutoCompleteModule\n});\nAutoCompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function AutoCompleteModule_Factory(t) {\n    return new (t || AutoCompleteModule)();\n  },\n  imports: [[CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule], SharedModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AutoCompleteModule, {\n    declarations: function declarations() {\n      return [AutoComplete];\n    },\n    imports: function imports() {\n      return [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule];\n    },\n    exports: function exports() {\n      return [AutoComplete, SharedModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutoCompleteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule],\n      exports: [AutoComplete, SharedModule],\n      declarations: [AutoComplete]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule };","map":{"version":3,"sources":["../../src/app/components/autocomplete/autocomplete.ts","../../src/app/components/autocomplete/primeng-autocomplete.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ViewChild,ElementRef,AfterViewChecked,AfterContentInit,OnDestroy,Input,Output,EventEmitter,ContentChildren,QueryList,TemplateRef,Renderer2,forwardRef,ChangeDetectorRef,IterableDiffers,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {trigger,style,transition,animate,AnimationEvent} from '@angular/animations';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {ButtonModule} from 'primeng/button';\nimport {RippleModule} from 'primeng/ripple';\nimport {SharedModule,PrimeTemplate} from 'primeng/api';\nimport {DomHandler, ConnectedOverlayScrollHandler} from 'primeng/dom';\nimport {ObjectUtils, UniqueComponentId} from 'primeng/utils';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AutoComplete),\n  multi: true\n};\n\n@Component({\n    selector: 'p-autoComplete',\n    template: `\n        <span #container [ngClass]=\"{'p-autocomplete p-component':true,'p-autocomplete-dd':dropdown,'p-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n            class=\"p-autocomplete-input p-inputtext p-component\" [ngClass]=\"{'p-autocomplete-dd-input':dropdown,'p-disabled': disabled}\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n            (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n            [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n            ><ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{'p-disabled':disabled,'p-focus':focus}\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n                    <span  class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\" [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" [attr.maxlength]=\"maxlength\" (input)=\"onInput($event)\"  (click)=\"onInputClick($event)\"\n                            (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\" [autocomplete]=\"autocomplete\"\n                            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n                            aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i><button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" class=\"p-autocomplete-dropdown\" [disabled]=\"disabled\" pRipple\n                (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\"></button>\n            <div #panel *ngIf=\"overlayVisible\" [ngClass]=\"['p-autocomplete-panel p-component']\" [style.max-height]=\"scrollHeight\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n                <ul role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"suggestions\">\n                            <li class=\"p-autocomplete-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: suggestions}\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-suggestionsToDisplay>\n                        <li role=\"option\" *ngFor=\"let option of suggestionsToDisplay; let idx = index\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                            <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: idx}\"></ng-container>\n                        </li>\n                        <li *ngIf=\"noResults && emptyMessage\" class=\"p-autocomplete-emptymessage p-autocomplete-item\">{{emptyMessage}}</li>\n                    </ng-template>\n                </ul>\n            </div>\n        </span>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('{{showTransitionParams}}')\n              ]),\n              transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n              ])\n        ])\n    ],\n    host: {\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': '(focus && !disabled) || overlayVisible'\n    },\n    providers: [AUTOCOMPLETE_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./autocomplete.css']\n})\nexport class AutoComplete implements AfterViewChecked,AfterContentInit,OnDestroy,ControlValueAccessor {\n\n    @Input() minLength: number = 1;\n\n    @Input() delay: number = 300;\n\n    @Input() style: any;\n\n    @Input() panelStyle: any;\n\n    @Input() styleClass: string;\n\n    @Input() panelStyleClass: string;\n\n    @Input() inputStyle: any;\n\n    @Input() inputId: string;\n\n    @Input() inputStyleClass: string;\n\n    @Input() placeholder: string;\n\n    @Input() readonly: boolean;\n\n    @Input() disabled: boolean;\n\n    @Input() maxlength: number;\n\n    @Input() name: string;\n\n    @Input() required: boolean;\n\n    @Input() size: number;\n\n    @Input() appendTo: any;\n\n    @Input() autoHighlight: boolean;\n\n    @Input() forceSelection: boolean;\n\n    @Input() type: string = 'text';\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() ariaLabel: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() dropdownIcon: string = \"pi pi-chevron-down\";\n\n    @Input() unique: boolean = true;\n\n    @Input() group: boolean;\n\n    @Input() completeOnFocus: boolean = false;\n\n    @Output() completeMethod: EventEmitter<any> = new EventEmitter();\n\n    @Output() onSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onUnselect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Output() onDropdownClick: EventEmitter<any> = new EventEmitter();\n\n\t@Output() onClear: EventEmitter<any> = new EventEmitter();\n\n    @Output() onKeyUp: EventEmitter<any> = new EventEmitter();\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @Input() field: string;\n\n    @Input() scrollHeight: string = '200px';\n\n    @Input() dropdown: boolean;\n\n    @Input() dropdownMode: string = 'blank';\n\n    @Input() multiple: boolean;\n\n    @Input() tabindex: number;\n\n    @Input() dataKey: string;\n\n    @Input() emptyMessage: string;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @Input() autofocus: boolean;\n\n    @Input() autocomplete: string = 'off';\n\n    @Input() optionGroupChildren: string;\n\n    @Input() optionGroupLabel: string;\n\n    @ViewChild('container') containerEL: ElementRef;\n\n    @ViewChild('in') inputEL: ElementRef;\n\n    @ViewChild('multiIn') multiInputEL: ElementRef;\n\n    @ViewChild('multiContainer') multiContainerEL: ElementRef;\n\n    @ViewChild('ddBtn') dropdownButton: ElementRef;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    overlay: HTMLDivElement;\n\n    itemTemplate: TemplateRef<any>;\n\n    selectedItemTemplate: TemplateRef<any>;\n    \n    groupTemplate: TemplateRef<any>;\n\n    value: any;\n\n    _suggestions: any[];\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    timeout: any;\n\n    overlayVisible: boolean = false;\n\n    documentClickListener: any;\n\n    suggestionsUpdated: boolean;\n\n    highlightOption: any;\n\n    highlightOptionChanged: boolean;\n\n    focus: boolean = false;\n\n    filled: boolean;\n\n    inputClick: boolean;\n\n    inputKeyDown: boolean;\n\n    noResults: boolean;\n\n    differ: any;\n\n    inputFieldValue: string = null;\n\n    loading: boolean;\n\n    scrollHandler: any;\n\n    documentResizeListener: any;\n\n    forceSelectionUpdateModelTimeout: any;\n\n    listId: string;\n\n    itemClicked: boolean;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef, public differs: IterableDiffers) {\n        this.differ = differs.find([]).create(null);\n        this.listId = UniqueComponentId() + '_list';\n    }\n\n    @Input() get suggestions(): any[] {\n        return this._suggestions;\n    }\n\n    set suggestions(val:any[]) {\n        this._suggestions = val;\n        this.handleSuggestionsChange();\n    }\n\n    ngAfterViewChecked() {\n        //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n        if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n            setTimeout(() => {\n                if (this.overlay) {\n                    this.alignOverlay();\n                }\n            }, 1);\n            this.suggestionsUpdated = false;\n        }\n\n        if (this.highlightOptionChanged) {\n            setTimeout(() => {\n                if (this.overlay) {\n                    let listItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n                    if (listItem) {\n                        DomHandler.scrollInView(this.overlay, listItem);\n                    }\n                }\n            }, 1);\n            this.highlightOptionChanged = false;\n        }\n    }\n\n    handleSuggestionsChange() {\n        if (this._suggestions != null && this.loading) {\n            this.highlightOption = null;\n            if (this._suggestions.length) {\n                this.noResults = false;\n                this.show();\n                this.suggestionsUpdated = true;\n\n                if (this.autoHighlight) {\n                    this.highlightOption = this._suggestions[0];\n                }\n            }\n            else {\n                this.noResults = true;\n\n                if (this.emptyMessage) {\n                    this.show();\n                    this.suggestionsUpdated = true;\n                }\n                else {\n                    this.hide();\n                }\n            }\n\n            this.loading = false;\n        }\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                break;\n\n                case 'group':\n                    this.groupTemplate = item.template;\n                break;\n\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                break;\n\n                default:\n                    this.itemTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    writeValue(value: any) : void {\n        this.value = value;\n        this.filled = this.value && this.value != '';\n        this.updateInputField();\n        this.cd.markForCheck();\n    }\n\n    getOptionGroupChildren(optionGroup: any) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n\n    getOptionGroupLabel(optionGroup: any) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : (optionGroup.label != undefined ? optionGroup.label : optionGroup);\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    onInput(event: Event) {\n        // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n        if (!this.inputKeyDown && DomHandler.isIE()) {\n            return;\n        }\n\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n\n        let value = (<HTMLInputElement> event.target).value;\n        if (!this.multiple && !this.forceSelection) {\n            this.onModelChange(value);\n        }\n\n        if (value.length === 0 && !this.multiple) {\n            this.hide();\n            this.onClear.emit(event);\n\t        this.onModelChange(value);\n        }\n\n        if (value.length >= this.minLength) {\n            this.timeout = setTimeout(() => {\n                this.search(event, value);\n            }, this.delay);\n        }\n        else {\n            this.hide();\n        }\n        this.updateFilledState();\n        this.inputKeyDown = false;\n    }\n\n    onInputClick(event: MouseEvent) {\n        if (this.documentClickListener) {\n            this.inputClick = true;\n        }\n    }\n\n    search(event: any, query: string) {\n        //allow empty string but not undefined or null\n       if (query === undefined || query === null) {\n           return;\n       }\n\n       this.loading = true;\n\n       this.completeMethod.emit({\n           originalEvent: event,\n           query: query\n       });\n    }\n\n    selectItem(option: any, focus: boolean = true) {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n\n        if (this.multiple) {\n            this.multiInputEL.nativeElement.value = '';\n            this.value = this.value||[];\n            if (!this.isSelected(option) || !this.unique) {\n                this.value = [...this.value,option];\n                this.onModelChange(this.value);\n            }\n        }\n        else {\n            this.inputEL.nativeElement.value = this.field ? this.getFieldData(option) : option;\n            this.value = option;\n            this.onModelChange(this.value);\n        }\n\n        this.onSelect.emit(option);\n        this.updateFilledState();\n\n        if (focus) {\n            this.itemClicked = true;\n            this.focusInput();\n        }\n    }\n\n    show() {\n        if (this.multiInputEL || this.inputEL) {\n            let hasFocus = this.multiple ?\n                this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement :\n                this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n\n            if (!this.overlayVisible && hasFocus) {\n                this.overlayVisible = true;\n            }\n        }\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                this.appendOverlay();\n                if (this.autoZIndex) {\n                    this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                }\n                this.alignOverlay();\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n                this.onShow.emit(event);\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n\n            if (!this.overlay.style.minWidth) {\n                this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n            }\n        }\n    }\n\n    resolveFieldData(value) {\n        return this.field ? ObjectUtils.resolveFieldData(value, this.field): value;\n    }\n\n    getFieldData(option) {\n        let data = ObjectUtils.resolveFieldData(option, this.field);\n        return data !== null ? data : '';\n    }\n\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, (this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement));\n        else\n            DomHandler.relativePosition(this.overlay, (this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement));\n    }\n\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n\n    handleDropdownClick(event) {\n        if (!this.overlayVisible) {\n            this.focusInput();\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n\n            if (this.dropdownMode === 'blank')\n                this.search(event, '');\n            else if (this.dropdownMode === 'current')\n                this.search(event, queryValue);\n\n            this.onDropdownClick.emit({\n                originalEvent: event,\n                query: queryValue\n            });\n        }\n        else {\n            this.hide();\n        }\n    }\n\n    focusInput() {\n        if (this.multiple)\n            this.multiInputEL.nativeElement.focus();\n        else\n            this.inputEL.nativeElement.focus();\n    }\n\n    removeItem(item: any) {\n        let itemIndex = DomHandler.index(item);\n        let removedValue = this.value[itemIndex];\n        this.value = this.value.filter((val, i) => i!=itemIndex);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n        this.onUnselect.emit(removedValue);\n    }\n\n    onKeydown(event) {\n        if (this.overlayVisible) {\n            switch(event.which) {\n                //down\n                case 40:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n                        if (highlightItemIndex !== -1) {\n                            let nextItemIndex = highlightItemIndex.itemIndex + 1;\n                            if (nextItemIndex < (this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length)) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n                        if (highlightItemIndex != -1) {\n                            var nextItemIndex = highlightItemIndex + 1;\n                            if (nextItemIndex != (this.suggestions.length)) {\n                                this.highlightOption = this.suggestions[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.suggestions[0];\n                        }\n                    }\n\n                    event.preventDefault();\n                break;\n\n                //up\n                case 38:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let prevItemIndex = highlightItemIndex.itemIndex - 1;\n                            if (prevItemIndex >= 0) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[prevItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (prevItemIndex < 0) {\n                                let prevGroup = this.suggestions[highlightItemIndex.groupIndex - 1];\n                                if (prevGroup) {\n                                    this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                                    this.highlightOptionChanged = true;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n                        if (highlightItemIndex > 0) {\n                            let prevItemIndex = highlightItemIndex - 1;\n                            this.highlightOption = this.suggestions[prevItemIndex];\n                            this.highlightOptionChanged = true;\n                        }\n                    }\n\n                    event.preventDefault();\n                break;\n\n                //enter\n                case 13:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                        this.hide();\n                    }\n                    event.preventDefault();\n                break;\n\n                //escape\n                case 27:\n                    this.hide();\n                    event.preventDefault();\n                break;\n\n\n                //tab\n                case 9:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                    }\n                    this.hide();\n                break;\n            }\n        } else {\n            if (event.which === 40 && this.suggestions) {\n                this.search(event,event.target.value);\n            }\n        }\n\n        if (this.multiple) {\n            switch(event.which) {\n                //backspace\n                case 8:\n                    if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n                        this.value = [...this.value];\n                        const removedValue = this.value.pop();\n                        this.onModelChange(this.value);\n                        this.updateFilledState();\n                        this.onUnselect.emit(removedValue);\n                    }\n                break;\n            }\n        }\n\n        this.inputKeyDown = true;\n    }\n\n    onKeyup(event) {\n        this.onKeyUp.emit(event);\n    }\n\n    onInputFocus(event) {\n        if (!this.itemClicked && this.completeOnFocus ) {\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            this.search(event, queryValue);\n        }\n\n        this.focus = true;\n        this.onFocus.emit(event);\n        this.itemClicked = false;\n    }\n\n    onInputBlur(event) {\n        this.focus = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n\n    onInputChange(event) {\n        if (this.forceSelection) {\n            let valid = false;\n            let inputValue = event.target.value.trim();\n\n            if (this.suggestions)  {\n                for (let suggestion of this.suggestions) {\n                    let itemValue = this.field ? ObjectUtils.resolveFieldData(suggestion, this.field) : suggestion;\n                    if (itemValue && inputValue === itemValue.trim()) {\n                        valid = true;\n                        this.forceSelectionUpdateModelTimeout = setTimeout(() => {\n                            this.selectItem(suggestion, false);\n                        }, 250);\n                        break;\n                    }\n                }\n            }\n\n            if (!valid) {\n                if (this.multiple) {\n                    this.multiInputEL.nativeElement.value = '';\n                }\n                else {\n                    this.value = null;\n                    this.inputEL.nativeElement.value = '';\n                }\n\n                this.onClear.emit(event);\n                this.onModelChange(this.value);\n                this.updateFilledState();\n            }\n        }\n    }\n\n    onInputPaste(event: ClipboardEvent) {\n        this.onKeydown(event);\n    }\n\n    isSelected(val: any): boolean {\n        let selected: boolean = false;\n        if (this.value && this.value.length) {\n            for (let i = 0; i < this.value.length; i++) {\n                if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n                    selected = true;\n                    break;\n                }\n            }\n        }\n        return selected;\n    }\n\n    findOptionIndex(option, suggestions): number {\n        let index: number = -1;\n        if (suggestions) {\n            for (let i = 0; i < suggestions.length; i++) {\n                if (ObjectUtils.equals(option, suggestions[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n\n        return index;\n    }\n\n    findOptionGroupIndex(val: any, opts: any[]): any {\n        let groupIndex, itemIndex;\n\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                groupIndex = i;\n                itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n\n                if (itemIndex !== -1) {\n                    break;\n                }\n            }\n        }\n\n        if (itemIndex !== -1) {\n            return {groupIndex: groupIndex, itemIndex: itemIndex};\n        }\n        else {\n            return -1;\n        }\n    }\n\n    updateFilledState() {\n        if (this.multiple)\n            this.filled = (this.value && this.value.length) || (this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '');\n        else\n            this.filled = (this.inputFieldValue && this.inputFieldValue != '') || (this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '');;\n    }\n\n    updateInputField() {\n        let formattedValue = this.value ? (this.field ? ObjectUtils.resolveFieldData(this.value, this.field)||'' : this.value) : '';\n        this.inputFieldValue = formattedValue;\n\n        if (this.inputEL && this.inputEL.nativeElement) {\n            this.inputEL.nativeElement.value = formattedValue;\n        }\n\n        this.updateFilledState();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\n                if (event.which === 3) {\n                    return;\n                }\n\n                if (!this.inputClick && !this.isDropdownClick(event)) {\n                    this.hide();\n                }\n\n                this.inputClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n\n    isDropdownClick(event) {\n        if (this.dropdown) {\n            let target = event.target;\n            return (target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement);\n        }\n        else {\n            return false;\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onWindowResize() {\n        this.hide();\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n        this.onHide.emit();\n    }\n\n    ngOnDestroy() {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,InputTextModule,ButtonModule,SharedModule,RippleModule],\n    exports: [AutoComplete,SharedModule],\n    declarations: [AutoComplete]\n})\nexport class AutoCompleteModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}