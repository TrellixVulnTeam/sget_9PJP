import { HttpErrorResponse } from '@angular/common/http';
import { FormNotificationService } from './form-notification.service';
import { ErrorProvider } from '../../error/providers/error.provider';
/**
 * Provedor de error para criação de erros de notificação.
 * @class
 */
import * as ɵngcc0 from '@angular/core';
export declare class FormNotificationErrorProvider implements ErrorProvider {
    private formNotificationService;
    /**
     * Método construtor
     * @param {FormtNotificationService} formNotificationService
     * @constructor
     */
    constructor(formNotificationService: FormNotificationService);
    /**
     * Método responsável pela identificação de erros
     * @public
     * @param {Error | HttpErrorResponse} error
     * @returns Boolean
     */
    shouldHandle(error: Error | HttpErrorResponse): Boolean;
    /**
     * Método para emissão de erros
     * @public
     * @param {HttpErrorResponse} error
     * @returns void
     */
    handle(error: HttpErrorResponse): void;
    /**
     * Método iteração de violações e emissão de erros
     * @param values
     */
    violation(form: string, values: ({
        field: string;
        message: string;
    })[]): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FormNotificationErrorProvider, never>;
}

//# sourceMappingURL=form-notification-error-provider.service.d.ts.map