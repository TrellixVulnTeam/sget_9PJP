{"ast":null,"code":"import _toConsumableArray from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, NgZone, Input, Output, ViewChild, ChangeDetectorRef, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { MessageService, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { RippleModule } from 'primeng/ripple';\nimport { trigger, state, style, transition, animate, query, animateChild } from '@angular/animations';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'primeng/ripple';\nimport * as ɵngcc3 from 'primeng/api';\nvar _c0 = [\"container\"];\n\nvar _c1 = function _c1(a0, a1, a2, a3) {\n  return {\n    \"pi-info-circle\": a0,\n    \"pi-exclamation-triangle\": a1,\n    \"pi-times-circle\": a2,\n    \"pi-check\": a3\n  };\n};\n\nfunction ToastItem_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"span\", 6);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 8);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 9);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"p-toast-message-icon pi\" + (ctx_r1.message.icon ? \" \" + ctx_r1.message.icon : \"\"));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(5, _c1, ctx_r1.message.severity == \"info\", ctx_r1.message.severity == \"warn\", ctx_r1.message.severity == \"error\", ctx_r1.message.severity == \"success\"));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.message.summary);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.message.detail);\n  }\n}\n\nfunction ToastItem_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function ToastItem_button_4_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onCloseIconClick($event);\n    })(\"keydown.enter\", function ToastItem_button_4_Template_button_keydown_enter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.onCloseIconClick($event);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction ToastItem_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c2 = function _c2(a0, a1, a2, a3) {\n  return {\n    showTransformParams: a0,\n    hideTransformParams: a1,\n    showTransitionParams: a2,\n    hideTransitionParams: a3\n  };\n};\n\nvar _c3 = function _c3(a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nvar _c4 = function _c4(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Toast_p_toastItem_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-toastItem\", 3);\n    ɵngcc0.ɵɵlistener(\"onClose\", function Toast_p_toastItem_2_Template_p_toastItem_onClose_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onMessageClose($event);\n    })(\"@toastAnimation.start\", function Toast_p_toastItem_2_Template_p_toastItem_animation_toastAnimation_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.onAnimationStart($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var msg_r2 = ctx.$implicit;\n    var i_r3 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"message\", msg_r2)(\"index\", i_r3)(\"template\", ctx_r1.template)(\"@toastAnimation\", undefined)(\"showTransformOptions\", ctx_r1.showTransformOptions)(\"hideTransformOptions\", ctx_r1.hideTransformOptions)(\"showTransitionOptions\", ctx_r1.showTransitionOptions)(\"hideTransitionOptions\", ctx_r1.hideTransitionOptions);\n  }\n}\n\nvar ToastItem = /*#__PURE__*/function () {\n  function ToastItem(zone) {\n    _classCallCheck(this, ToastItem);\n\n    this.zone = zone;\n    this.onClose = new EventEmitter();\n  }\n\n  _createClass(ToastItem, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.initTimeout();\n    }\n  }, {\n    key: \"initTimeout\",\n    value: function initTimeout() {\n      var _this = this;\n\n      if (!this.message.sticky) {\n        this.zone.runOutsideAngular(function () {\n          _this.timeout = setTimeout(function () {\n            _this.onClose.emit({\n              index: _this.index,\n              message: _this.message\n            });\n          }, _this.message.life || 3000);\n        });\n      }\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function () {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n      }\n    })\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.clearTimeout();\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.initTimeout();\n    }\n  }, {\n    key: \"onCloseIconClick\",\n    value: function onCloseIconClick(event) {\n      this.clearTimeout();\n      this.onClose.emit({\n        index: this.index,\n        message: this.message\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.clearTimeout();\n    }\n  }]);\n\n  return ToastItem;\n}();\n\nToastItem.ɵfac = function ToastItem_Factory(t) {\n  return new (t || ToastItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nToastItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ToastItem,\n  selectors: [[\"p-toastItem\"]],\n  viewQuery: function ToastItem_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n    }\n  },\n  inputs: {\n    message: \"message\",\n    index: \"index\",\n    template: \"template\",\n    showTransformOptions: \"showTransformOptions\",\n    hideTransformOptions: \"hideTransformOptions\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\"\n  },\n  outputs: {\n    onClose: \"onClose\"\n  },\n  decls: 6,\n  vars: 16,\n  consts: [[1, \"p-toast-message\", 3, \"ngClass\", \"mouseenter\", \"mouseleave\"], [\"container\", \"\"], [\"role\", \"alert\", \"aria-live\", \"assertive\", \"aria-atomic\", \"true\", 1, \"p-toast-message-content\"], [4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-toast-icon-close p-link\", \"pRipple\", \"\", 3, \"click\", \"keydown.enter\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\"], [1, \"p-toast-message-text\"], [1, \"p-toast-summary\"], [1, \"p-toast-detail\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-toast-icon-close\", \"p-link\", 3, \"click\", \"keydown.enter\"], [1, \"p-toast-icon-close-icon\", \"pi\", \"pi-times\"]],\n  template: function ToastItem_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"mouseenter\", function ToastItem_Template_div_mouseenter_0_listener() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function ToastItem_Template_div_mouseleave_0_listener() {\n        return ctx.onMouseLeave();\n      });\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, ToastItem_ng_container_3_Template, 7, 10, \"ng-container\", 3);\n      ɵngcc0.ɵɵtemplate(4, ToastItem_button_4_Template, 2, 0, \"button\", 4);\n      ɵngcc0.ɵɵtemplate(5, ToastItem_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", \"p-toast-message-\" + ctx.message.severity)(\"@messageState\", ɵngcc0.ɵɵpureFunction1(12, _c3, ɵngcc0.ɵɵpureFunction4(7, _c2, ctx.showTransformOptions, ctx.hideTransformOptions, ctx.showTransitionOptions, ctx.hideTransitionOptions)));\n      ɵngcc0.ɵɵattribute(\"id\", ctx.message.id);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message.closable !== false);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(14, _c4, ctx.message));\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc2.Ripple],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('messageState', [state('visible', style({\n      transform: 'translateY(0)',\n      opacity: 1\n    })), transition('void => *', [style({\n      transform: '{{showTransformParams}}',\n      opacity: 0\n    }), animate('{{showTransitionParams}}')]), transition('* => void', [animate('{{hideTransitionParams}}', style({\n      height: 0,\n      opacity: 0,\n      transform: '{{hideTransformParams}}'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\nToastItem.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }];\n};\n\nToastItem.propDecorators = {\n  message: [{\n    type: Input\n  }],\n  index: [{\n    type: Input\n  }],\n  template: [{\n    type: Input\n  }],\n  showTransformOptions: [{\n    type: Input\n  }],\n  hideTransformOptions: [{\n    type: Input\n  }],\n  showTransitionOptions: [{\n    type: Input\n  }],\n  hideTransitionOptions: [{\n    type: Input\n  }],\n  onClose: [{\n    type: Output\n  }],\n  containerViewChild: [{\n    type: ViewChild,\n    args: ['container']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastItem, [{\n    type: Component,\n    args: [{\n      selector: 'p-toastItem',\n      template: \"\\n        <div #container [attr.id]=\\\"message.id\\\" class=\\\"p-toast-message\\\" [ngClass]=\\\"'p-toast-message-' + message.severity\\\" [@messageState]=\\\"{value: 'visible', params: {showTransformParams: showTransformOptions, hideTransformParams: hideTransformOptions, showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\"\\n                (mouseenter)=\\\"onMouseEnter()\\\" (mouseleave)=\\\"onMouseLeave()\\\">\\n            <div class=\\\"p-toast-message-content\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\">\\n                <ng-container *ngIf=\\\"!template\\\">\\n                    <span [class]=\\\"'p-toast-message-icon pi' + (message.icon ? ' ' + message.icon : '')\\\" [ngClass]=\\\"{'pi-info-circle': message.severity == 'info', 'pi-exclamation-triangle': message.severity == 'warn',\\n                        'pi-times-circle': message.severity == 'error', 'pi-check' :message.severity == 'success'}\\\"></span>\\n                    <div class=\\\"p-toast-message-text\\\">\\n                        <div class=\\\"p-toast-summary\\\">{{message.summary}}</div>\\n                        <div class=\\\"p-toast-detail\\\">{{message.detail}}</div>\\n                    </div>\\n                </ng-container>\\n                <button type=\\\"button\\\" class=\\\"p-toast-icon-close p-link\\\" (click)=\\\"onCloseIconClick($event)\\\" (keydown.enter)=\\\"onCloseIconClick($event)\\\" *ngIf=\\\"message.closable !== false\\\" pRipple>\\n                    <span class=\\\"p-toast-icon-close-icon pi pi-times\\\"></span>\\n                </button>\\n                <ng-container *ngTemplateOutlet=\\\"template; context: {$implicit: message}\\\"></ng-container>\\n            </div>\\n        </div>\\n    \",\n      animations: [trigger('messageState', [state('visible', style({\n        transform: 'translateY(0)',\n        opacity: 1\n      })), transition('void => *', [style({\n        transform: '{{showTransformParams}}',\n        opacity: 0\n      }), animate('{{showTransitionParams}}')]), transition('* => void', [animate('{{hideTransitionParams}}', style({\n        height: 0,\n        opacity: 0,\n        transform: '{{hideTransformParams}}'\n      }))])])],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    onClose: [{\n      type: Output\n    }],\n    message: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    showTransformOptions: [{\n      type: Input\n    }],\n    hideTransformOptions: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }]\n  });\n})();\n\nvar Toast = /*#__PURE__*/function () {\n  function Toast(messageService, cd) {\n    _classCallCheck(this, Toast);\n\n    this.messageService = messageService;\n    this.cd = cd;\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.position = 'top-right';\n    this.preventOpenDuplicates = false;\n    this.preventDuplicates = false;\n    this.showTransformOptions = 'translateY(100%)';\n    this.hideTransformOptions = 'translateY(-100%)';\n    this.showTransitionOptions = '300ms ease-out';\n    this.hideTransitionOptions = '250ms ease-in';\n    this.onClose = new EventEmitter();\n  }\n\n  _createClass(Toast, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      this.messageSubscription = this.messageService.messageObserver.subscribe(function (messages) {\n        if (messages) {\n          if (messages instanceof Array) {\n            var filteredMessages = messages.filter(function (m) {\n              return _this2.canAdd(m);\n            });\n\n            _this2.add(filteredMessages);\n          } else if (_this2.canAdd(messages)) {\n            _this2.add([messages]);\n          }\n        }\n      });\n      this.clearSubscription = this.messageService.clearObserver.subscribe(function (key) {\n        if (key) {\n          if (_this2.key === key) {\n            _this2.messages = null;\n          }\n        } else {\n          _this2.messages = null;\n        }\n\n        _this2.cd.markForCheck();\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(messages) {\n      this.messages = this.messages ? [].concat(_toConsumableArray(this.messages), _toConsumableArray(messages)) : _toConsumableArray(messages);\n\n      if (this.preventDuplicates) {\n        this.messagesArchieve = this.messagesArchieve ? [].concat(_toConsumableArray(this.messagesArchieve), _toConsumableArray(messages)) : _toConsumableArray(messages);\n      }\n\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"canAdd\",\n    value: function canAdd(message) {\n      var allow = this.key === message.key;\n\n      if (allow && this.preventOpenDuplicates) {\n        allow = !this.containsMessage(this.messages, message);\n      }\n\n      if (allow && this.preventDuplicates) {\n        allow = !this.containsMessage(this.messagesArchieve, message);\n      }\n\n      return allow;\n    }\n  }, {\n    key: \"containsMessage\",\n    value: function containsMessage(collection, message) {\n      if (!collection) {\n        return false;\n      }\n\n      return collection.find(function (m) {\n        return m.summary === message.summary && m.detail == message.detail && m.severity === message.severity;\n      }) != null;\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this3 = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'message':\n            _this3.template = item.template;\n            break;\n\n          default:\n            _this3.template = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"onMessageClose\",\n    value: function onMessageClose(event) {\n      this.messages.splice(event.index, 1);\n      this.onClose.emit({\n        message: event.message\n      });\n      this.cd.detectChanges();\n    }\n  }, {\n    key: \"onAnimationStart\",\n    value: function onAnimationStart(event) {\n      if (event.fromState === 'void' && this.autoZIndex) {\n        this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + ++DomHandler.zindex);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.messageSubscription) {\n        this.messageSubscription.unsubscribe();\n      }\n\n      if (this.clearSubscription) {\n        this.clearSubscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return Toast;\n}();\n\nToast.ɵfac = function Toast_Factory(t) {\n  return new (t || Toast)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.MessageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nToast.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Toast,\n  selectors: [[\"p-toast\"]],\n  contentQueries: function Toast_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Toast_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n    }\n  },\n  inputs: {\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    position: \"position\",\n    preventOpenDuplicates: \"preventOpenDuplicates\",\n    preventDuplicates: \"preventDuplicates\",\n    showTransformOptions: \"showTransformOptions\",\n    hideTransformOptions: \"hideTransformOptions\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    key: \"key\",\n    style: \"style\",\n    styleClass: \"styleClass\"\n  },\n  outputs: {\n    onClose: \"onClose\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [3, \"message\", \"index\", \"template\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\", \"onClose\", 4, \"ngFor\", \"ngForOf\"], [3, \"message\", \"index\", \"template\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\", \"onClose\"]],\n  template: function Toast_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵtemplate(2, Toast_p_toastItem_2_Template, 1, 8, \"p-toastItem\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", \"p-toast p-component p-toast-\" + ctx.position)(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.messages);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ToastItem],\n  styles: [\".p-toast{position:fixed;width:25rem}.p-toast-message{overflow:hidden}.p-toast-message-content{align-items:flex-start;display:flex}.p-toast-message-text{flex:1 1 auto}.p-toast-top-right{right:20px;top:20px}.p-toast-top-left{left:20px;top:20px}.p-toast-bottom-left{bottom:20px;left:20px}.p-toast-bottom-right{bottom:20px;right:20px}.p-toast-top-center{left:50%;margin-left:-10em;top:20px}.p-toast-bottom-center{bottom:20px;left:50%;margin-left:-10em}.p-toast-center{left:50%;min-width:20vw;top:50%;transform:translate(-50%,-50%)}.p-toast-icon-close{align-items:center;display:flex;justify-content:center;overflow:hidden;position:relative}.p-toast-icon-close.p-link{cursor:pointer}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('toastAnimation', [transition(':enter, :leave', [query('@*', animateChild())])])]\n  },\n  changeDetection: 0\n});\n\nToast.ctorParameters = function () {\n  return [{\n    type: MessageService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nToast.propDecorators = {\n  key: [{\n    type: Input\n  }],\n  autoZIndex: [{\n    type: Input\n  }],\n  baseZIndex: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  position: [{\n    type: Input\n  }],\n  preventOpenDuplicates: [{\n    type: Input\n  }],\n  preventDuplicates: [{\n    type: Input\n  }],\n  showTransformOptions: [{\n    type: Input\n  }],\n  hideTransformOptions: [{\n    type: Input\n  }],\n  showTransitionOptions: [{\n    type: Input\n  }],\n  hideTransitionOptions: [{\n    type: Input\n  }],\n  onClose: [{\n    type: Output\n  }],\n  containerViewChild: [{\n    type: ViewChild,\n    args: ['container']\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Toast, [{\n    type: Component,\n    args: [{\n      selector: 'p-toast',\n      template: \"\\n        <div #container [ngClass]=\\\"'p-toast p-component p-toast-' + position\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <p-toastItem *ngFor=\\\"let msg of messages; let i=index\\\" [message]=\\\"msg\\\" [index]=\\\"i\\\" (onClose)=\\\"onMessageClose($event)\\\"\\n                    [template]=\\\"template\\\" @toastAnimation (@toastAnimation.start)=\\\"onAnimationStart($event)\\\" \\n                    [showTransformOptions]=\\\"showTransformOptions\\\" [hideTransformOptions]=\\\"hideTransformOptions\\\" \\n                    [showTransitionOptions]=\\\"showTransitionOptions\\\" [hideTransitionOptions]=\\\"hideTransitionOptions\\\"></p-toastItem>\\n        </div>\\n    \",\n      animations: [trigger('toastAnimation', [transition(':enter, :leave', [query('@*', animateChild())])])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-toast{position:fixed;width:25rem}.p-toast-message{overflow:hidden}.p-toast-message-content{align-items:flex-start;display:flex}.p-toast-message-text{flex:1 1 auto}.p-toast-top-right{right:20px;top:20px}.p-toast-top-left{left:20px;top:20px}.p-toast-bottom-left{bottom:20px;left:20px}.p-toast-bottom-right{bottom:20px;right:20px}.p-toast-top-center{left:50%;margin-left:-10em;top:20px}.p-toast-bottom-center{bottom:20px;left:50%;margin-left:-10em}.p-toast-center{left:50%;min-width:20vw;top:50%;transform:translate(-50%,-50%)}.p-toast-icon-close{align-items:center;display:flex;justify-content:center;overflow:hidden;position:relative}.p-toast-icon-close.p-link{cursor:pointer}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc3.MessageService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    preventOpenDuplicates: [{\n      type: Input\n    }],\n    preventDuplicates: [{\n      type: Input\n    }],\n    showTransformOptions: [{\n      type: Input\n    }],\n    hideTransformOptions: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    onClose: [{\n      type: Output\n    }],\n    key: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar ToastModule = function ToastModule() {\n  _classCallCheck(this, ToastModule);\n};\n\nToastModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ToastModule\n});\nToastModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ToastModule_Factory(t) {\n    return new (t || ToastModule)();\n  },\n  imports: [[CommonModule, RippleModule], SharedModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastModule, {\n    declarations: function declarations() {\n      return [Toast, ToastItem];\n    },\n    imports: function imports() {\n      return [CommonModule, RippleModule];\n    },\n    exports: function exports() {\n      return [Toast, SharedModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RippleModule],\n      exports: [Toast, SharedModule],\n      declarations: [Toast, ToastItem]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Toast, ToastItem, ToastModule };","map":{"version":3,"sources":["../../src/app/components/toast/toast.ts","../../src/app/components/toast/primeng-toast.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,OnInit,AfterViewInit,AfterContentInit,OnDestroy,ElementRef,ViewChild,EventEmitter,ContentChildren,QueryList,TemplateRef,ChangeDetectionStrategy, NgZone, ChangeDetectorRef, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Message} from 'primeng/api';\nimport {DomHandler} from 'primeng/dom';\nimport {PrimeTemplate,SharedModule} from 'primeng/api';\nimport {MessageService} from 'primeng/api';\nimport {RippleModule} from 'primeng/ripple';\nimport {Subscription} from 'rxjs';\nimport {trigger,state,style,transition,animate,query,animateChild,AnimationEvent} from '@angular/animations';\n\n@Component({\n    selector: 'p-toastItem',\n    template: `\n        <div #container [attr.id]=\"message.id\" class=\"p-toast-message\" [ngClass]=\"'p-toast-message-' + message.severity\" [@messageState]=\"{value: 'visible', params: {showTransformParams: showTransformOptions, hideTransformParams: hideTransformOptions, showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n                (mouseenter)=\"onMouseEnter()\" (mouseleave)=\"onMouseLeave()\">\n            <div class=\"p-toast-message-content\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                <ng-container *ngIf=\"!template\">\n                    <span [class]=\"'p-toast-message-icon pi' + (message.icon ? ' ' + message.icon : '')\" [ngClass]=\"{'pi-info-circle': message.severity == 'info', 'pi-exclamation-triangle': message.severity == 'warn',\n                        'pi-times-circle': message.severity == 'error', 'pi-check' :message.severity == 'success'}\"></span>\n                    <div class=\"p-toast-message-text\">\n                        <div class=\"p-toast-summary\">{{message.summary}}</div>\n                        <div class=\"p-toast-detail\">{{message.detail}}</div>\n                    </div>\n                </ng-container>\n                <button type=\"button\" class=\"p-toast-icon-close p-link\" (click)=\"onCloseIconClick($event)\" (keydown.enter)=\"onCloseIconClick($event)\" *ngIf=\"message.closable !== false\" pRipple>\n                    <span class=\"p-toast-icon-close-icon pi pi-times\"></span>\n                </button>\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: message}\"></ng-container>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('messageState', [\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => *', [\n                style({transform: '{{showTransformParams}}', opacity: 0}),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition('* => void', [\n                animate(('{{hideTransitionParams}}'), style({\n                    height: 0,\n                    opacity: 0,\n                    transform: '{{hideTransformParams}}'\n                }))\n            ])\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToastItem implements AfterViewInit, OnDestroy {\n\n    @Input() message: Message;\n\n    @Input() index: number;\n\n    @Input() template: TemplateRef<any>;\n\n    @Input() showTransformOptions: string;\n\n    @Input() hideTransformOptions: string;\n\n    @Input() showTransitionOptions: string;\n\n    @Input() hideTransitionOptions: string;\n\n    @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    timeout: any;\n\n    constructor(private zone: NgZone) {}\n    \n    ngAfterViewInit() {\n        this.initTimeout();\n    }\n\n    initTimeout() {\n        if (!this.message.sticky) {\n            this.zone.runOutsideAngular(() => {\n                this.timeout = setTimeout(() => {\n                    this.onClose.emit({\n                        index: this.index,\n                        message: this.message\n                    });\n                }, this.message.life || 3000);\n            });\n        }\n    }\n\n    clearTimeout() {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n    }\n    \n    onMouseEnter() {\n        this.clearTimeout();\n    }\n\n    onMouseLeave() {\n        this.initTimeout();\n    }\n \n    onCloseIconClick(event) {\n        this.clearTimeout();\n        \n        this.onClose.emit({\n            index: this.index,\n            message: this.message\n        });\n\n        event.preventDefault();\n    }\n\n    ngOnDestroy() {\n        this.clearTimeout();\n    }\n}\n\n@Component({\n    selector: 'p-toast',\n    template: `\n        <div #container [ngClass]=\"'p-toast p-component p-toast-' + position\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <p-toastItem *ngFor=\"let msg of messages; let i=index\" [message]=\"msg\" [index]=\"i\" (onClose)=\"onMessageClose($event)\"\n                    [template]=\"template\" @toastAnimation (@toastAnimation.start)=\"onAnimationStart($event)\" \n                    [showTransformOptions]=\"showTransformOptions\" [hideTransformOptions]=\"hideTransformOptions\" \n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-toastItem>\n        </div>\n    `,\n    animations: [\n        trigger('toastAnimation', [\n            transition(':enter, :leave', [\n                query('@*', animateChild())\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./toast.css']\n})\nexport class Toast implements OnInit,AfterContentInit,OnDestroy {\n\n    @Input() key: string;\n\n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n\n    @Input() style: any;\n        \n    @Input() styleClass: string;\n\n    @Input() position: string = 'top-right';\n\n    @Input() preventOpenDuplicates: boolean = false;\n\n    @Input() preventDuplicates: boolean = false;\n    \n    @Input() showTransformOptions: string = 'translateY(100%)';\n\n    @Input() hideTransformOptions: string = 'translateY(-100%)';\n\n    @Input() showTransitionOptions: string = '300ms ease-out';\n\n    @Input() hideTransitionOptions: string = '250ms ease-in';\n\n    @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    messageSubscription: Subscription;\n\n    clearSubscription: Subscription;\n\n    messages: Message[];\n\n    messagesArchieve: Message[];\n\n    template: TemplateRef<any>;\n    \n    constructor(public messageService: MessageService, private cd: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        this.messageSubscription = this.messageService.messageObserver.subscribe(messages => {\n            if (messages) {\n                if (messages instanceof Array) {\n                    const filteredMessages = messages.filter(m => this.canAdd(m));\n                    this.add(filteredMessages);\n                }\n                else if (this.canAdd(messages)) {\n                    this.add([messages]);\n                }\n            }\n        });\n\n        this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n            if (key) {\n                if (this.key === key) {\n                    this.messages = null;\n                }\n            }\n            else {\n                this.messages = null;\n            }\n\n            this.cd.markForCheck();\n        });       \n    }\n\n    add(messages: Message[]): void {\n        this.messages = this.messages ? [...this.messages, ...messages] : [...messages];\n\n        if (this.preventDuplicates) {\n            this.messagesArchieve = this.messagesArchieve ? [...this.messagesArchieve, ...messages] : [...messages];\n        }\n\n        this.cd.markForCheck();\n    }\n\n    canAdd(message: Message): boolean {\n        let allow = this.key === message.key;\n\n        if (allow && this.preventOpenDuplicates) {\n            allow = !this.containsMessage(this.messages, message);\n        }\n\n        if (allow && this.preventDuplicates) {\n            allow = !this.containsMessage(this.messagesArchieve, message);\n        }\n\n        return allow;\n    }\n\n    containsMessage(collection: Message[], message: Message): boolean {\n        if (!collection) {\n            return false;\n        }\n\n        return collection.find(m => {\n           return ((m.summary === message.summary) && (m.detail == message.detail) && (m.severity === message.severity));\n        }) != null;\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'message':\n                    this.template = item.template;\n                break;\n\n                default:\n                    this.template = item.template;\n                break;\n            }\n        });\n    }\n\n    onMessageClose(event) {\n        this.messages.splice(event.index, 1);\n\n        this.onClose.emit({\n            message: event.message\n        });\n\n        this.cd.detectChanges();\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        if (event.fromState === 'void' && this.autoZIndex) {\n            this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n\n    ngOnDestroy() {        \n        if (this.messageSubscription) {\n            this.messageSubscription.unsubscribe();\n        }\n        \n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RippleModule],\n    exports: [Toast,SharedModule],\n    declarations: [Toast,ToastItem]\n})\nexport class ToastModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}