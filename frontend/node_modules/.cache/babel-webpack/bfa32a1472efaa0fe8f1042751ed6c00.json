{"ast":null,"code":"import _classCallCheck from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/basis/template/p-lc-aprd_codigo_fonte/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { MenuModule } from 'primeng/menu';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'primeng/button';\nimport * as ɵngcc3 from 'primeng/menu';\nvar _c0 = [\"container\"];\nvar _c1 = [\"defaultbtn\"];\nvar _c2 = [\"menu\"];\n\nvar SplitButton = /*#__PURE__*/function () {\n  function SplitButton() {\n    _classCallCheck(this, SplitButton);\n\n    this.iconPos = 'left';\n    this.onClick = new EventEmitter();\n    this.onDropdownClick = new EventEmitter();\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n  }\n\n  _createClass(SplitButton, [{\n    key: \"onDefaultButtonClick\",\n    value: function onDefaultButtonClick(event) {\n      this.onClick.emit(event);\n    }\n  }, {\n    key: \"onDropdownButtonClick\",\n    value: function onDropdownButtonClick(event) {\n      this.onDropdownClick.emit(event);\n      this.menu.toggle({\n        currentTarget: this.containerViewChild.nativeElement,\n        relativeAlign: this.appendTo == null\n      });\n    }\n  }]);\n\n  return SplitButton;\n}();\n\nSplitButton.ɵfac = function SplitButton_Factory(t) {\n  return new (t || SplitButton)();\n};\n\nSplitButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: SplitButton,\n  selectors: [[\"p-splitButton\"]],\n  viewQuery: function SplitButton_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n      ɵngcc0.ɵɵviewQuery(_c1, 1);\n      ɵngcc0.ɵɵviewQuery(_c2, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.buttonViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n    }\n  },\n  inputs: {\n    iconPos: \"iconPos\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    model: \"model\",\n    icon: \"icon\",\n    label: \"label\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    menuStyle: \"menuStyle\",\n    menuStyleClass: \"menuStyleClass\",\n    disabled: \"disabled\",\n    tabindex: \"tabindex\",\n    appendTo: \"appendTo\",\n    dir: \"dir\"\n  },\n  outputs: {\n    onClick: \"onClick\",\n    onDropdownClick: \"onDropdownClick\"\n  },\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"type\", \"button\", \"pButton\", \"\", 1, \"p-splitbutton-defaultbutton\", 3, \"icon\", \"iconPos\", \"label\", \"disabled\", \"click\"], [\"defaultbtn\", \"\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-chevron-down\", 1, \"p-splitbutton-menubutton\", 3, \"disabled\", \"click\"], [3, \"popup\", \"model\", \"styleClass\", \"appendTo\", \"showTransitionOptions\", \"hideTransitionOptions\"], [\"menu\", \"\"]],\n  template: function SplitButton_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"button\", 2, 3);\n      ɵngcc0.ɵɵlistener(\"click\", function SplitButton_Template_button_click_2_listener($event) {\n        return ctx.onDefaultButtonClick($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"button\", 4);\n      ɵngcc0.ɵɵlistener(\"click\", function SplitButton_Template_button_click_4_listener($event) {\n        return ctx.onDropdownButtonClick($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(5, \"p-menu\", 5, 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", \"p-splitbutton p-component\")(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"icon\", ctx.icon)(\"iconPos\", ctx.iconPos)(\"label\", ctx.label)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx.tabindex);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleMap(ctx.menuStyle);\n      ɵngcc0.ɵɵproperty(\"popup\", true)(\"model\", ctx.model)(\"styleClass\", ctx.menuStyleClass)(\"appendTo\", ctx.appendTo)(\"showTransitionOptions\", ctx.showTransitionOptions)(\"hideTransitionOptions\", ctx.hideTransitionOptions);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc2.ButtonDirective, ɵngcc3.Menu],\n  styles: [\".p-splitbutton{display:inline-flex;position:relative}.p-splitbutton .p-splitbutton-defaultbutton{border-bottom-right-radius:0;border-right:0;border-top-right-radius:0;flex:1 1 auto}.p-splitbutton-menubutton{align-items:center;border-bottom-left-radius:0;border-top-left-radius:0;display:flex;justify-content:center}.p-splitbutton .p-menu{min-width:100%}.p-fluid .p-splitbutton{display:flex}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nSplitButton.propDecorators = {\n  model: [{\n    type: Input\n  }],\n  icon: [{\n    type: Input\n  }],\n  iconPos: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  onClick: [{\n    type: Output\n  }],\n  onDropdownClick: [{\n    type: Output\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  menuStyle: [{\n    type: Input\n  }],\n  menuStyleClass: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  appendTo: [{\n    type: Input\n  }],\n  dir: [{\n    type: Input\n  }],\n  showTransitionOptions: [{\n    type: Input\n  }],\n  hideTransitionOptions: [{\n    type: Input\n  }],\n  containerViewChild: [{\n    type: ViewChild,\n    args: ['container']\n  }],\n  buttonViewChild: [{\n    type: ViewChild,\n    args: ['defaultbtn']\n  }],\n  menu: [{\n    type: ViewChild,\n    args: ['menu']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SplitButton, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitButton',\n      template: \"\\n        <div #container [ngClass]=\\\"'p-splitbutton p-component'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <button #defaultbtn class=\\\"p-splitbutton-defaultbutton\\\" type=\\\"button\\\" pButton [icon]=\\\"icon\\\" [iconPos]=\\\"iconPos\\\" [label]=\\\"label\\\" (click)=\\\"onDefaultButtonClick($event)\\\" [disabled]=\\\"disabled\\\" [attr.tabindex]=\\\"tabindex\\\"></button>\\n            <button type=\\\"button\\\" pButton class=\\\"p-splitbutton-menubutton\\\" icon=\\\"pi pi-chevron-down\\\" (click)=\\\"onDropdownButtonClick($event)\\\" [disabled]=\\\"disabled\\\"></button>\\n            <p-menu #menu [popup]=\\\"true\\\" [model]=\\\"model\\\" [style]=\\\"menuStyle\\\" [styleClass]=\\\"menuStyleClass\\\" [appendTo]=\\\"appendTo\\\"\\n                    [showTransitionOptions]=\\\"showTransitionOptions\\\" [hideTransitionOptions]=\\\"hideTransitionOptions\\\"></p-menu>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-splitbutton{display:inline-flex;position:relative}.p-splitbutton .p-splitbutton-defaultbutton{border-bottom-right-radius:0;border-right:0;border-top-right-radius:0;flex:1 1 auto}.p-splitbutton-menubutton{align-items:center;border-bottom-left-radius:0;border-top-left-radius:0;display:flex;justify-content:center}.p-splitbutton .p-menu{min-width:100%}.p-fluid .p-splitbutton{display:flex}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    iconPos: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onDropdownClick: [{\n      type: Output\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    model: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    menuStyle: [{\n      type: Input\n    }],\n    menuStyleClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    dir: [{\n      type: Input\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    buttonViewChild: [{\n      type: ViewChild,\n      args: ['defaultbtn']\n    }],\n    menu: [{\n      type: ViewChild,\n      args: ['menu']\n    }]\n  });\n})();\n\nvar SplitButtonModule = function SplitButtonModule() {\n  _classCallCheck(this, SplitButtonModule);\n};\n\nSplitButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: SplitButtonModule\n});\nSplitButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function SplitButtonModule_Factory(t) {\n    return new (t || SplitButtonModule)();\n  },\n  imports: [[CommonModule, ButtonModule, MenuModule], ButtonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SplitButtonModule, {\n    declarations: function declarations() {\n      return [SplitButton];\n    },\n    imports: function imports() {\n      return [CommonModule, ButtonModule, MenuModule];\n    },\n    exports: function exports() {\n      return [SplitButton, ButtonModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SplitButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ButtonModule, MenuModule],\n      exports: [SplitButton, ButtonModule],\n      declarations: [SplitButton]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SplitButton, SplitButtonModule };","map":{"version":3,"sources":["../../src/app/components/splitbutton/splitbutton.ts","../../src/app/components/splitbutton/primeng-splitbutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,Input,Output,EventEmitter,ViewChild,ChangeDetectionStrategy,ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MenuItem} from 'primeng/api';\nimport {ButtonModule} from 'primeng/button';\nimport {MenuModule, Menu} from 'primeng/menu';\n\n@Component({\n    selector: 'p-splitButton',\n    template: `\n        <div #container [ngClass]=\"'p-splitbutton p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <button #defaultbtn class=\"p-splitbutton-defaultbutton\" type=\"button\" pButton [icon]=\"icon\" [iconPos]=\"iconPos\" [label]=\"label\" (click)=\"onDefaultButtonClick($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\"></button>\n            <button type=\"button\" pButton class=\"p-splitbutton-menubutton\" icon=\"pi pi-chevron-down\" (click)=\"onDropdownButtonClick($event)\" [disabled]=\"disabled\"></button>\n            <p-menu #menu [popup]=\"true\" [model]=\"model\" [style]=\"menuStyle\" [styleClass]=\"menuStyleClass\" [appendTo]=\"appendTo\"\n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-menu>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./splitbutton.css']\n})\nexport class SplitButton {\n\n    @Input() model: MenuItem[];\n\n    @Input() icon: string;\n\n    @Input() iconPos: string = 'left';\n        \n    @Input() label: string;\n    \n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onDropdownClick: EventEmitter<any> = new EventEmitter();\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() menuStyle: any;\n    \n    @Input() menuStyleClass: string;\n    \n    @Input() disabled: boolean;\n\n    @Input() tabindex: number;\n    \n    @Input() appendTo: any;\n    \n    @Input() dir: string;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @ViewChild('container') containerViewChild: ElementRef;\n    \n    @ViewChild('defaultbtn') buttonViewChild: ElementRef;\n\n    @ViewChild('menu') menu: Menu;\n\n    onDefaultButtonClick(event: Event) {\n        this.onClick.emit(event);\n    }\n          \n    onDropdownButtonClick(event: Event) {\n        this.onDropdownClick.emit(event);\n        this.menu.toggle({currentTarget: this.containerViewChild.nativeElement, relativeAlign: this.appendTo == null});\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,ButtonModule,MenuModule],\n    exports: [SplitButton,ButtonModule],\n    declarations: [SplitButton]\n})\nexport class SplitButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}