{"version":3,"file":"jwt-token.service.d.ts","sources":["jwt-token.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpRequest, HttpHeaders } from \"@angular/common/http\";\nimport { Token } from './token';\nimport { AuthConfig } from '../config/auth-config';\n/**\n * Inplementação de serviço JWTTokenService\n * @class\n */\nexport declare class JWTTokenService extends Token {\n    private config;\n    /**\n     * TOKEN_PREFIX  property\n     * @type {string}\n     */\n    static readonly TOKEN_PREFIX = \"Bearer\";\n    /**\n     * HEADER_STRING property\n     * @type {string}\n     */\n    static readonly HEADER_STRING = \"Authorization\";\n    /**\n     * Metodo construtor responsável por injetar as configurações de autenticação\n     * @constructor\n     * @param {AuthConfig} config\n     */\n    constructor(config: AuthConfig);\n    /**\n     * Metodo responsável pela extração de tokes do heaedrs das requisições\n     * @public\n     * @param {HttpHeaders} headers\n     * @returns string\n     */\n    extractTokenFromHeaders(headers: HttpHeaders): String;\n    /**\n     * Metodo responsável pela adição dos tokens no storage\n     * @public\n     * @param {String} token\n     * @returns void\n     */\n    storeToken(token: String): void;\n    /**\n     * Metodo responsável por injetar token no header das requisições\n     * @public\n     * @param {HttpRequest<any>} request\n     * @returns HttpRequest<any>\n     */\n    setTokenInHeader(request: HttpRequest<any>): HttpRequest<any>;\n    /**\n     * Metodo responsável por verificar a existencia de um token de autenticação\n     * @returns boolean\n     * @public\n     */\n    hasToken(): boolean;\n}\n"]}